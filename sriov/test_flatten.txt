{
  "result": {
    "heat_resource_tree": {
      "resources": {
        "c043d4bb-59fc-4f26-b84a-9c4432eec14e": {
          "name": "HAProxyBase",
          "resources": [
            "0dfca828-179d-4512-baf2-3c0079c3940e"
          ],
          "id": "c043d4bb-59fc-4f26-b84a-9c4432eec14e",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/pacemaker/haproxy.yaml",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "HAproxy service with Pacemaker configured with Puppet\n"
        },
        "e7e74b0b-4ada-4a08-9762-027ee13a07db": {
          "name": "10",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "OpenStack Ceilometer Collector service, disabled since pike\n",
          "type": "OS::TripleO::Services::CeilometerCollector",
          "id": "e7e74b0b-4ada-4a08-9762-027ee13a07db"
        },
        "9e55086e-0434-4dff-8213-32293d82fab1": {
          "name": "RedisBase",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "RedisPassword",
            "RedisFDLimit",
            "RoleName",
            "EndpointMap",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "OpenStack Redis service configured with Puppet\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/database/redis-base.yaml",
          "id": "9e55086e-0434-4dff-8213-32293d82fab1"
        },
        "0404df4e-f69b-4351-a83d-341a8390c72f": {
          "name": "MySQLClient",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Mysql client settings\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/database/mysql-client.yaml",
          "id": "0404df4e-f69b-4351-a83d-341a8390c72f"
        },
        "37dbc9b6-56ab-47c4-b9bb-fd2fbf1e090b": {
          "name": "43",
          "resources": [
            "95b7c363-ea20-4209-8108-37786193984d",
            "ca056fd1-d30a-477f-a678-78fb2eab3a08"
          ],
          "id": "37dbc9b6-56ab-47c4-b9bb-fd2fbf1e090b",
          "type": "OS::TripleO::Services::HeatApi",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "RoleParameters",
            "EndpointMap",
            "RoleName",
            "DockerHeatApiConfigImage",
            "EnableInternalTLS",
            "DockerHeatApiImage"
          ],
          "description": "OpenStack containerized Heat API service\n"
        },
        "dbdd9b44-9737-4d28-9e4c-8d00645db87a": {
          "name": "ControllerDeployment_Step1",
          "parameters": [],
          "description": "No description",
          "type": "OS::TripleO::DeploymentSteps",
          "id": "dbdd9b44-9737-4d28-9e4c-8d00645db87a"
        },
        "94a00338-95a3-4bc3-974f-61967564be03": {
          "name": "33",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "DockerInsecureRegistryAddress",
            "RoleName",
            "RoleParameters"
          ],
          "description": "Configures docker on the host\n",
          "type": "OS::TripleO::Services::Docker",
          "id": "94a00338-95a3-4bc3-974f-61967564be03"
        },
        "adeb589d-c193-426e-bb62-30df81cc12e1": {
          "name": "MySQLClient",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Mysql client settings\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/database/mysql-client.yaml",
          "id": "adeb589d-c193-426e-bb62-30df81cc12e1"
        },
        "7682c318-59bf-47cd-a266-3f1ae66d3d22": {
          "name": "30",
          "resources": [
            "4b3fb869-d703-46a8-a523-a43899e71da1",
            "38d21f94-13e2-492c-9f4b-68ffa1855963"
          ],
          "id": "7682c318-59bf-47cd-a266-3f1ae66d3d22",
          "type": "OS::TripleO::Services::Clustercheck",
          "parameters": [
            "DefaultPasswords",
            "DockerClustercheckImage",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "DockerClustercheckConfigImage",
            "RoleParameters"
          ],
          "description": "MySQL HA clustercheck service deployment using puppet This service is used by HAProxy in a HA scenario to report whether the local galera node is synced\n"
        },
        "63c662de-0818-41d3-988a-f42d698e8c1a": {
          "name": "NetworkConfig",
          "parameters": [
            "LocalProvisioningNicName",
            "TenantIpSubnet",
            "ManagementInterfaceDefaultRoute",
            "ControlPlaneIp",
            "EC2MetadataIp",
            "StorageMgmtNetworkVlanID",
            "ManagementIpSubnet",
            "ExternalIpSubnet",
            "ControlPlaneSubnetCidr",
            "TenantNetworkVlanID",
            "ManagementNetworkVlanID",
            "StorageIpSubnet",
            "ControlPlaneDefaultRoute",
            "DnsServers",
            "StorageMgmtIpSubnet",
            "StorageNetworkVlanID",
            "ExternalNetworkVlanID",
            "InternalApiNetworkVlanID",
            "InternalApiIpSubnet",
            "ExternalInterfaceDefaultRoute"
          ],
          "description": "Software Config to drive os-net-config with 2 bonded nics on a bridge with VLANs attached for the controller role.\n",
          "type": "OS::TripleO::Controller::Net::SoftwareConfig",
          "id": "63c662de-0818-41d3-988a-f42d698e8c1a"
        },
        "f2c457ee-c01e-4e8b-8cb6-01be31717cdc": {
          "name": "110",
          "resources": [
            "9d1f87b6-ff54-49f5-a590-7630dc735222",
            "7ab29661-ab3e-47b5-9737-1b6acccef564"
          ],
          "id": "f2c457ee-c01e-4e8b-8cb6-01be31717cdc",
          "type": "OS::TripleO::Services::SwiftProxy",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "DockerSwiftConfigImage",
            "ServiceData",
            "RoleParameters",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "DockerSwiftProxyImage"
          ],
          "description": "OpenStack containerized swift proxy service\n"
        },
        "eaf61fcb-8a76-41d8-b28d-99798579c407": {
          "name": "AodhBase",
          "parameters": [
            "RedisPassword",
            "NotificationDriver",
            "KeystoneRegion",
            "AodhPassword",
            "RabbitClientPort",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "ServiceNetMap",
            "RoleParameters",
            "DefaultPasswords",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "RoleName",
            "ServiceData",
            "AodhDebug"
          ],
          "description": "OpenStack Aodh service configured with Puppet\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/aodh-base.yaml",
          "id": "eaf61fcb-8a76-41d8-b28d-99798579c407"
        },
        "4d933c6c-5524-464c-aa77-5ba03017a7bd": {
          "name": "MySQLClient",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Mysql client settings\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/database/mysql-client.yaml",
          "id": "4d933c6c-5524-464c-aa77-5ba03017a7bd"
        },
        "19e65677-ea39-491f-8fbb-4097d5719623": {
          "name": "64",
          "resources": [
            "5cc5b190-f3a6-43fd-920f-17c77fbc738c",
            "e06b92ec-2356-4f0a-8bcf-126cfb825764"
          ],
          "id": "19e65677-ea39-491f-8fbb-4097d5719623",
          "type": "OS::TripleO::Services::Memcached",
          "parameters": [
            "DefaultPasswords",
            "DockerMemcachedImage",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "DockerMemcachedConfigImage",
            "RoleName",
            "RoleParameters"
          ],
          "description": "OpenStack containerized Memcached services\n"
        },
        "d471d902-2b49-409c-87f4-b288e1ff388f": {
          "name": "ControllerDeployment_Step5",
          "parameters": [],
          "description": "No description",
          "type": "OS::TripleO::DeploymentSteps",
          "id": "d471d902-2b49-409c-87f4-b288e1ff388f"
        },
        "b30c837e-c640-4756-8b67-af1f999ba16c": {
          "name": "3",
          "resources": [
            "547a13b0-9c50-4ddd-a877-b446873b27f3",
            "7dbf8d83-3677-4c30-9cfb-d581abb9fb6b",
            "dbc06c8b-ca53-42a3-bff1-e6384c9a7d9c"
          ],
          "id": "b30c837e-c640-4756-8b67-af1f999ba16c",
          "type": "OS::TripleO::Services::AodhNotifier",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "DockerAodhConfigImage",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "DockerAodhNotifierImage",
            "RoleParameters"
          ],
          "description": "OpenStack containerized Aodh Notifier service\n"
        },
        "827fea01-e0ca-4b5b-a864-bcb6376a17cd": {
          "name": "CinderBase",
          "parameters": [
            "CinderCronDbPurgeUser",
            "DefaultPasswords",
            "CinderCronDbPurgeMinute",
            "RabbitClientPort",
            "RabbitClientUseSSL",
            "CinderDebug",
            "CinderCronDbPurgeHour",
            "ServiceNetMap",
            "CinderCronDbPurgeDestination",
            "RabbitPassword",
            "ServiceData",
            "CinderCronDbPurgeMonthday",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "RoleName",
            "CinderCronDbPurgeAge",
            "CinderCronDbPurgeWeekday",
            "CinderCronDbPurgeMonth",
            "CinderPassword",
            "RoleParameters"
          ],
          "description": "OpenStack Cinder base service. Shared by all Cinder services.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/cinder-base.yaml",
          "id": "827fea01-e0ca-4b5b-a864-bcb6376a17cd"
        },
        "e59b2363-ccc8-46d4-9105-45ffe4542fc0": {
          "name": "InternalApiPort",
          "parameters": [
            "FixedIPs",
            "NodeIndex",
            "ControlPlaneNetwork",
            "ControlPlaneIP",
            "PortName",
            "IPPool",
            "InternalApiNetName"
          ],
          "description": "Creates a port on the InternalApi network. The IP address will be chosen automatically if FixedIPs is empty.\n",
          "type": "OS::TripleO::Controller::Ports::InternalApiPort",
          "id": "e59b2363-ccc8-46d4-9105-45ffe4542fc0"
        },
        "2d727c45-2960-4a61-b325-bbd7a4033541": {
          "name": "HeatBase",
          "parameters": [
            "HeatCronPurgeDeletedMonthday",
            "HeatCronPurgeDeletedHour",
            "NotificationDriver",
            "RoleName",
            "HeatPassword",
            "HeatMaxJsonBodySize",
            "DefaultPasswords",
            "RabbitClientPort",
            "ServiceNetMap",
            "HeatDebug",
            "RoleParameters",
            "HeatCronPurgeDeletedAgeType",
            "HeatCronPurgeDeletedMaxDelay",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "HeatCronPurgeDeletedMonth",
            "HeatCronPurgeDeletedUser",
            "HeatCronPurgeDeletedAge",
            "HeatCronPurgeDeletedEnsure",
            "HeatCronPurgeDeletedMinute",
            "HeatCronPurgeDeletedDestination",
            "HeatCronPurgeDeletedWeekday"
          ],
          "description": "Openstack Heat base service. Shared for all Heat services.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/heat-base.yaml",
          "id": "2d727c45-2960-4a61-b325-bbd7a4033541"
        },
        "b46a35a3-5a99-465d-93f0-55076a512c5a": {
          "name": "44",
          "resources": [
            "33f210fc-88d5-48f0-8457-3725e47f43c5",
            "a817249e-81c6-467d-8d4b-4bbe89f8fc07"
          ],
          "id": "b46a35a3-5a99-465d-93f0-55076a512c5a",
          "type": "OS::TripleO::Services::HeatApiCfn",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "DockerHeatApiCfnImage",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "DockerHeatApiCfnConfigImage",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "OpenStack containerized Heat API CFN service\n"
        },
        "56ff9bdb-e701-41ee-9e75-fd573a3c08b4": {
          "name": "RabbitmqBase",
          "parameters": [
            "DefaultPasswords",
            "RabbitFDLimit",
            "RabbitIPv6",
            "ServiceNetMap",
            "RabbitCookie",
            "RabbitPassword",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "RabbitHAQueues",
            "RoleName",
            "EnableInternalTLS",
            "MonitoringSubscriptionRabbitmq",
            "RoleParameters"
          ],
          "description": "RabbitMQ service configured with Puppet\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/rabbitmq.yaml",
          "id": "56ff9bdb-e701-41ee-9e75-fd573a3c08b4"
        },
        "72867d6c-fd31-4114-8b03-6518ced443b4": {
          "name": "AllNodesValidationConfig",
          "parameters": [
            "ValidateNtp",
            "PingTestIps",
            "ValidateFqdn"
          ],
          "description": "Software Config to drive validations that occur on all nodes. Note, you need the heat-config-script element built into your images, due to the script group below.\n",
          "type": "OS::TripleO::AllNodes::Validation",
          "id": "72867d6c-fd31-4114-8b03-6518ced443b4"
        },
        "fd3717cc-dcfc-4778-90b0-aefe16c7258f": {
          "name": "109",
          "parameters": [
            "DefaultPasswords",
            "SshServerOptions",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "BannerText",
            "RoleName",
            "MessageOfTheDay",
            "RoleParameters"
          ],
          "description": "Configure sshd_config\n",
          "type": "OS::TripleO::Services::Sshd",
          "id": "fd3717cc-dcfc-4778-90b0-aefe16c7258f"
        },
        "48b87cb8-6422-4ee1-b16c-581e39cdade7": {
          "name": "103",
          "resources": [
            "3ee59135-0548-4ab7-9a76-91c63c4c06fa",
            "95d16705-11e8-4f66-a1a2-74f73d07be43"
          ],
          "id": "48b87cb8-6422-4ee1-b16c-581e39cdade7",
          "type": "OS::TripleO::Services::Redis",
          "parameters": [
            "DefaultPasswords",
            "DockerRedisImage",
            "DockerRedisConfigImage",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "OpenStack containerized Redis services\n"
        },
        "c49c43b8-aa1a-4976-86fb-5cc9283e177b": {
          "name": "PreNetworkConfig",
          "parameters": [
            "OvsEnableDpdk",
            "deployment_actions",
            "OvsDpdkSocketMemory",
            "OvsDpdkCoreList",
            "EnableDpdkDeploymentActions",
            "NeutronDpdkSocketMemory",
            "NeutronDpdkMemoryChannels",
            "server",
            "RoleParameters",
            "OvsPmdCoreList",
            "HostCpusList",
            "NeutronDpdkCoreList",
            "OvsDpdkMemoryChannels",
            "ServiceNames"
          ],
          "description": "All configurations which require reboot should be initiated via PreNetworkConfig. After this configuration is completed, the corresponding node will be rebooted.\n",
          "type": "OS::TripleO::ComputeSriov::PreNetworkConfig",
          "id": "c49c43b8-aa1a-4976-86fb-5cc9283e177b"
        },
        "b75194f1-9240-4ba2-88d6-1a19995944b1": {
          "name": "TenantPort",
          "parameters": [
            "FixedIPs",
            "NodeIndex",
            "ControlPlaneNetwork",
            "TenantNetName",
            "ControlPlaneIP",
            "PortName",
            "IPPool"
          ],
          "description": "Creates a port on the Tenant network. The IP address will be chosen automatically if FixedIPs is empty.\n",
          "type": "OS::TripleO::ComputeSriov::Ports::TenantPort",
          "id": "b75194f1-9240-4ba2-88d6-1a19995944b1"
        },
        "0ba615e3-fed5-4a7b-974a-82c5defbecd6": {
          "name": "RoleUserData",
          "parameters": [],
          "description": "This is a default no-op template which provides empty user-data which can be passed to the OS::Nova::Server resources. This template can be replaced with a different implementation via the resource registry, such that deployers may customize their first-boot configuration.\n",
          "type": "OS::TripleO::ComputeSriov::NodeUserData",
          "id": "0ba615e3-fed5-4a7b-974a-82c5defbecd6"
        },
        "3350f83f-1a45-456e-8f06-54456cf85d7b": {
          "name": "NovaBase",
          "parameters": [
            "NotificationDriver",
            "KeystoneRegion",
            "NovaCronArchiveDeleteRowsHour",
            "DatabaseSyncTimeout",
            "NovaOVSBridge",
            "RoleName",
            "NovaCronArchiveDeleteRowsUntilComplete",
            "DefaultPasswords",
            "RabbitClientPort",
            "ServiceNetMap",
            "NovaCronArchiveDeleteRowsMonth",
            "NovaCronArchiveDeleteRowsMonthday",
            "RoleParameters",
            "NovaCronArchiveDeleteRowsMinute",
            "NovaDebug",
            "NovaPlacementAPIInterface",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "NovaCronArchiveDeleteRowsUser",
            "UpgradeLevelNovaCompute",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "NovaCronArchiveDeleteRowsWeekday",
            "NovaPassword",
            "NovaCronArchiveDeleteRowsMaxRows",
            "NovaIPv6",
            "NeutronPassword",
            "EnableConfigPurge",
            "NovaCronArchiveDeleteRowsDestination"
          ],
          "description": "OpenStack Nova base service. Shared for all Nova services.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/nova-base.yaml",
          "id": "3350f83f-1a45-456e-8f06-54456cf85d7b"
        },
        "141af07b-c44d-41a9-85dd-0f5c6e5bd85b": {
          "name": "74",
          "resources": [
            "aa46c734-ab98-48c4-ab44-16b95949a285"
          ],
          "id": "141af07b-c44d-41a9-85dd-0f5c6e5bd85b",
          "type": "OS::TripleO::Services::NeutronL3Agent",
          "parameters": [
            "NeutronExternalNetworkBridge",
            "DefaultPasswords",
            "NeutronL3AgentLoggingSource",
            "MonitoringSubscriptionNeutronL3",
            "ServiceNetMap",
            "NeutronL3AgentMode",
            "EndpointMap",
            "Debug",
            "RoleName",
            "ServiceData",
            "RoleParameters"
          ],
          "description": "OpenStack Neutron L3 agent configured with Puppet\n"
        },
        "cdb62013-9485-4c87-a259-6b173d9f83c2": {
          "name": "ControllerIpListMap",
          "parameters": [
            "NetworkHostnameMap",
            "ExternalNetName",
            "TenantNetName",
            "StorageIpList",
            "TenantIpList",
            "EnabledServices",
            "ServiceHostnameList",
            "ServiceNetMap",
            "ExternalIpList",
            "ManagementIpList",
            "ManagementNetName",
            "StorageMgmtIpList",
            "StorageMgmtNetName",
            "StorageNetName",
            "InternalApiNetName",
            "ControlPlaneIpList",
            "InternalApiIpList"
          ],
          "description": "No description",
          "type": "OS::TripleO::Network::Ports::NetIpListMap",
          "id": "cdb62013-9485-4c87-a259-6b173d9f83c2"
        },
        "a2748d3f-3970-4d50-a8ab-522dd57ad4ff": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "a2748d3f-3970-4d50-a8ab-522dd57ad4ff"
        },
        "85429f4c-4d17-460b-961c-10062852ca0b": {
          "name": "ComputeSriovHostsDeployment",
          "parameters": [],
          "description": "No description",
          "type": "OS::Heat::StructuredDeployments",
          "id": "85429f4c-4d17-460b-961c-10062852ca0b"
        },
        "9dbb15f5-096b-4511-8286-6134614114da": {
          "name": "HeatBase",
          "parameters": [
            "HeatCronPurgeDeletedMonthday",
            "HeatCronPurgeDeletedHour",
            "NotificationDriver",
            "RoleName",
            "HeatPassword",
            "HeatMaxJsonBodySize",
            "DefaultPasswords",
            "RabbitClientPort",
            "ServiceNetMap",
            "HeatDebug",
            "RoleParameters",
            "HeatCronPurgeDeletedAgeType",
            "HeatCronPurgeDeletedMaxDelay",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "HeatCronPurgeDeletedMonth",
            "HeatCronPurgeDeletedUser",
            "HeatCronPurgeDeletedAge",
            "HeatCronPurgeDeletedEnsure",
            "HeatCronPurgeDeletedMinute",
            "HeatCronPurgeDeletedDestination",
            "HeatCronPurgeDeletedWeekday"
          ],
          "description": "Openstack Heat base service. Shared for all Heat services.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/heat-base.yaml",
          "id": "9dbb15f5-096b-4511-8286-6134614114da"
        },
        "9ebb8f46-a6dc-4230-83d7-e2d04a5e1db7": {
          "name": "PankoBase",
          "parameters": [
            "DefaultPasswords",
            "KeystoneRegion",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "PankoPassword",
            "Debug",
            "RoleName",
            "PankoDebug",
            "RoleParameters"
          ],
          "description": "OpenStack Panko service configured with Puppet\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/panko-base.yaml",
          "id": "9ebb8f46-a6dc-4230-83d7-e2d04a5e1db7"
        },
        "aae6b639-3f6d-4be7-b824-c61115ddec65": {
          "name": "SshHostPubKey",
          "parameters": [
            "deployment_actions",
            "server"
          ],
          "description": "This is a template which will fetch the ssh host public key.\n",
          "type": "OS::TripleO::Ssh::HostPubKey",
          "id": "aae6b639-3f6d-4be7-b824-c61115ddec65"
        },
        "e06b92ec-2356-4f0a-8bcf-126cfb825764": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "e06b92ec-2356-4f0a-8bcf-126cfb825764"
        },
        "4f895d40-35b0-4b99-9859-aab96ada0cfc": {
          "name": "NodeUserData",
          "parameters": [],
          "description": "This is an example showing how you can do firstboot configuration of the nodes via cloud-init.  To enable this, replace the default mapping of OS::TripleO::NodeUserData in ../overcloud_resource_registry*\n",
          "type": "OS::TripleO::NodeUserData",
          "id": "4f895d40-35b0-4b99-9859-aab96ada0cfc"
        },
        "7c31ca27-7bc5-483c-962a-5d8662d90285": {
          "name": "AodhEvaluatorBase",
          "resources": [
            "eaf61fcb-8a76-41d8-b28d-99798579c407"
          ],
          "id": "7c31ca27-7bc5-483c-962a-5d8662d90285",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/aodh-evaluator.yaml",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "MonitoringSubscriptionAodhEvaluator",
            "RoleParameters"
          ],
          "description": "OpenStack Aodh Evaluator service configured with Puppet\n"
        },
        "3965c7a1-00ea-4f62-9d58-dd4e0117987a": {
          "name": "VipMap",
          "parameters": [
            "TenantIpUri",
            "StorageIp",
            "ManagementIpSubnet",
            "ExternalNetName",
            "TenantNetName",
            "TenantIpSubnet",
            "TenantIp",
            "ExternalIpUri",
            "InternalApiIpUri",
            "InternalApiNetName",
            "ControlPlaneSubnetCidr",
            "InternalApiIpSubnet",
            "ManagementNetName",
            "ExternalIp",
            "StorageMgmtNetName",
            "ControlPlaneIp",
            "StorageIpSubnet",
            "ManagementIpUri",
            "StorageMgmtIpSubnet",
            "StorageIpUri",
            "StorageMgmtIpUri",
            "ExternalIpSubnet",
            "StorageMgmtIp",
            "InternalApiIp",
            "ManagementIp",
            "StorageNetName"
          ],
          "description": "No description",
          "type": "OS::TripleO::Network::Ports::NetVipMap",
          "id": "3965c7a1-00ea-4f62-9d58-dd4e0117987a"
        },
        "a1a0c7a3-4b12-446e-9004-8890648c3f38": {
          "name": "NodeUserData",
          "parameters": [],
          "description": "This is an example showing how you can do firstboot configuration of the nodes via cloud-init.  To enable this, replace the default mapping of OS::TripleO::NodeUserData in ../overcloud_resource_registry*\n",
          "type": "OS::TripleO::NodeUserData",
          "id": "a1a0c7a3-4b12-446e-9004-8890648c3f38"
        },
        "0015d5a3-d4c0-4c3e-bf83-93dd20f9cb21": {
          "name": "UpdateConfig",
          "parameters": [],
          "description": "Software-config for performing package updates using yum\n",
          "type": "OS::TripleO::Tasks::PackageUpdate",
          "id": "0015d5a3-d4c0-4c3e-bf83-93dd20f9cb21"
        },
        "19dad790-2b17-425e-bbb4-6d0b76842a47": {
          "name": "ServiceChain",
          "resources": [
            "0ae6ca9c-39b4-4945-9297-7d39d13a0c9f",
            "54f9b36b-8662-4106-93ff-66c47a8573b0",
            "24241090-6b79-42e7-8f7c-0fa9c0c0b5f3",
            "2ba78083-1ffa-4719-ab35-459ce345c852",
            "5342d841-d1e0-4902-a01a-61d4110e5424",
            "d08536e5-0c48-4f78-bc7b-a5a06237cdcd",
            "fb1335d5-e01f-495f-8834-ef6aec53afc7",
            "a8f6ef08-31a3-48c0-9a3e-c4cbf97c2cc7",
            "cf6edd93-1e69-4e2b-ad2c-020c609768c5",
            "52f34d31-a5ec-4112-87de-af58417dab97",
            "eb1bb16c-4cfe-4a71-9ad4-f64e40a22108",
            "52aa61de-8e29-41be-a8cc-bdc87196defb",
            "a567d010-4b29-47b1-8667-efa5472aa1e6",
            "93826c1e-efbd-476c-b091-57e8c3f9f88d",
            "1d19396c-324f-4629-8b4c-f1673fefde9c",
            "fab14901-7a68-486f-8e54-655cc6e1eba3",
            "15ece0dd-fc05-4623-9256-06acf51cd5c4",
            "45b5362b-4e0f-4be2-930a-699560435fdc"
          ],
          "id": "19dad790-2b17-425e-bbb4-6d0b76842a47",
          "type": "OS::Heat::ResourceChain",
          "parameters": [],
          "description": "No description"
        },
        "62cea89a-5844-4860-aee7-914dda89c999": {
          "name": "MysqlBase",
          "parameters": [
            "MysqlMaxConnections",
            "MysqlIncreaseFileLimit",
            "DefaultPasswords",
            "EnableGalera",
            "ServiceNetMap",
            "MysqlClustercheckPassword",
            "EndpointMap",
            "MysqlRootPassword",
            "RoleName",
            "ServiceData",
            "EnableInternalTLS",
            "NovaPassword",
            "RoleParameters"
          ],
          "description": "MySQL service deployment using puppet\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/database/mysql.yaml",
          "id": "62cea89a-5844-4860-aee7-914dda89c999"
        },
        "0927f82c-a51b-4686-a88f-efd3701f7478": {
          "name": "SwiftRingbuilderBase",
          "parameters": [
            "SwiftMinPartHours",
            "DefaultPasswords",
            "SwiftRingPutTempurl",
            "SwiftRawDisks",
            "ServiceNetMap",
            "SwiftUseLocalDir",
            "RoleParameters",
            "SwiftPartPower",
            "EndpointMap",
            "SwiftRingBuild",
            "RoleName",
            "ServiceData",
            "SwiftRingGetTempurl",
            "SwiftReplicas"
          ],
          "description": "OpenStack Swift Ringbuilder\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/swift-ringbuilder.yaml",
          "id": "0927f82c-a51b-4686-a88f-efd3701f7478"
        },
        "06e5fe7f-49d8-4a07-acab-0519919efc2d": {
          "name": "NovaMetadataBase",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "NovaWorkers",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "OpenStack Nova API service configured with Puppet\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/nova-metadata.yaml",
          "id": "06e5fe7f-49d8-4a07-acab-0519919efc2d"
        },
        "9bb8844b-2f15-4803-a047-69ca5eda3484": {
          "name": "45",
          "resources": [
            "0e3f18bf-19e1-4c36-9b3d-f22974c9e3f6",
            "9591eb22-3bb3-45a6-a24c-4df7e11ec010"
          ],
          "id": "9bb8844b-2f15-4803-a047-69ca5eda3484",
          "type": "OS::TripleO::Services::HeatApiCloudwatch",
          "parameters": [
            "DefaultPasswords",
            "HeatWorkers",
            "MonitoringSubscriptionHeatApiCloudwatch",
            "HeatApiCloudwatchLoggingSource",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Openstack Heat CloudWatch API service configured with Puppet\n"
        },
        "ef9800e1-56c3-4450-8b67-7cbc7a80bf6f": {
          "name": "NovaBase",
          "parameters": [
            "NotificationDriver",
            "KeystoneRegion",
            "NovaCronArchiveDeleteRowsHour",
            "DatabaseSyncTimeout",
            "NovaOVSBridge",
            "RoleName",
            "NovaCronArchiveDeleteRowsUntilComplete",
            "DefaultPasswords",
            "RabbitClientPort",
            "ServiceNetMap",
            "NovaCronArchiveDeleteRowsMonth",
            "NovaCronArchiveDeleteRowsMonthday",
            "RoleParameters",
            "NovaCronArchiveDeleteRowsMinute",
            "NovaDebug",
            "NovaPlacementAPIInterface",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "NovaCronArchiveDeleteRowsUser",
            "UpgradeLevelNovaCompute",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "NovaCronArchiveDeleteRowsWeekday",
            "NovaPassword",
            "NovaCronArchiveDeleteRowsMaxRows",
            "NovaIPv6",
            "NeutronPassword",
            "EnableConfigPurge",
            "NovaCronArchiveDeleteRowsDestination"
          ],
          "description": "OpenStack Nova base service. Shared for all Nova services.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/nova-base.yaml",
          "id": "ef9800e1-56c3-4450-8b67-7cbc7a80bf6f"
        },
        "91e88cc1-f469-4473-8a5c-fdda7b288f71": {
          "name": "NovaLibvirtBase",
          "resources": [
            "48fe2e69-1947-48a8-9c47-42bb6e063945"
          ],
          "id": "91e88cc1-f469-4473-8a5c-fdda7b288f71",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/nova-libvirt.yaml",
          "parameters": [
            "UseTLSTransportForLiveMigration",
            "DefaultPasswords",
            "NovaComputeLibvirtType",
            "MigrationSshKey",
            "CinderEnableRbdBackend",
            "CephClusterFSID",
            "ServiceNetMap",
            "InternalTLSCAFile",
            "MonitoringSubscriptionNovaLibvirt",
            "CephClientKey",
            "RoleParameters",
            "MigrationSshPort",
            "EndpointMap",
            "RoleName",
            "ServiceData",
            "LibvirtEnabledPerfEvents",
            "LibvirtCACert",
            "CephClientUserName",
            "EnableInternalTLS"
          ],
          "description": "Libvirt service configured with Puppet\n"
        },
        "dd29fa58-4b55-40ae-a61c-9852c48962b2": {
          "name": "GnocchiApiPuppetBase",
          "resources": [
            "858091b0-c8fe-478c-8619-39258f1b5d2d",
            "3d849c49-7c4d-4d6b-9bb1-f3b447372cb6"
          ],
          "id": "dd29fa58-4b55-40ae-a61c-9852c48962b2",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/gnocchi-api.yaml",
          "parameters": [
            "DefaultPasswords",
            "KeystoneRegion",
            "ServiceNetMap",
            "GnocchiBackend",
            "GnocchiPassword",
            "ServiceData",
            "GnocchiApiPolicies",
            "EndpointMap",
            "RoleName",
            "GnocchiApiLoggingSource",
            "EnableInternalTLS",
            "MonitoringSubscriptionGnocchiApi",
            "RoleParameters"
          ],
          "description": "Gnocchi service configured with Puppet\n"
        },
        "4bfe3be3-c2e5-4d69-a281-ff9f3b96b4f2": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "4bfe3be3-c2e5-4d69-a281-ff9f3b96b4f2"
        },
        "53aa7b11-2a0f-45cc-a81b-a02c42b03a8e": {
          "name": "MySQLClient",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Mysql client settings\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/database/mysql-client.yaml",
          "id": "53aa7b11-2a0f-45cc-a81b-a02c42b03a8e"
        },
        "b67f6967-07fd-4fae-b6ff-ff842f5692fe": {
          "name": "EndpointMap",
          "parameters": [
            "EndpointMap",
            "NetIpMap",
            "ServiceNetMap",
            "CloudEndpoints"
          ],
          "description": "A map of OpenStack endpoints. Since the endpoints are URLs, we need to have brackets around IPv6 IP addresses. The inputs to these parameters come from net_ip_uri_map, which will include these brackets in IPv6 addresses.",
          "type": "OS::TripleO::EndpointMap",
          "id": "b67f6967-07fd-4fae-b6ff-ff842f5692fe"
        },
        "2ea9c20b-7242-478e-8754-e07c2ddec09a": {
          "name": "ComputeSriovDeployment_Step2",
          "parameters": [],
          "description": "No description",
          "type": "OS::TripleO::DeploymentSteps",
          "id": "2ea9c20b-7242-478e-8754-e07c2ddec09a"
        },
        "575a3cef-4be2-43c2-a899-1d276bf7c7e6": {
          "name": "ExternalNetwork",
          "parameters": [
            "ExternalNetName",
            "ExternalNetAdminStateUp",
            "ExternalAllocationPools",
            "ExternalNetValueSpecs",
            "ExternalNetShared",
            "ExternalInterfaceDefaultRoute",
            "ExternalNetCidr",
            "ExternalSubnetName",
            "ExternalNetEnableDHCP"
          ],
          "description": "External network definition (automatically generated).\n",
          "type": "OS::TripleO::Network::External",
          "id": "575a3cef-4be2-43c2-a899-1d276bf7c7e6"
        },
        "c106e837-0ec8-4ace-b3f9-183a51202720": {
          "name": "HeatBase",
          "resources": [
            "9dbb15f5-096b-4511-8286-6134614114da"
          ],
          "id": "c106e837-0ec8-4ace-b3f9-183a51202720",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/heat-engine.yaml",
          "parameters": [
            "DefaultPasswords",
            "HeatWorkers",
            "HeatPassword",
            "ServiceNetMap",
            "HeatAuthEncryptionKey",
            "HeatMaxResourcesPerStack",
            "ServiceData",
            "HeatEngineLoggingSource",
            "EndpointMap",
            "HeatConvergenceEngine",
            "HeatEnableDBPurge",
            "HeatStackDomainAdminPassword",
            "RoleName",
            "MonitoringSubscriptionHeatEngine",
            "RoleParameters"
          ],
          "description": "Openstack Heat Engine service configured with Puppet\n"
        },
        "c5c045e9-ed15-4233-bd19-a9d7ec9b5e43": {
          "name": "ComputeSriovDeployment_Step3",
          "parameters": [],
          "description": "No description",
          "type": "OS::TripleO::DeploymentSteps",
          "id": "c5c045e9-ed15-4233-bd19-a9d7ec9b5e43"
        },
        "62375e90-3185-4136-a40b-d7a8f1a528a5": {
          "name": "77",
          "resources": [
            "6fcab76f-048b-468f-a755-b2d98cffe67f"
          ],
          "id": "62375e90-3185-4136-a40b-d7a8f1a528a5",
          "type": "OS::TripleO::Services::NeutronMetadataAgent",
          "parameters": [
            "DefaultPasswords",
            "NeutronWorkers",
            "MonitoringSubscriptionNeutronMetadata",
            "ServiceNetMap",
            "NeutronPassword",
            "NeutronMetadataAgentLoggingSource",
            "EndpointMap",
            "NeutronMetadataProxySharedSecret",
            "RoleName",
            "ServiceData",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "OpenStack Neutron Metadata agent configured with Puppet\n"
        },
        "b85b48a9-6e97-42c3-a901-5bf422111655": {
          "name": "ControllerExtraConfigPost",
          "parameters": [
            "servers"
          ],
          "description": "Extra Post Deployment Config",
          "type": "OS::TripleO::NodeExtraConfigPost",
          "id": "b85b48a9-6e97-42c3-a901-5bf422111655"
        },
        "a1815b20-d33e-44ef-8e56-6de5433d3e95": {
          "name": "CeilometerAgentCentralBase",
          "resources": [
            "37eb5b04-9562-465e-8200-850a2e376a26"
          ],
          "id": "a1815b20-d33e-44ef-8e56-6de5433d3e95",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/ceilometer-agent-central.yaml",
          "parameters": [
            "DefaultPasswords",
            "CeilometerAgentCentralLoggingSource",
            "ServiceNetMap",
            "ServiceData",
            "RedisPassword",
            "MonitoringSubscriptionCeilometerCentral",
            "RoleName",
            "EndpointMap",
            "RoleParameters"
          ],
          "description": "OpenStack Ceilometer Central Agent service configured with Puppet\n"
        },
        "dea0e6d4-1f7e-4911-960f-b6f3bd538aae": {
          "name": "StorageMgmtNetwork",
          "parameters": [
            "StorageMgmtAllocationPools",
            "StorageMgmtInterfaceDefaultRoute",
            "StorageMgmtNetCidr",
            "StorageMgmtSubnetName",
            "StorageMgmtNetValueSpecs",
            "StorageMgmtNetEnableDHCP",
            "StorageMgmtNetShared",
            "StorageMgmtNetAdminStateUp",
            "StorageMgmtNetName"
          ],
          "description": "StorageMgmt network definition (automatically generated).\n",
          "type": "OS::TripleO::Network::StorageMgmt",
          "id": "dea0e6d4-1f7e-4911-960f-b6f3bd538aae"
        },
        "00217552-6ad2-4846-89e6-89443c5619ca": {
          "name": "87",
          "resources": [
            "8b05b9ed-c9bf-47de-9ed1-7c6c2d27ad52",
            "ec139473-fc0f-42cf-bfc4-576a70c2202a",
            "af2bfdb6-dbda-40c3-ba33-29beecafdef3"
          ],
          "id": "00217552-6ad2-4846-89e6-89443c5619ca",
          "type": "OS::TripleO::Services::NovaPlacement",
          "parameters": [
            "DockerNovaPlacementConfigImage",
            "DefaultPasswords",
            "ServiceNetMap",
            "DockerNovaPlacementImage",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "OpenStack containerized Nova Placement API service\n"
        },
        "ae01e441-3cc8-4f4f-acd6-9079489d64c1": {
          "name": "NovaBase",
          "parameters": [
            "NotificationDriver",
            "KeystoneRegion",
            "NovaCronArchiveDeleteRowsHour",
            "DatabaseSyncTimeout",
            "NovaOVSBridge",
            "RoleName",
            "NovaCronArchiveDeleteRowsUntilComplete",
            "DefaultPasswords",
            "RabbitClientPort",
            "ServiceNetMap",
            "NovaCronArchiveDeleteRowsMonth",
            "NovaCronArchiveDeleteRowsMonthday",
            "RoleParameters",
            "NovaCronArchiveDeleteRowsMinute",
            "NovaDebug",
            "NovaPlacementAPIInterface",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "NovaCronArchiveDeleteRowsUser",
            "UpgradeLevelNovaCompute",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "NovaCronArchiveDeleteRowsWeekday",
            "NovaPassword",
            "NovaCronArchiveDeleteRowsMaxRows",
            "NovaIPv6",
            "NeutronPassword",
            "EnableConfigPurge",
            "NovaCronArchiveDeleteRowsDestination"
          ],
          "description": "OpenStack Nova base service. Shared for all Nova services.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/nova-base.yaml",
          "id": "ae01e441-3cc8-4f4f-acd6-9079489d64c1"
        },
        "caf48355-1fcb-4a6c-881a-a8b601b13ee6": {
          "name": "AodhListenerBase",
          "resources": [
            "3fed5d7b-9aa2-44a4-b910-36a6f5f42646"
          ],
          "id": "caf48355-1fcb-4a6c-881a-a8b601b13ee6",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/aodh-listener.yaml",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "MonitoringSubscriptionAodhListener",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "OpenStack Aodh Listener service configured with Puppet\n"
        },
        "e9531c2e-5d06-4b4d-b1b4-f49bcd63fd35": {
          "name": "52",
          "parameters": [
            "DefaultPasswords",
            "ServiceData",
            "ServiceNetMap",
            "KernelPidMax",
            "RoleParameters",
            "KernelDisableIPv6",
            "EndpointMap",
            "RoleName",
            "NeighbourGcThreshold1",
            "NeighbourGcThreshold3",
            "NeighbourGcThreshold2"
          ],
          "description": "Load kernel modules with kmod and configure kernel options with sysctl.\n",
          "type": "OS::TripleO::Services::Kernel",
          "id": "e9531c2e-5d06-4b4d-b1b4-f49bcd63fd35"
        },
        "677fba56-4eba-45a2-a4b3-103d0a8ca987": {
          "name": "LoggingConfiguration",
          "parameters": [
            "LoggingDefaultSources",
            "LoggingDefaultFilters",
            "LoggingServers",
            "DefaultPasswords",
            "LoggingPosFilePath",
            "LoggingDefaultFormat",
            "LoggingDefaultGroups",
            "LoggingExtraFilters",
            "ServiceNetMap",
            "LoggingExtraGroups",
            "RoleParameters",
            "LoggingSSLKeyPassphrase",
            "EndpointMap",
            "LoggingUsesSSL",
            "LoggingExtraSources",
            "RoleName",
            "LoggingSSLCertificate",
            "ServiceData",
            "LoggingSharedKey",
            "LoggingSSLKey"
          ],
          "description": "Fluentd logging configuration",
          "type": "OS::TripleO::LoggingConfiguration",
          "id": "677fba56-4eba-45a2-a4b3-103d0a8ca987"
        },
        "faedcce5-c1a5-48ce-9023-c3fe81a8a6df": {
          "name": "NovaBase",
          "parameters": [
            "NotificationDriver",
            "KeystoneRegion",
            "NovaCronArchiveDeleteRowsHour",
            "DatabaseSyncTimeout",
            "NovaOVSBridge",
            "RoleName",
            "NovaCronArchiveDeleteRowsUntilComplete",
            "DefaultPasswords",
            "RabbitClientPort",
            "ServiceNetMap",
            "NovaCronArchiveDeleteRowsMonth",
            "NovaCronArchiveDeleteRowsMonthday",
            "RoleParameters",
            "NovaCronArchiveDeleteRowsMinute",
            "NovaDebug",
            "NovaPlacementAPIInterface",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "NovaCronArchiveDeleteRowsUser",
            "UpgradeLevelNovaCompute",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "NovaCronArchiveDeleteRowsWeekday",
            "NovaPassword",
            "NovaCronArchiveDeleteRowsMaxRows",
            "NovaIPv6",
            "NeutronPassword",
            "EnableConfigPurge",
            "NovaCronArchiveDeleteRowsDestination"
          ],
          "description": "OpenStack Nova base service. Shared for all Nova services.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/nova-base.yaml",
          "id": "faedcce5-c1a5-48ce-9023-c3fe81a8a6df"
        },
        "fe2b083a-1ad8-4a75-830d-1bdc4f99717e": {
          "name": "AodhApiPuppetBase",
          "resources": [
            "58938e3d-b97c-4ac6-bf3b-89f05c8da467",
            "9080e350-ebb9-4c5b-89d4-a79109c531f5"
          ],
          "id": "fe2b083a-1ad8-4a75-830d-1bdc4f99717e",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/aodh-api.yaml",
          "parameters": [
            "DefaultPasswords",
            "GnocchiExternalProject",
            "ServiceNetMap",
            "MonitoringSubscriptionAodhApi",
            "ServiceData",
            "EndpointMap",
            "AodhApiPolicies",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "OpenStack Aodh API service configured with Puppet\n"
        },
        "2f844d0a-1315-4fe9-b5ba-b24665e2f953": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "2f844d0a-1315-4fe9-b5ba-b24665e2f953"
        },
        "3fed5d7b-9aa2-44a4-b910-36a6f5f42646": {
          "name": "AodhBase",
          "parameters": [
            "RedisPassword",
            "NotificationDriver",
            "KeystoneRegion",
            "AodhPassword",
            "RabbitClientPort",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "ServiceNetMap",
            "RoleParameters",
            "DefaultPasswords",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "RoleName",
            "ServiceData",
            "AodhDebug"
          ],
          "description": "OpenStack Aodh service configured with Puppet\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/aodh-base.yaml",
          "id": "3fed5d7b-9aa2-44a4-b910-36a6f5f42646"
        },
        "9591eb22-3bb3-45a6-a24c-4df7e11ec010": {
          "name": "HeatBase",
          "parameters": [
            "HeatCronPurgeDeletedMonthday",
            "HeatCronPurgeDeletedHour",
            "NotificationDriver",
            "RoleName",
            "HeatPassword",
            "HeatMaxJsonBodySize",
            "DefaultPasswords",
            "RabbitClientPort",
            "ServiceNetMap",
            "HeatDebug",
            "RoleParameters",
            "HeatCronPurgeDeletedAgeType",
            "HeatCronPurgeDeletedMaxDelay",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "HeatCronPurgeDeletedMonth",
            "HeatCronPurgeDeletedUser",
            "HeatCronPurgeDeletedAge",
            "HeatCronPurgeDeletedEnsure",
            "HeatCronPurgeDeletedMinute",
            "HeatCronPurgeDeletedDestination",
            "HeatCronPurgeDeletedWeekday"
          ],
          "description": "Openstack Heat base service. Shared for all Heat services.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/heat-base.yaml",
          "id": "9591eb22-3bb3-45a6-a24c-4df7e11ec010"
        },
        "2b63c082-77ee-4a0b-a24d-9778358f1a11": {
          "name": "82",
          "resources": [
            "4d933c6c-5524-464c-aa77-5ba03017a7bd",
            "bc896591-b25b-484b-98a0-d003957f6032",
            "d07555f3-1514-4a7b-8fa8-b1ddb01c9d5d"
          ],
          "id": "2b63c082-77ee-4a0b-a24d-9778358f1a11",
          "type": "OS::TripleO::Services::NovaApi",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "DockerNovaConfigImage",
            "ServiceData",
            "DockerNovaApiImage",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "OpenStack containerized Nova API service\n"
        },
        "727af1a7-8dd0-48fa-a245-4f7c98fce26b": {
          "name": "AodhBase",
          "parameters": [
            "RedisPassword",
            "NotificationDriver",
            "KeystoneRegion",
            "AodhPassword",
            "RabbitClientPort",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "ServiceNetMap",
            "RoleParameters",
            "DefaultPasswords",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "RoleName",
            "ServiceData",
            "AodhDebug"
          ],
          "description": "OpenStack Aodh service configured with Puppet\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/aodh-base.yaml",
          "id": "727af1a7-8dd0-48fa-a245-4f7c98fce26b"
        },
        "3570634b-6a25-432d-8678-83377ee28675": {
          "name": "Ovs",
          "id": "3570634b-6a25-432d-8678-83377ee28675",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/openvswitch.yaml",
          "parameters": [
            "OvsDpdkMemoryChannels",
            "DefaultPasswords",
            "NeutronDpdkCoreList",
            "OvsDpdkCoreList",
            "NeutronDpdkSocketMemory",
            "ServiceNetMap",
            "RoleName",
            "NeutronDpdkMemoryChannels",
            "EndpointMap",
            "NeutronDpdkDriverType",
            "OvsPmdCoreList",
            "HostCpusList",
            "OvsDpdkSocketMemory",
            "OvsDpdkDriverType",
            "ServiceData",
            "RoleParameters"
          ],
          "description": "Open vSwitch Configuration\n",
          "parameter_groups": [
            {
              "label": "deprecated",
              "parameters": [
                "HostCpusList",
                "NeutronDpdkCoreList",
                "NeutronDpdkMemoryChannels",
                "NeutronDpdkSocketMemory",
                "NeutronDpdkDriverType"
              ],
              "description": "Do not use deprecated params, they will be removed."
            }
          ]
        },
        "9b23a95c-c63b-437a-b887-e9b1a1ec0803": {
          "name": "hostsConfig",
          "parameters": [
            "hosts"
          ],
          "description": "All Hosts Config",
          "type": "OS::TripleO::Hosts::SoftwareConfig",
          "id": "9b23a95c-c63b-437a-b887-e9b1a1ec0803"
        },
        "6a4b67bf-bfa9-4cb7-a9bf-aa6385220f6a": {
          "name": "SwiftBase",
          "parameters": [
            "DefaultPasswords",
            "SwiftHashSuffix",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "OpenStack Swift Proxy service configured with Puppet\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/swift-base.yaml",
          "id": "6a4b67bf-bfa9-4cb7-a9bf-aa6385220f6a"
        },
        "63f6a590-cca5-40af-a1fb-22398845da62": {
          "name": "MySQLClient",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Mysql client settings\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/database/mysql-client.yaml",
          "id": "63f6a590-cca5-40af-a1fb-22398845da62"
        },
        "684bcd11-d1fc-45c5-a0d6-4e72ec28d344": {
          "name": "111",
          "resources": [
            "0927f82c-a51b-4686-a88f-efd3701f7478"
          ],
          "id": "684bcd11-d1fc-45c5-a0d6-4e72ec28d344",
          "type": "OS::TripleO::Services::SwiftRingBuilder",
          "parameters": [
            "SwiftMinPartHours",
            "SwiftUseLocalDir",
            "DefaultPasswords",
            "SwiftRawDisks",
            "DockerSwiftRingbuilderConfigImage",
            "ServiceNetMap",
            "DockerSwiftConfigImage",
            "RoleParameters",
            "SwiftPartPower",
            "EndpointMap",
            "SwiftRingBuild",
            "RoleName",
            "ServiceData",
            "SwiftRingPutTempurl",
            "SwiftRingGetTempurl",
            "SwiftReplicas"
          ],
          "description": "OpenStack Swift Ringbuilder\n"
        },
        "62b2c14e-924e-44c7-b9ed-e7038e9ad263": {
          "name": "89",
          "resources": [
            "e4647c36-5a81-49b1-b85a-b2ef30fb1afa",
            "ea859803-2c76-4433-9136-aa1802c90c06",
            "2f844d0a-1315-4fe9-b5ba-b24665e2f953"
          ],
          "id": "62b2c14e-924e-44c7-b9ed-e7038e9ad263",
          "type": "OS::TripleO::Services::NovaVncProxy",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "DockerNovaConfigImage",
            "ServiceData",
            "EndpointMap",
            "DockerNovaVncProxyImage",
            "RoleName",
            "RoleParameters"
          ],
          "description": "OpenStack containerized Nova Vncproxy service\n"
        },
        "95d9e865-1a36-45c1-a331-d90b41fa5f18": {
          "name": "ControllerArtifactsDeploy",
          "parameters": [],
          "description": "No description",
          "type": "OS::Heat::StructuredDeploymentGroup",
          "id": "95d9e865-1a36-45c1-a331-d90b41fa5f18"
        },
        "1e181e65-6628-4df4-aae5-32cd132f00d8": {
          "name": "68",
          "resources": [
            "ccc61fc3-450b-4966-97ca-266bf3ca5c9c"
          ],
          "id": "1e181e65-6628-4df4-aae5-32cd132f00d8",
          "type": "OS::TripleO::Services::NeutronApi",
          "parameters": [
            "NeutronEnableDVR",
            "DefaultPasswords",
            "NeutronL3HA",
            "KeystoneRegion",
            "NeutronAllowL3AgentFailover",
            "NeutronWorkers",
            "ServiceNetMap",
            "MonitoringSubscriptionNeutronServer",
            "NeutronPassword",
            "ServiceData",
            "NeutronApiPolicies",
            "EndpointMap",
            "RoleName",
            "NeutronApiLoggingSource",
            "EnableInternalTLS",
            "NovaPassword",
            "RoleParameters"
          ],
          "description": "OpenStack Neutron Server configured with Puppet\n",
          "parameter_groups": [
            {
              "label": "deprecated",
              "parameters": [
                "NeutronL3HA"
              ],
              "description": "The following parameters are deprecated and will be removed. They should not\nbe relied on for new deployments. If you have concerns regarding deprecated\nparameters, please contact the TripleO development team on IRC or the\nOpenStack mailing list.\n"
            }
          ]
        },
        "ca056fd1-d30a-477f-a678-78fb2eab3a08": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "ca056fd1-d30a-477f-a678-78fb2eab3a08"
        },
        "d7975f29-fe52-4fb0-910f-c5ef177f80f7": {
          "name": "GlanceApiPuppetBase",
          "parameters": [
            "GlanceRbdPoolName",
            "GlanceWorkers",
            "NotificationDriver",
            "KeystoneRegion",
            "GlanceApiPolicies",
            "GlanceNfsEnabled",
            "NovaEnableRbdBackend",
            "GlancePassword",
            "MonitoringSubscriptionGlanceApi",
            "GlanceNfsOptions",
            "RabbitClientPort",
            "GlanceDebug",
            "ServiceNetMap",
            "RoleName",
            "RoleParameters",
            "GlanceBackend",
            "RabbitClientUseSSL",
            "GlanceNotifierStrategy",
            "RabbitPassword",
            "ServiceData",
            "DefaultPasswords",
            "EndpointMap",
            "GlanceApiLoggingSource",
            "Debug",
            "CephClientUserName",
            "GlanceLogFile",
            "RabbitUserName",
            "GlanceNfsShare",
            "EnableInternalTLS"
          ],
          "description": "OpenStack Glance API service configured with Puppet\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/glance-api.yaml",
          "id": "d7975f29-fe52-4fb0-910f-c5ef177f80f7"
        },
        "fb1335d5-e01f-495f-8834-ef6aec53afc7": {
          "name": "22",
          "resources": [
            "c785318e-2f56-4989-9a0d-4efec19f0434"
          ],
          "id": "fb1335d5-e01f-495f-8834-ef6aec53afc7",
          "type": "OS::TripleO::Services::ContainersLogrotateCrond",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "DockerCrondConfigImage",
            "EndpointMap",
            "RoleName",
            "DockerCrondImage",
            "RoleParameters"
          ],
          "description": "Containerized logrotate with crond for containerized service logs rotation\n"
        },
        "e4647c36-5a81-49b1-b85a-b2ef30fb1afa": {
          "name": "NovaVncProxyPuppetBase",
          "resources": [
            "3350f83f-1a45-456e-8f06-54456cf85d7b"
          ],
          "id": "e4647c36-5a81-49b1-b85a-b2ef30fb1afa",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/nova-vnc-proxy.yaml",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "NovaVncproxyLoggingSource",
            "ServiceData",
            "EndpointMap",
            "MonitoringSubscriptionNovaVNCProxy",
            "RoleName",
            "RoleParameters"
          ],
          "description": "OpenStack Nova Vncproxy service configured with Puppet\n"
        },
        "8b05b9ed-c9bf-47de-9ed1-7c6c2d27ad52": {
          "name": "MySQLClient",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Mysql client settings\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/database/mysql-client.yaml",
          "id": "8b05b9ed-c9bf-47de-9ed1-7c6c2d27ad52"
        },
        "e60cc3d3-3f2f-4720-80a0-731210676434": {
          "name": "91",
          "resources": [
            "28f31fe7-8959-441e-838a-4868ff017250"
          ],
          "id": "e60cc3d3-3f2f-4720-80a0-731210676434",
          "type": "OS::TripleO::Services::ContainersLogrotateCrond",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "DockerCrondConfigImage",
            "EndpointMap",
            "RoleName",
            "DockerCrondImage",
            "RoleParameters"
          ],
          "description": "Containerized logrotate with crond for containerized service logs rotation\n"
        },
        "b188af72-16ae-4573-9e0b-a80156d952ec": {
          "name": "ControllerDeployment_Step4",
          "parameters": [],
          "description": "No description",
          "type": "OS::TripleO::DeploymentSteps",
          "id": "b188af72-16ae-4573-9e0b-a80156d952ec"
        },
        "9d1f87b6-ff54-49f5-a590-7630dc735222": {
          "name": "SwiftProxyBase",
          "resources": [
            "83de5f6b-540e-452e-a928-4fd1126e89bf"
          ],
          "id": "9d1f87b6-ff54-49f5-a590-7630dc735222",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/swift-proxy.yaml",
          "parameters": [
            "DefaultPasswords",
            "SwiftProxyNodeTimeout",
            "KeystoneRegion",
            "RabbitClientPort",
            "SwiftCeilometerIgnoreProjects",
            "RabbitClientUseSSL",
            "ServiceNetMap",
            "SwiftWorkers",
            "RabbitPassword",
            "ServiceData",
            "SwiftPassword",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "RoleName",
            "MonitoringSubscriptionSwiftProxy",
            "SwiftCeilometerPipelineEnabled",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "OpenStack Swift Proxy service configured with Puppet\n"
        },
        "7d53cc79-edef-448a-b92f-a2d2ce10aab9": {
          "name": "117",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "TunedProfileName",
            "RoleName",
            "RoleParameters"
          ],
          "description": "Configure tuned\n",
          "type": "OS::TripleO::Services::Tuned",
          "id": "7d53cc79-edef-448a-b92f-a2d2ce10aab9"
        },
        "9d5c5c63-16a0-4f5f-b1e1-d40c7d970b6a": {
          "name": "53",
          "resources": [
            "4bfe3be3-c2e5-4d69-a281-ff9f3b96b4f2",
            "eddc7fa1-03f5-445c-b0fe-dbfe5cac9541",
            "cada7a7f-b9b8-4250-93c4-d1e0d0571e2a"
          ],
          "id": "9d5c5c63-16a0-4f5f-b1e1-d40c7d970b6a",
          "type": "OS::TripleO::Services::Keystone",
          "parameters": [
            "DefaultPasswords",
            "AdminPassword",
            "DockerKeystoneConfigImage",
            "EnableInternalTLS",
            "ServiceNetMap",
            "KeystoneTokenProvider",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "DockerKeystoneImage",
            "RoleParameters"
          ],
          "description": "OpenStack containerized Keystone service\n"
        },
        "540e4640-840c-4ab0-bb4a-830def3dbc27": {
          "name": "InternalApiVirtualIP",
          "parameters": [
            "FixedIPs",
            "NodeIndex",
            "ControlPlaneNetwork",
            "ControlPlaneIP",
            "PortName",
            "IPPool",
            "InternalApiNetName"
          ],
          "description": "Creates a port on the InternalApi network. The IP address will be chosen automatically if FixedIPs is empty.\n",
          "type": "OS::TripleO::Network::Ports::InternalApiVipPort",
          "id": "540e4640-840c-4ab0-bb4a-830def3dbc27"
        },
        "aa365853-c667-4365-8c78-7afe44cd3c7b": {
          "name": "MySQLClient",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Mysql client settings\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/database/mysql-client.yaml",
          "id": "aa365853-c667-4365-8c78-7afe44cd3c7b"
        },
        "77be8884-505f-48be-a49d-0246594027fc": {
          "name": "GnocchiMetricdBase",
          "resources": [
            "dc90cc55-2ed9-4461-99ca-911c39ca4e64"
          ],
          "id": "77be8884-505f-48be-a49d-0246594027fc",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/gnocchi-metricd.yaml",
          "parameters": [
            "DefaultPasswords",
            "GnocchiMetricdWorkers",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "MonitoringSubscriptionGnocchiMetricd",
            "RoleName",
            "RoleParameters"
          ],
          "description": "Gnocchi service configured with Puppet\n"
        },
        "3aa748b6-e75d-4f4b-b5f2-f76f98eaafd5": {
          "name": "ControllerDeployment_Step2",
          "parameters": [],
          "description": "No description",
          "type": "OS::TripleO::DeploymentSteps",
          "id": "3aa748b6-e75d-4f4b-b5f2-f76f98eaafd5"
        },
        "381959c1-f444-4e5c-98c5-734ec355eb89": {
          "name": "allNodesConfig",
          "parameters": [
            "ExternalNetName",
            "TenantNetName",
            "short_service_bootstrap_node",
            "service_ips",
            "cloud_name_storage",
            "RedisVirtualIP",
            "InternalApiNetName",
            "controller_ips",
            "short_service_node_names",
            "ServiceNetMap",
            "service_node_names",
            "NetVipMap",
            "enabled_services",
            "ManagementNetName",
            "StackUpdateType",
            "CertmongerCA",
            "StackAction",
            "cloud_name_storage_mgmt",
            "DeployIdentifier",
            "StorageMgmtNetName",
            "cloud_name_internal_api",
            "controller_names",
            "cloud_name_external",
            "cloud_name_ctlplane",
            "StorageNetName",
            "EnableInternalTLS",
            "UpdateIdentifier"
          ],
          "description": "All Nodes Config for Puppet",
          "type": "OS::TripleO::AllNodes::SoftwareConfig",
          "id": "381959c1-f444-4e5c-98c5-734ec355eb89"
        },
        "fab14901-7a68-486f-8e54-655cc6e1eba3": {
          "name": "15",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Mysql client settings\n",
          "type": "OS::TripleO::Services::MySQLClient",
          "id": "fab14901-7a68-486f-8e54-655cc6e1eba3"
        },
        "98c3c9f7-9a9f-4df1-b997-cc0e539d527a": {
          "name": "108",
          "parameters": [
            "DefaultPasswords",
            "SnmpdBindHost",
            "ServiceNetMap",
            "SnmpdReadonlyUserName",
            "SnmpdOptions",
            "EndpointMap",
            "SnmpdReadonlyUserPassword",
            "RoleName",
            "ServiceData",
            "RoleParameters"
          ],
          "description": "SNMP client configured with Puppet, to facilitate Ceilometer Hardware monitoring in the undercloud. This service is required to enable hardware monitoring.\n",
          "type": "OS::TripleO::Services::Snmp",
          "id": "98c3c9f7-9a9f-4df1-b997-cc0e539d527a"
        },
        "c142d21d-e3a9-483b-b31b-2b618135034f": {
          "name": "ApacheServiceBase",
          "parameters": [
            "DefaultPasswords",
            "ApacheServerLimit",
            "ServiceData",
            "ServiceNetMap",
            "RoleParameters",
            "ApacheMaxRequestWorkers",
            "EndpointMap",
            "InternalTLSCAFile",
            "RoleName",
            "EnableInternalTLS"
          ],
          "description": "Apache service configured with Puppet. Note this is typically included automatically via other services which run via Apache.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/apache.yaml",
          "id": "c142d21d-e3a9-483b-b31b-2b618135034f"
        },
        "a454d53a-3799-4696-8dc6-6e417b0399e8": {
          "name": "ComputeSriovExtraConfigPre",
          "parameters": [
            "server"
          ],
          "description": "Noop Extra Pre-Deployment Config",
          "type": "OS::TripleO::ComputeSriovExtraConfigPre",
          "id": "a454d53a-3799-4696-8dc6-6e417b0399e8"
        },
        "dc9a30d3-eb20-490a-988f-45615c4cf193": {
          "name": "Controller",
          "resources": [
            "0e45c665-46e7-46cf-ad1f-989efe2b81df"
          ],
          "id": "dc9a30d3-eb20-490a-988f-45615c4cf193",
          "type": "OS::Heat::ResourceGroup",
          "parameters": [],
          "description": "No description"
        },
        "db1435fd-be61-4fc7-95d0-c5bd6039cf0b": {
          "name": "70",
          "resources": [
            "50522ab6-6621-46d9-9c4c-0b1215b134ad"
          ],
          "id": "db1435fd-be61-4fc7-95d0-c5bd6039cf0b",
          "type": "OS::TripleO::Services::NeutronCorePlugin",
          "parameters": [
            "NeutronTypeDrivers",
            "NeutronVniRanges",
            "DefaultPasswords",
            "NeutronNetworkVLANRanges",
            "NeutronMechanismDrivers",
            "ServiceNetMap",
            "NeutronFlatNetworks",
            "NeutronOverlayIPVersion",
            "EndpointMap",
            "NeutronPluginExtensions",
            "RoleName",
            "NeutronTunnelIdRanges",
            "ServiceData",
            "NeutronNetworkType",
            "NeutronFirewallDriver",
            "RoleParameters"
          ],
          "description": "OpenStack Neutron ML2 Plugin configured with Puppet\n"
        },
        "b588ce20-e31f-46e6-9c5c-f70074a6390e": {
          "name": "46",
          "resources": [
            "4fcf36b3-46d9-4a30-8e0f-cce4cac85d8e",
            "c106e837-0ec8-4ace-b3f9-183a51202720",
            "a5279fb1-0db9-4d0e-b5c3-6d203f68b3ff"
          ],
          "id": "b588ce20-e31f-46e6-9c5c-f70074a6390e",
          "type": "OS::TripleO::Services::HeatEngine",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "DockerHeatEngineImage",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "DockerHeatConfigImage",
            "RoleParameters"
          ],
          "description": "OpenStack containerized Heat Engine service\n"
        },
        "7ab29661-ab3e-47b5-9737-1b6acccef564": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "7ab29661-ab3e-47b5-9737-1b6acccef564"
        },
        "4fcf36b3-46d9-4a30-8e0f-cce4cac85d8e": {
          "name": "MySQLClient",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Mysql client settings\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/database/mysql-client.yaml",
          "id": "4fcf36b3-46d9-4a30-8e0f-cce4cac85d8e"
        },
        "edbfe177-ade7-45c2-b7c7-6cc1dd26a7b5": {
          "name": "39",
          "resources": [
            "dd29fa58-4b55-40ae-a61c-9852c48962b2",
            "aa0648d4-2840-4b47-86d0-bc771de2a4d3"
          ],
          "id": "edbfe177-ade7-45c2-b7c7-6cc1dd26a7b5",
          "type": "OS::TripleO::Services::GnocchiApi",
          "parameters": [
            "NumberOfStorageSacks",
            "DefaultPasswords",
            "DockerGnocchiApiImage",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "DockerGnocchiConfigImage",
            "RoleParameters"
          ],
          "description": "OpenStack containerized gnocchi service\n"
        },
        "41d1dfcd-766e-4a81-b380-b4f2b5220ba6": {
          "name": "NeutronBase",
          "parameters": [
            "NotificationDriver",
            "NeutronDBSyncExtraParams",
            "NeutronDhcpAgentsPerNetwork",
            "DatabaseSyncTimeout",
            "RoleName",
            "DefaultPasswords",
            "RabbitClientPort",
            "ServiceNetMap",
            "RoleParameters",
            "NeutronDnsDomain",
            "NeutronDebug",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "NeutronGlobalPhysnetMtu",
            "NeutronServicePlugins",
            "NeutronCorePlugin",
            "EnableConfigPurge",
            "DhcpAgentNotification"
          ],
          "description": "OpenStack Neutron base service. Shared for all Neutron agents.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/neutron-base.yaml",
          "id": "41d1dfcd-766e-4a81-b380-b4f2b5220ba6"
        },
        "38a8e6c9-6d7c-4f13-a488-d1aa14fbb16d": {
          "name": "83",
          "resources": [
            "f37af421-cf70-485b-aeed-738cfc3fb15f",
            "53aa7b11-2a0f-45cc-a81b-a02c42b03a8e",
            "2b5a0603-8bcc-4b11-a23b-c2c6e29a2f5a"
          ],
          "id": "38a8e6c9-6d7c-4f13-a488-d1aa14fbb16d",
          "type": "OS::TripleO::Services::NovaConductor",
          "parameters": [
            "DockerNovaConductorImage",
            "DefaultPasswords",
            "ServiceNetMap",
            "DockerNovaConfigImage",
            "UpgradeLevelNovaCompute",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "OpenStack containerized Nova Conductor service\n"
        },
        "adc7f961-a8e5-49a0-9c4d-a43fb111971c": {
          "name": "0",
          "resources": [
            "fe2b083a-1ad8-4a75-830d-1bdc4f99717e",
            "adeb589d-c193-426e-bb62-30df81cc12e1",
            "7f117485-db09-4b37-abe0-880d034d896c"
          ],
          "id": "adc7f961-a8e5-49a0-9c4d-a43fb111971c",
          "type": "OS::TripleO::Services::AodhApi",
          "parameters": [
            "DefaultPasswords",
            "DockerAodhApiImage",
            "ServiceNetMap",
            "DockerAodhConfigImage",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "OpenStack containerized aodh service\n"
        },
        "a11c2231-c69a-4967-939d-a91168d84829": {
          "name": "ControllerHostPrepDeployment",
          "parameters": [],
          "description": "No description",
          "type": "OS::Heat::SoftwareDeploymentGroup",
          "id": "a11c2231-c69a-4967-939d-a91168d84829"
        },
        "729908a5-9e92-47a6-8cf8-164c509a5999": {
          "name": "MySQLClient",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Mysql client settings\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/database/mysql-client.yaml",
          "id": "729908a5-9e92-47a6-8cf8-164c509a5999"
        },
        "95d16705-11e8-4f66-a1a2-74f73d07be43": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "95d16705-11e8-4f66-a1a2-74f73d07be43"
        },
        "3321ac3c-dd5a-4611-8255-2439ac41997c": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "3321ac3c-dd5a-4611-8255-2439ac41997c"
        },
        "ec9b3579-3e36-4f41-b92a-60bb35582ff5": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "ec9b3579-3e36-4f41-b92a-60bb35582ff5"
        },
        "547a13b0-9c50-4ddd-a877-b446873b27f3": {
          "name": "MySQLClient",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Mysql client settings\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/database/mysql-client.yaml",
          "id": "547a13b0-9c50-4ddd-a877-b446873b27f3"
        },
        "ea859803-2c76-4433-9136-aa1802c90c06": {
          "name": "MySQLClient",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Mysql client settings\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/database/mysql-client.yaml",
          "id": "ea859803-2c76-4433-9136-aa1802c90c06"
        },
        "462fb4d4-4736-44cd-b8bf-17df9bdacc60": {
          "name": "90",
          "parameters": [
            "DefaultPasswords",
            "NtpServer",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "NTP service deployment using puppet, this YAML file creates the interface between the HOT template and the puppet manifest that actually installs and configure NTP.\n",
          "type": "OS::TripleO::Services::Ntp",
          "id": "462fb4d4-4736-44cd-b8bf-17df9bdacc60"
        },
        "aa0648d4-2840-4b47-86d0-bc771de2a4d3": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "aa0648d4-2840-4b47-86d0-bc771de2a4d3"
        },
        "c61d4db8-0f2a-40a1-aa7b-bd69c4924079": {
          "name": "ServiceChain",
          "resources": [
            "784f7a53-614e-47b7-bb9d-df1a8457431d",
            "7d8c1708-3fb9-418a-8497-8db8ff79d9e9",
            "4489697a-e024-491f-af46-fa1ebc95950d",
            "fc609445-9432-4c32-afe6-ff8c26148647",
            "80617b53-3796-4ab3-b715-2fa14c827cce",
            "7d53cc79-edef-448a-b92f-a2d2ce10aab9",
            "62b2c14e-924e-44c7-b9ed-e7038e9ad263",
            "684bcd11-d1fc-45c5-a0d6-4e72ec28d344",
            "f2c457ee-c01e-4e8b-8cb6-01be31717cdc",
            "88f1521a-472b-4ddf-bc87-4f7c86e1e826",
            "014474a3-4f93-4b01-ade3-be9ff0edc37e",
            "2b63c082-77ee-4a0b-a24d-9778358f1a11",
            "38a8e6c9-6d7c-4f13-a488-d1aa14fbb16d",
            "0ac2b1ad-ba53-446e-bbb8-0d9080db8795",
            "78df4be3-a175-4e7c-8c5c-4cb44bbb3c47",
            "00217552-6ad2-4846-89e6-89443c5619ca",
            "51dd0741-9cd0-4dd9-8b3f-43a7e89ea9e3",
            "b588ce20-e31f-46e6-9c5c-f70074a6390e",
            "b3182ab6-884e-495f-b195-e37b07d018af",
            "b46a35a3-5a99-465d-93f0-55076a512c5a",
            "9bb8844b-2f15-4803-a047-69ca5eda3484",
            "e2b556cc-2961-4752-a5bd-962754bbb46d",
            "37dbc9b6-56ab-47c4-b9bb-fd2fbf1e090b",
            "e9e60f36-c8aa-4a13-8198-eaa04bc2f4ad",
            "77c4d2cb-f2f6-40a5-8e26-05085dc33f49",
            "51a58afc-bc10-4be6-b1b8-6f437f0d2318",
            "adc7f961-a8e5-49a0-9c4d-a43fb111971c",
            "b30c837e-c640-4756-8b67-af1f999ba16c",
            "b6a80352-a6b7-430f-9ba2-56a98f62afa4",
            "b26ba532-7928-4651-b531-a06acf4154db",
            "5a4c974d-c4a3-4ccb-a817-13996b84fc60",
            "1f37bffd-54eb-48fe-8dc2-db7fb188d66b",
            "03aa36a9-d733-41d8-913f-bf92b17738a5",
            "17f12e9f-c971-410f-b902-4378eb5d2ce7",
            "1e181e65-6628-4df4-aae5-32cd132f00d8",
            "62375e90-3185-4136-a40b-d7a8f1a528a5",
            "98c3c9f7-9a9f-4df1-b997-cc0e539d527a",
            "fd3717cc-dcfc-4778-90b0-aefe16c7258f",
            "25d77856-66e5-4eff-96ff-097ea2deb75c",
            "db1435fd-be61-4fc7-95d0-c5bd6039cf0b",
            "e60cc3d3-3f2f-4720-80a0-731210676434",
            "48b87cb8-6422-4ee1-b16c-581e39cdade7",
            "6e37d997-b71a-4189-b568-8838e69e9e40",
            "18c9a1e0-4731-4bb6-9c6f-3bd3aabeab87",
            "37ce0cb8-50bd-4950-bfa7-382f6c2d453e",
            "b18ed1ea-6c65-44b0-83b7-356c66333ada",
            "e7e74b0b-4ada-4a08-9762-027ee13a07db",
            "edbfe177-ade7-45c2-b7c7-6cc1dd26a7b5",
            "c4ce6d38-dfb6-412d-bacf-ee1f070e86ff",
            "94a00338-95a3-4bc3-974f-61967564be03",
            "f959efa8-f065-4cdf-bd08-6a6c955e02c9",
            "7682c318-59bf-47cd-a266-3f1ae66d3d22",
            "970d5009-2197-4989-9545-96c4adb069b0",
            "9d5c5c63-16a0-4f5f-b1e1-d40c7d970b6a",
            "e9531c2e-5d06-4b4d-b1b4-f49bcd63fd35",
            "141af07b-c44d-41a9-85dd-0f5c6e5bd85b",
            "2d093575-d3b1-460d-ac0d-4e1164d0c827",
            "19e65677-ea39-491f-8fbb-4097d5719623",
            "462fb4d4-4736-44cd-b8bf-17df9bdacc60",
            "0ce59e0e-bcf5-491a-8119-e63d00fc8b40"
          ],
          "id": "c61d4db8-0f2a-40a1-aa7b-bd69c4924079",
          "type": "OS::Heat::ResourceChain",
          "parameters": [],
          "description": "No description"
        },
        "fc609445-9432-4c32-afe6-ff8c26148647": {
          "name": "115",
          "parameters": [
            "PurgeFirewallRules",
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "ManageFirewall",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "TripleO Firewall settings\n",
          "type": "OS::TripleO::Services::TripleoFirewall",
          "id": "fc609445-9432-4c32-afe6-ff8c26148647"
        },
        "6a9d751c-f1de-4fc9-af2e-f87d274aadc7": {
          "name": "SshHostPubKey",
          "parameters": [
            "deployment_actions",
            "server"
          ],
          "description": "This is a template which will fetch the ssh host public key.\n",
          "type": "OS::TripleO::Ssh::HostPubKey",
          "id": "6a9d751c-f1de-4fc9-af2e-f87d274aadc7"
        },
        "c42666ed-a318-456f-b157-36ca03dc5e62": {
          "name": "ApacheServiceBase",
          "parameters": [
            "DefaultPasswords",
            "ApacheServerLimit",
            "ServiceData",
            "ServiceNetMap",
            "RoleParameters",
            "ApacheMaxRequestWorkers",
            "EndpointMap",
            "InternalTLSCAFile",
            "RoleName",
            "EnableInternalTLS"
          ],
          "description": "Apache service configured with Puppet. Note this is typically included automatically via other services which run via Apache.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/apache.yaml",
          "id": "c42666ed-a318-456f-b157-36ca03dc5e62"
        },
        "3d4e1bc6-f893-499a-a286-0e73ae800c70": {
          "name": "MySQLClient",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Mysql client settings\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/database/mysql-client.yaml",
          "id": "3d4e1bc6-f893-499a-a286-0e73ae800c70"
        },
        "4717cff1-4a6d-415f-b74c-087cb12bda54": {
          "name": "ComputeSriovSshKnownHostsDeployment",
          "parameters": [],
          "description": "No description",
          "type": "OS::Heat::StructuredDeployments",
          "id": "4717cff1-4a6d-415f-b74c-087cb12bda54"
        },
        "258f999b-9abc-45a9-b058-199b86ab7b0e": {
          "name": "InternalNetwork",
          "parameters": [
            "InternalApiInterfaceDefaultRoute",
            "InternalApiSubnetName",
            "InternalApiNetCidr",
            "InternalApiAllocationPools",
            "InternalApiNetValueSpecs",
            "InternalApiNetShared",
            "InternalApiNetEnableDHCP",
            "InternalApiNetAdminStateUp",
            "InternalApiNetName"
          ],
          "description": "InternalApi network definition (automatically generated).\n",
          "type": "OS::TripleO::Network::InternalApi",
          "id": "258f999b-9abc-45a9-b058-199b86ab7b0e"
        },
        "5cc5b190-f3a6-43fd-920f-17c77fbc738c": {
          "name": "MemcachedBase",
          "parameters": [
            "DefaultPasswords",
            "MonitoringSubscriptionMemcached",
            "ServiceNetMap",
            "MemcachedMaxMemory",
            "EndpointMap",
            "RoleName",
            "ServiceData",
            "RoleParameters"
          ],
          "description": "Memcached service configured with Puppet\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/memcached.yaml",
          "id": "5cc5b190-f3a6-43fd-920f-17c77fbc738c"
        },
        "80617b53-3796-4ab3-b715-2fa14c827cce": {
          "name": "114",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "TimeZone",
            "RoleName",
            "RoleParameters"
          ],
          "description": "Composable Timezone service\n",
          "type": "OS::TripleO::Services::Timezone",
          "id": "80617b53-3796-4ab3-b715-2fa14c827cce"
        },
        "0ac2b1ad-ba53-446e-bbb8-0d9080db8795": {
          "name": "80",
          "resources": [
            "c77d16d5-def9-4b60-91b7-4cd6211242ee",
            "e6c3d5ba-4e7a-40cd-9cf7-4a2789325639"
          ],
          "id": "0ac2b1ad-ba53-446e-bbb8-0d9080db8795",
          "type": "OS::TripleO::Services::NeutronOvsAgent",
          "parameters": [
            "NeutronEnableDVR",
            "NeutronEnableARPResponder",
            "DefaultPasswords",
            "NeutronTunnelTypes",
            "MonitoringSubscriptionNeutronOvs",
            "ServiceNetMap",
            "NeutronEnableL2Pop",
            "NeutronAgentExtensions",
            "NeutronBridgeMappings",
            "EndpointMap",
            "NeutronOVSFirewallDriver",
            "NeutronOpenVswitchAgentLoggingSource",
            "RoleName",
            "ServiceData",
            "RoleParameters"
          ],
          "description": "OpenStack Neutron OVS agent configured with Puppet\n"
        },
        "cf5195b6-f289-4042-aaeb-232d9161934c": {
          "name": "ApacheServiceBase",
          "parameters": [
            "DefaultPasswords",
            "ApacheServerLimit",
            "ServiceData",
            "ServiceNetMap",
            "RoleParameters",
            "ApacheMaxRequestWorkers",
            "EndpointMap",
            "InternalTLSCAFile",
            "RoleName",
            "EnableInternalTLS"
          ],
          "description": "Apache service configured with Puppet. Note this is typically included automatically via other services which run via Apache.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/apache.yaml",
          "id": "cf5195b6-f289-4042-aaeb-232d9161934c"
        },
        "3b210aa9-d1d8-44a3-9725-87a596b941fb": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "3b210aa9-d1d8-44a3-9725-87a596b941fb"
        },
        "18c9a1e0-4731-4bb6-9c6f-3bd3aabeab87": {
          "name": "101",
          "resources": [
            "952ddbf6-500a-4d4a-a3df-704a7985f070",
            "82fcc552-0060-4667-81cf-dc1ff59b7571",
            "05cac074-1e46-41e0-b190-8fd4c255eceb"
          ],
          "id": "18c9a1e0-4731-4bb6-9c6f-3bd3aabeab87",
          "type": "OS::TripleO::Services::PankoApi",
          "parameters": [
            "DefaultPasswords",
            "DockerPankoConfigImage",
            "ServiceNetMap",
            "DockerPankoApiImage",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "OpenStack Panko service configured with docker. Note, this service is deprecated in Pike release and will be disabled in future releases.\n"
        },
        "c2dd1d5d-2ade-4245-8704-a952bcffc73f": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "c2dd1d5d-2ade-4245-8704-a952bcffc73f"
        },
        "cada7a7f-b9b8-4250-93c4-d1e0d0571e2a": {
          "name": "KeystoneBase",
          "resources": [
            "1c3ac778-53bc-44c9-8541-7f45afa38412"
          ],
          "id": "cada7a7f-b9b8-4250-93c4-d1e0d0571e2a",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/keystone.yaml",
          "parameters": [
            "KeystoneFernetKey1",
            "KeystoneFernetKey0",
            "NotificationDriver",
            "KeystoneRegion",
            "KeystoneCredential1",
            "KeystoneDebug",
            "KeystoneLDAPDomainEnable",
            "KeystoneTokenProvider",
            "KeystoneNotificationFormat",
            "KeystoneCronTokenFlushHour",
            "RoleName",
            "KeystonePolicies",
            "DefaultPasswords",
            "RabbitClientPort",
            "KeystoneSSLCertificateKey",
            "ManageKeystoneFernetKeys",
            "RoleParameters",
            "KeystoneCronTokenFlushMaxDelay",
            "KeystoneCronTokenFlushUser",
            "KeystoneFernetKeys",
            "KeystoneCronTokenFlushMinute",
            "KeystoneNotificationDriver",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "KeystoneLoggingSource",
            "ServiceData",
            "EndpointMap",
            "KeystoneCredential0",
            "MonitoringSubscriptionKeystone",
            "Debug",
            "KeystoneCronTokenFlushEnsure",
            "KeystoneFernetMaxActiveKeys",
            "KeystoneCronTokenFlushMonthday",
            "AdminEmail",
            "AdminToken",
            "RabbitUserName",
            "KeystoneSSLCertificate",
            "KeystoneCronTokenFlushMonth",
            "KeystoneWorkers",
            "AdminPassword",
            "KeystoneCronTokenFlushDestination",
            "KeystoneCronTokenFlushWeekday",
            "KeystoneEnableDBPurge",
            "KeystoneLDAPBackendConfigs",
            "EnableInternalTLS",
            "ServiceNetMap"
          ],
          "description": "OpenStack Keystone service configured with Puppet\n",
          "parameter_groups": [
            {
              "label": "deprecated",
              "parameters": [
                "KeystoneFernetKey0",
                "KeystoneFernetKey1",
                "KeystoneNotificationDriver"
              ],
              "description": "The following parameters are deprecated and will be removed. They should not\nbe relied on for new deployments. If you have concerns regarding deprecated\nparameters, please contact the TripleO development team on IRC or the\nOpenStack mailing list.\n"
            }
          ]
        },
        "0fe5bbf1-ac02-46fd-9b28-d7d0df7fb7bd": {
          "name": "NetIpMap",
          "parameters": [
            "TenantIpUri",
            "StorageIp",
            "ManagementIpSubnet",
            "ExternalNetName",
            "TenantNetName",
            "TenantIpSubnet",
            "TenantIp",
            "ExternalIpUri",
            "InternalApiIpUri",
            "InternalApiNetName",
            "ControlPlaneSubnetCidr",
            "InternalApiIpSubnet",
            "ManagementNetName",
            "ExternalIp",
            "StorageMgmtNetName",
            "ControlPlaneIp",
            "StorageIpSubnet",
            "ManagementIpUri",
            "StorageMgmtIpSubnet",
            "StorageIpUri",
            "StorageMgmtIpUri",
            "ExternalIpSubnet",
            "StorageMgmtIp",
            "InternalApiIp",
            "ManagementIp",
            "StorageNetName"
          ],
          "description": "No description",
          "type": "OS::TripleO::Network::Ports::NetIpMap",
          "id": "0fe5bbf1-ac02-46fd-9b28-d7d0df7fb7bd"
        },
        "2ba78083-1ffa-4719-ab35-459ce345c852": {
          "name": "27",
          "parameters": [
            "DefaultPasswords",
            "SshServerOptions",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "BannerText",
            "RoleName",
            "MessageOfTheDay",
            "RoleParameters"
          ],
          "description": "Configure sshd_config\n",
          "type": "OS::TripleO::Services::Sshd",
          "id": "2ba78083-1ffa-4719-ab35-459ce345c852"
        },
        "8893e9a4-8a6c-4ac7-ba0d-b92e2e40b071": {
          "name": "StoragePort",
          "parameters": [
            "FixedIPs",
            "NodeIndex",
            "IPPool",
            "ControlPlaneNetwork",
            "ControlPlaneIP",
            "PortName",
            "StorageNetName"
          ],
          "description": "Creates a port on the Storage network. The IP address will be chosen automatically if FixedIPs is empty.\n",
          "type": "OS::TripleO::ComputeSriov::Ports::StoragePort",
          "id": "8893e9a4-8a6c-4ac7-ba0d-b92e2e40b071"
        },
        "51dd0741-9cd0-4dd9-8b3f-43a7e89ea9e3": {
          "name": "84",
          "resources": [
            "66ad232a-c97a-40ec-a5c2-d20d58180e33",
            "0404df4e-f69b-4351-a83d-341a8390c72f",
            "23339829-b530-4155-ace5-f7a0594d76f7"
          ],
          "id": "51dd0741-9cd0-4dd9-8b3f-43a7e89ea9e3",
          "type": "OS::TripleO::Services::NovaConsoleauth",
          "parameters": [
            "DefaultPasswords",
            "DockerNovaConsoleauthImage",
            "ServiceNetMap",
            "DockerNovaConfigImage",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "OpenStack containerized Nova Consoleauth service\n"
        },
        "f37af421-cf70-485b-aeed-738cfc3fb15f": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "f37af421-cf70-485b-aeed-738cfc3fb15f"
        },
        "a665e050-fedd-4e54-843c-0782b618452b": {
          "name": "NeutronBase",
          "parameters": [
            "NotificationDriver",
            "NeutronDBSyncExtraParams",
            "NeutronDhcpAgentsPerNetwork",
            "DatabaseSyncTimeout",
            "RoleName",
            "DefaultPasswords",
            "RabbitClientPort",
            "ServiceNetMap",
            "RoleParameters",
            "NeutronDnsDomain",
            "NeutronDebug",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "NeutronGlobalPhysnetMtu",
            "NeutronServicePlugins",
            "NeutronCorePlugin",
            "EnableConfigPurge",
            "DhcpAgentNotification"
          ],
          "description": "OpenStack Neutron base service. Shared for all Neutron agents.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/neutron-base.yaml",
          "id": "a665e050-fedd-4e54-843c-0782b618452b"
        },
        "0dfca828-179d-4512-baf2-3c0079c3940e": {
          "name": "LoadbalancerServiceBase",
          "parameters": [
            "EnableLoadBalancer",
            "RedisPassword",
            "MonitoringSubscriptionHaproxy",
            "HAProxyStatsEnabled",
            "HAProxyStatsPassword",
            "ServiceNetMap",
            "InternalTLSCAFile",
            "HAProxySyslogAddress",
            "RoleParameters",
            "DefaultPasswords",
            "EndpointMap",
            "SSLCertificate",
            "RoleName",
            "InternalTLSCRLPEMFile",
            "ServiceData",
            "DeployedSSLCertificatePath",
            "HAProxyStatsUser"
          ],
          "description": "HAproxy service configured with Puppet\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/haproxy.yaml",
          "id": "0dfca828-179d-4512-baf2-3c0079c3940e"
        },
        "52d2cd28-69ae-489f-8173-8d5b31493e95": {
          "name": "StoragePort",
          "parameters": [
            "FixedIPs",
            "NodeIndex",
            "IPPool",
            "ControlPlaneNetwork",
            "ControlPlaneIP",
            "PortName",
            "StorageNetName"
          ],
          "description": "Creates a port on the Storage network. The IP address will be chosen automatically if FixedIPs is empty.\n",
          "type": "OS::TripleO::Controller::Ports::StoragePort",
          "id": "52d2cd28-69ae-489f-8173-8d5b31493e95"
        },
        "a5279fb1-0db9-4d0e-b5c3-6d203f68b3ff": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "a5279fb1-0db9-4d0e-b5c3-6d203f68b3ff"
        },
        "345611fd-a648-41d3-845b-624b2ed84c9b": {
          "name": "InternalApiPort",
          "parameters": [
            "FixedIPs",
            "NodeIndex",
            "ControlPlaneNetwork",
            "ControlPlaneIP",
            "PortName",
            "IPPool",
            "InternalApiNetName"
          ],
          "description": "Creates a port on the InternalApi network. The IP address will be chosen automatically if FixedIPs is empty.\n",
          "type": "OS::TripleO::ComputeSriov::Ports::InternalApiPort",
          "id": "345611fd-a648-41d3-845b-624b2ed84c9b"
        },
        "949a09a6-650b-4f9a-8e28-8b1f33395cb8": {
          "name": "NodeExtraConfig",
          "parameters": [
            "server"
          ],
          "description": "Noop Extra Pre-Deployment Config",
          "type": "OS::TripleO::NodeExtraConfig",
          "id": "949a09a6-650b-4f9a-8e28-8b1f33395cb8"
        },
        "62808418-f117-442e-a2ad-f9e980b75f8f": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "62808418-f117-442e-a2ad-f9e980b75f8f"
        },
        "a4ab5c62-3dad-4191-9f0e-ffe0cd26ff66": {
          "name": "ManagementPort",
          "parameters": [
            "FixedIPs",
            "NodeIndex",
            "ControlPlaneNetwork",
            "ControlPlaneIP",
            "ControlPlaneSubnetCidr",
            "ServiceName",
            "PortName",
            "IPPool",
            "NetworkName"
          ],
          "description": "Returns the control plane port (provisioning network) as the ip_address.\n",
          "type": "OS::TripleO::ComputeSriov::Ports::ManagementPort",
          "id": "a4ab5c62-3dad-4191-9f0e-ffe0cd26ff66"
        },
        "bc896591-b25b-484b-98a0-d003957f6032": {
          "name": "NovaApiBase",
          "resources": [
            "93383510-4d4b-4270-934e-1097ba4cfd80",
            "efc0c47a-a6a5-4de3-bd9b-b4f2c31917cc"
          ],
          "id": "bc896591-b25b-484b-98a0-d003957f6032",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/nova-api.yaml",
          "parameters": [
            "MonitoringSubscriptionNovaApi",
            "NovaEnableDBPurge",
            "KeystoneRegion",
            "NovaApiPolicies",
            "EnableInternalTLS",
            "ServiceNetMap",
            "NovaApiLoggingSource",
            "NovaPassword",
            "RoleParameters",
            "DefaultPasswords",
            "EndpointMap",
            "NeutronMetadataProxySharedSecret",
            "NovaWorkers",
            "RoleName",
            "InstanceNameTemplate",
            "ServiceData",
            "NovaDefaultFloatingPool",
            "NovaDbSyncTimeout"
          ],
          "description": "OpenStack Nova API service configured with Puppet\n"
        },
        "bdf69c88-d6af-4e72-8555-73e807050a14": {
          "name": "CinderVolumeBase",
          "resources": [
            "749a78a2-fc3c-45e5-a1be-e2df5667b782"
          ],
          "id": "bdf69c88-d6af-4e72-8555-73e807050a14",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/cinder-volume.yaml",
          "parameters": [
            "CinderNfsMountOptions",
            "MonitoringSubscriptionCinderVolume",
            "DefaultPasswords",
            "CinderVolumeLoggingSource",
            "CinderRbdPoolName",
            "CinderNasSecureFileOperations",
            "CinderLVMLoopDeviceSize",
            "ServiceNetMap",
            "CinderNfsServers",
            "ServiceData",
            "CinderEnableIscsiBackend",
            "EndpointMap",
            "CinderEnableNfsBackend",
            "CinderISCSIHelper",
            "CinderNasSecureFilePermissions",
            "RoleName",
            "CinderISCSIProtocol",
            "CephClientUserName",
            "CinderEnableRbdBackend",
            "RoleParameters"
          ],
          "description": "OpenStack Cinder Volume service configured with Puppet\n"
        },
        "cfc9ecd1-5999-4bcf-bf1e-1cc46827e50f": {
          "name": "CeilometerAgentComputeBase",
          "resources": [
            "51ec20d7-3fb5-4f8f-a240-537e09e9005b"
          ],
          "id": "cfc9ecd1-5999-4bcf-bf1e-1cc46827e50f",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/ceilometer-agent-compute.yaml",
          "parameters": [
            "InstanceDiscoveryMethod",
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "RedisPassword",
            "MonitoringSubscriptionCeilometerCompute",
            "RoleName",
            "EndpointMap",
            "RoleParameters"
          ],
          "description": "OpenStack Ceilometer Compute Agent service configured with Puppet\n"
        },
        "eddc7fa1-03f5-445c-b0fe-dbfe5cac9541": {
          "name": "MySQLClient",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Mysql client settings\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/database/mysql-client.yaml",
          "id": "eddc7fa1-03f5-445c-b0fe-dbfe5cac9541"
        },
        "fe17943a-3e1e-43c7-9d4a-b581a53f9b8b": {
          "name": "StorageMgmtPort",
          "parameters": [
            "FixedIPs",
            "NodeIndex",
            "ControlPlaneNetwork",
            "ControlPlaneIP",
            "PortName",
            "StorageMgmtNetName",
            "IPPool"
          ],
          "description": "Creates a port on the StorageMgmt network. The IP address will be chosen automatically if FixedIPs is empty.\n",
          "type": "OS::TripleO::Controller::Ports::StorageMgmtPort",
          "id": "fe17943a-3e1e-43c7-9d4a-b581a53f9b8b"
        },
        "e4729ba5-8fc1-4b9d-b6b5-ab4ab5ade83b": {
          "name": "MySQLClient",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Mysql client settings\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/database/mysql-client.yaml",
          "id": "e4729ba5-8fc1-4b9d-b6b5-ab4ab5ade83b"
        },
        "77c4d2cb-f2f6-40a5-8e26-05085dc33f49": {
          "name": "41",
          "resources": [
            "64d93872-1e4b-4f3e-9245-311cad57a07f",
            "63f6a590-cca5-40af-a1fb-22398845da62",
            "a2748d3f-3970-4d50-a8ab-522dd57ad4ff"
          ],
          "id": "77c4d2cb-f2f6-40a5-8e26-05085dc33f49",
          "type": "OS::TripleO::Services::GnocchiStatsd",
          "parameters": [
            "DefaultPasswords",
            "DockerGnocchiStatsdImage",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "DockerGnocchiConfigImage",
            "RoleParameters"
          ],
          "description": "OpenStack containerized Gnocchi Statsd service\n"
        },
        "df00d5d5-6651-47db-beb7-87cf7a1c7a40": {
          "name": "StorageMgmtPort",
          "parameters": [
            "FixedIPs",
            "NodeIndex",
            "ControlPlaneNetwork",
            "ControlPlaneIP",
            "ControlPlaneSubnetCidr",
            "ServiceName",
            "PortName",
            "IPPool",
            "NetworkName"
          ],
          "description": "Returns the control plane port (provisioning network) as the ip_address.\n",
          "type": "OS::TripleO::ComputeSriov::Ports::StorageMgmtPort",
          "id": "df00d5d5-6651-47db-beb7-87cf7a1c7a40"
        },
        "78df4be3-a175-4e7c-8c5c-4cb44bbb3c47": {
          "name": "86",
          "resources": [
            "06e5fe7f-49d8-4a07-acab-0519919efc2d",
            "73e01c45-4176-43f1-9470-3ddb8aea8fd7"
          ],
          "id": "78df4be3-a175-4e7c-8c5c-4cb44bbb3c47",
          "type": "OS::TripleO::Services::NovaMetadata",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "DockerNovaConfigImage",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "DockerNovaMetadataImage",
            "RoleParameters"
          ],
          "description": "OpenStack containerized Nova Metadata service\n"
        },
        "ccc61fc3-450b-4966-97ca-266bf3ca5c9c": {
          "name": "NeutronBase",
          "parameters": [
            "NotificationDriver",
            "NeutronDBSyncExtraParams",
            "NeutronDhcpAgentsPerNetwork",
            "DatabaseSyncTimeout",
            "RoleName",
            "DefaultPasswords",
            "RabbitClientPort",
            "ServiceNetMap",
            "RoleParameters",
            "NeutronDnsDomain",
            "NeutronDebug",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "NeutronGlobalPhysnetMtu",
            "NeutronServicePlugins",
            "NeutronCorePlugin",
            "EnableConfigPurge",
            "DhcpAgentNotification"
          ],
          "description": "OpenStack Neutron base service. Shared for all Neutron agents.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/neutron-base.yaml",
          "id": "ccc61fc3-450b-4966-97ca-266bf3ca5c9c"
        },
        "31db735f-9fcf-4ce1-8555-be6591ea0579": {
          "name": "ComputeSriovServiceChain",
          "resources": [
            "4f90a018-c29e-46e4-afff-8fb778a677c9",
            "19dad790-2b17-425e-bbb4-6d0b76842a47"
          ],
          "id": "31db735f-9fcf-4ce1-8555-be6591ea0579",
          "type": "OS::TripleO::Services",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "Services",
            "RoleName",
            "RoleParameters"
          ],
          "description": "Utility stack to convert an array of services into a set of combined role configs.\n"
        },
        "dc90cc55-2ed9-4461-99ca-911c39ca4e64": {
          "name": "GnocchiServiceBase",
          "parameters": [
            "NumberOfStorageSacks",
            "DefaultPasswords",
            "MetricProcessingDelay",
            "ServiceNetMap",
            "GnocchiIndexerBackend",
            "GnocchiPassword",
            "GnocchiRbdPoolName",
            "RedisPassword",
            "EndpointMap",
            "Debug",
            "RoleName",
            "GnocchiDebug",
            "CephClientUserName",
            "ServiceData",
            "RoleParameters"
          ],
          "description": "Gnocchi service configured with Puppet\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/gnocchi-base.yaml",
          "id": "dc90cc55-2ed9-4461-99ca-911c39ca4e64"
        },
        "40c13fdd-f440-4592-8538-61d963aa3099": {
          "name": "ComputeSriovDeployment_Step4",
          "parameters": [],
          "description": "No description",
          "type": "OS::TripleO::DeploymentSteps",
          "id": "40c13fdd-f440-4592-8538-61d963aa3099"
        },
        "2d093575-d3b1-460d-ac0d-4e1164d0c827": {
          "name": "88",
          "resources": [
            "71b93ef0-4e32-4bc6-82e8-5e0300b0241c",
            "3d4e1bc6-f893-499a-a286-0e73ae800c70",
            "3321ac3c-dd5a-4611-8255-2439ac41997c"
          ],
          "id": "2d093575-d3b1-460d-ac0d-4e1164d0c827",
          "type": "OS::TripleO::Services::NovaScheduler",
          "parameters": [
            "DefaultPasswords",
            "DockerNovaSchedulerImage",
            "ServiceNetMap",
            "DockerNovaConfigImage",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "OpenStack containerized Nova Scheduler service\n"
        },
        "1b9739ec-acc6-49b8-849e-91c6c48487de": {
          "name": "ComputeSriovArtifactsDeploy",
          "parameters": [],
          "description": "No description",
          "type": "OS::Heat::StructuredDeploymentGroup",
          "id": "1b9739ec-acc6-49b8-849e-91c6c48487de"
        },
        "2b5b6ac8-191d-4ee4-b106-34f464268db0": {
          "name": "MySQLClient",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Mysql client settings\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/database/mysql-client.yaml",
          "id": "2b5b6ac8-191d-4ee4-b106-34f464268db0"
        },
        "242469f8-5bc4-4d82-98d9-026dc55b7ad7": {
          "name": "NetworkConfig",
          "parameters": [
            "LocalProvisioningNicName",
            "TenantIpSubnet",
            "ControlPlaneDefaultRoute",
            "NumDpdkInterfaceRxQueues",
            "ManagementInterfaceDefaultRoute",
            "BondInterfaceOvsOptions",
            "StorageMgmtNetworkVlanID",
            "ExternalIpSubnet",
            "ControlPlaneSubnetCidr",
            "InternalApiNetworkVlanID",
            "EC2MetadataIp",
            "ControlPlaneIp",
            "StorageIpSubnet",
            "ManagementNetworkVlanID",
            "ExternalInterfaceDefaultRoute",
            "StorageMgmtIpSubnet",
            "ExternalNetworkVlanID",
            "DnsServers",
            "TenantNetworkVlanID",
            "ManagementIpSubnet",
            "InternalApiIpSubnet",
            "StorageNetworkVlanID"
          ],
          "description": "Software Config to drive os-net-config with 2 bonded nics on a bridge with VLANs attached for the compute role.\n",
          "type": "OS::TripleO::ComputeSriov::Net::SoftwareConfig",
          "id": "242469f8-5bc4-4d82-98d9-026dc55b7ad7"
        },
        "c785318e-2f56-4989-9a0d-4efec19f0434": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "c785318e-2f56-4989-9a0d-4efec19f0434"
        },
        "d5d3ff1e-f2f6-451c-8731-53d02a118d8c": {
          "name": "HorizonBase",
          "parameters": [
            "HorizonPasswordValidator",
            "DefaultPasswords",
            "HorizonPasswordValidatorHelp",
            "MonitoringSubscriptionHorizon",
            "HorizonSecret",
            "InternalTLSCAFile",
            "HorizonAllowedHosts",
            "ServiceData",
            "HorizonDebug",
            "EndpointMap",
            "HorizonSecureCookies",
            "Debug",
            "RoleName",
            "MemcachedIPv6",
            "EnableInternalTLS",
            "ServiceNetMap",
            "RoleParameters"
          ],
          "description": "Horizon service configured with Puppet\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/horizon.yaml",
          "id": "d5d3ff1e-f2f6-451c-8731-53d02a118d8c"
        },
        "83de5f6b-540e-452e-a928-4fd1126e89bf": {
          "name": "SwiftBase",
          "parameters": [
            "DefaultPasswords",
            "SwiftHashSuffix",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "OpenStack Swift Proxy service configured with Puppet\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/swift-base.yaml",
          "id": "83de5f6b-540e-452e-a928-4fd1126e89bf"
        },
        "0ce59e0e-bcf5-491a-8119-e63d00fc8b40": {
          "name": "65",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "Mongodb service, disabled by default since pike\n",
          "type": "OS::TripleO::Services::MongoDb",
          "id": "0ce59e0e-bcf5-491a-8119-e63d00fc8b40"
        },
        "2fb38fea-aa0e-419d-94ff-67befffa808f": {
          "name": "RedisVirtualIP",
          "parameters": [
            "FixedIPs",
            "ControlPlaneNetwork",
            "ControlPlaneIP",
            "ServiceName",
            "PortName",
            "NetworkName"
          ],
          "description": "Creates a port for a VIP on the isolated network NetworkName. The IP address will be chosen automatically if FixedIPs is empty.\n",
          "type": "OS::TripleO::Network::Ports::RedisVipPort",
          "id": "2fb38fea-aa0e-419d-94ff-67befffa808f"
        },
        "1d19396c-324f-4629-8b4c-f1673fefde9c": {
          "name": "6",
          "resources": [
            "cfc9ecd1-5999-4bcf-bf1e-1cc46827e50f",
            "43b4070e-4899-4d5d-8542-f25a45c78cd5"
          ],
          "id": "1d19396c-324f-4629-8b4c-f1673fefde9c",
          "type": "OS::TripleO::Services::ComputeCeilometerAgent",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "DockerCeilometerComputeImage",
            "EndpointMap",
            "DockerCeilometerConfigImage",
            "RoleName",
            "RoleParameters"
          ],
          "description": "OpenStack containerized Ceilometer Agent Compute service\n"
        },
        "17f12e9f-c971-410f-b902-4378eb5d2ce7": {
          "name": "8",
          "resources": [
            "c71fe9b2-cf9f-476e-b2e8-0a0e102023b8",
            "cf84ff51-f2ac-4471-b0e8-1332bccb2a9c"
          ],
          "id": "17f12e9f-c971-410f-b902-4378eb5d2ce7",
          "type": "OS::TripleO::Services::CeilometerAgentNotification",
          "parameters": [
            "DefaultPasswords",
            "DockerCeilometerNotificationImage",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "DockerCeilometerConfigImage",
            "RoleName",
            "RoleParameters"
          ],
          "description": "OpenStack containerized Ceilometer Agent Notification service\n"
        },
        "4489697a-e024-491f-af46-fa1ebc95950d": {
          "name": "29",
          "resources": [
            "bdf69c88-d6af-4e72-8555-73e807050a14"
          ],
          "id": "4489697a-e024-491f-af46-fa1ebc95950d",
          "type": "OS::TripleO::Services::CinderVolume",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "OpenStack Cinder Volume service with Pacemaker configured with Puppet\n"
        },
        "a817249e-81c6-467d-8d4b-4bbe89f8fc07": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "a817249e-81c6-467d-8d4b-4bbe89f8fc07"
        },
        "03aa36a9-d733-41d8-913f-bf92b17738a5": {
          "name": "9",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "OpenStack Ceilometer API service, disabled since pike\n",
          "type": "OS::TripleO::Services::CeilometerApi",
          "id": "03aa36a9-d733-41d8-913f-bf92b17738a5"
        },
        "5474f034-73ce-487c-a110-83692ced7139": {
          "name": "ControllerAllNodesDeployment",
          "parameters": [],
          "description": "No description",
          "type": "OS::TripleO::AllNodesDeployment",
          "id": "5474f034-73ce-487c-a110-83692ced7139"
        },
        "0ae6ca9c-39b4-4945-9297-7d39d13a0c9f": {
          "name": "11",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "DockerInsecureRegistryAddress",
            "RoleName",
            "RoleParameters"
          ],
          "description": "Configures docker on the host\n",
          "type": "OS::TripleO::Services::Docker",
          "id": "0ae6ca9c-39b4-4945-9297-7d39d13a0c9f"
        },
        "e2b556cc-2961-4752-a5bd-962754bbb46d": {
          "name": "42",
          "resources": [
            "c043d4bb-59fc-4f26-b84a-9c4432eec14e"
          ],
          "id": "e2b556cc-2961-4752-a5bd-962754bbb46d",
          "type": "OS::TripleO::Services::HAproxy",
          "parameters": [
            "DefaultPasswords",
            "DockerHAProxyConfigImage",
            "HAProxyInternalTLSCertsDirectory",
            "ServiceNetMap",
            "ServiceData",
            "HAProxyInternalTLSKeysDirectory",
            "EndpointMap",
            "InternalTLSCAFile",
            "DockerHAProxyImage",
            "RoleName",
            "InternalTLSCRLPEMFile",
            "DeployedSSLCertificatePath",
            "RoleParameters"
          ],
          "description": "OpenStack containerized HAproxy service for pacemaker\n"
        },
        "bc444235-d702-465c-9019-2b4a54ca3e24": {
          "name": "ComputeSriovDeployment_Step1",
          "parameters": [],
          "description": "No description",
          "type": "OS::TripleO::DeploymentSteps",
          "id": "bc444235-d702-465c-9019-2b4a54ca3e24"
        },
        "b26ba532-7928-4651-b531-a06acf4154db": {
          "name": "116",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "EnablePackageInstall",
            "RoleName",
            "EndpointMap",
            "RoleParameters"
          ],
          "description": "TripleO Package installation settings\n",
          "type": "OS::TripleO::Services::TripleoPackages",
          "id": "b26ba532-7928-4651-b531-a06acf4154db"
        },
        "76772edd-b7f1-4921-a0ef-0bd6286556ad": {
          "name": "ControllerArtifactsConfig",
          "parameters": [
            "DeployArtifactURLs"
          ],
          "description": "Software Config to install deployment artifacts (tarball's and/or distribution packages) via HTTP URLs. The contents of the URL's can be tarballs or distribution packages (RPMs). If a tarball URL is supplied it is extracted onto the target node during deployment. If a package is deployed it is installed from the supplied URL.  Note, you need the heat-config-script element built into your images, due to the script group below.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/deploy-artifacts.yaml",
          "id": "76772edd-b7f1-4921-a0ef-0bd6286556ad"
        },
        "43b4070e-4899-4d5d-8542-f25a45c78cd5": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "43b4070e-4899-4d5d-8542-f25a45c78cd5"
        },
        "1c3fb632-4330-41d5-bcb8-b9d2c1a00e45": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "1c3fb632-4330-41d5-bcb8-b9d2c1a00e45"
        },
        "106af7e7-bc97-4158-8418-dc4c2cc87878": {
          "name": "UpdateConfig",
          "parameters": [],
          "description": "Software-config for performing package updates using yum\n",
          "type": "OS::TripleO::Tasks::PackageUpdate",
          "id": "106af7e7-bc97-4158-8418-dc4c2cc87878"
        },
        "fa7629d0-4b68-44c8-b90c-f7e105f7bfcd": {
          "name": "ApacheServiceBase",
          "parameters": [
            "DefaultPasswords",
            "ApacheServerLimit",
            "ServiceData",
            "ServiceNetMap",
            "RoleParameters",
            "ApacheMaxRequestWorkers",
            "EndpointMap",
            "InternalTLSCAFile",
            "RoleName",
            "EnableInternalTLS"
          ],
          "description": "Apache service configured with Puppet. Note this is typically included automatically via other services which run via Apache.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/apache.yaml",
          "id": "fa7629d0-4b68-44c8-b90c-f7e105f7bfcd"
        },
        "23339829-b530-4155-ace5-f7a0594d76f7": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "23339829-b530-4155-ace5-f7a0594d76f7"
        },
        "3c5f748a-535d-40b7-8bce-926995b785d9": {
          "name": "StorageVirtualIP",
          "parameters": [
            "FixedIPs",
            "NodeIndex",
            "IPPool",
            "ControlPlaneNetwork",
            "ControlPlaneIP",
            "PortName",
            "StorageNetName"
          ],
          "description": "Creates a port on the Storage network. The IP address will be chosen automatically if FixedIPs is empty.\n",
          "type": "OS::TripleO::Network::Ports::StorageVipPort",
          "id": "3c5f748a-535d-40b7-8bce-926995b785d9"
        },
        "5a4c974d-c4a3-4ccb-a817-13996b84fc60": {
          "name": "7",
          "resources": [
            "a1815b20-d33e-44ef-8e56-6de5433d3e95",
            "c2dd1d5d-2ade-4245-8704-a952bcffc73f"
          ],
          "id": "5a4c974d-c4a3-4ccb-a817-13996b84fc60",
          "type": "OS::TripleO::Services::CeilometerAgentCentral",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "RoleParameters",
            "EndpointMap",
            "DockerCeilometerConfigImage",
            "RoleName",
            "DockerCeilometerCentralImage"
          ],
          "description": "OpenStack containerized Ceilometer Agent Central service\n"
        },
        "a6d36781-3447-4984-a56f-085b5ddb2275": {
          "name": "StorageMgmtVirtualIP",
          "parameters": [
            "FixedIPs",
            "NodeIndex",
            "ControlPlaneNetwork",
            "ControlPlaneIP",
            "PortName",
            "StorageMgmtNetName",
            "IPPool"
          ],
          "description": "Creates a port on the StorageMgmt network. The IP address will be chosen automatically if FixedIPs is empty.\n",
          "type": "OS::TripleO::Network::Ports::StorageMgmtVipPort",
          "id": "a6d36781-3447-4984-a56f-085b5ddb2275"
        },
        "c4ce6d38-dfb6-412d-bacf-ee1f070e86ff": {
          "name": "38",
          "resources": [
            "72a2cb9c-0579-4b0e-9e58-d82bbfb150af",
            "d7975f29-fe52-4fb0-910f-c5ef177f80f7",
            "1c3fb632-4330-41d5-bcb8-b9d2c1a00e45"
          ],
          "id": "c4ce6d38-dfb6-412d-bacf-ee1f070e86ff",
          "type": "OS::TripleO::Services::GlanceApi",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "GlanceNfsEnabled",
            "ServiceData",
            "DockerGlanceApiImage",
            "EndpointMap",
            "DockerGlanceApiConfigImage",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "OpenStack Glance service configured with Puppet\n"
        },
        "d4f30acf-7181-493d-bd25-5bd9629e5505": {
          "name": "ExternalPort",
          "parameters": [
            "FixedIPs",
            "NodeIndex",
            "ControlPlaneNetwork",
            "ControlPlaneIP",
            "ControlPlaneSubnetCidr",
            "ServiceName",
            "PortName",
            "IPPool",
            "NetworkName"
          ],
          "description": "Returns the control plane port (provisioning network) as the ip_address.\n",
          "type": "OS::TripleO::ComputeSriov::Ports::ExternalPort",
          "id": "d4f30acf-7181-493d-bd25-5bd9629e5505"
        },
        "15ece0dd-fc05-4623-9256-06acf51cd5c4": {
          "name": "13",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "Configure iscsid\n",
          "type": "OS::TripleO::Services::Iscsid",
          "id": "15ece0dd-fc05-4623-9256-06acf51cd5c4"
        },
        "1e13c01b-7e32-42b8-a0b5-a9485927102b": {
          "name": "ControllerDeployment_Step3",
          "parameters": [],
          "description": "No description",
          "type": "OS::TripleO::DeploymentSteps",
          "id": "1e13c01b-7e32-42b8-a0b5-a9485927102b"
        },
        "f94e7254-ae96-432a-9ad8-e4cedd5c9947": {
          "name": "ControllerAllNodesValidationDeployment",
          "parameters": [],
          "description": "No description",
          "type": "OS::Heat::StructuredDeployments",
          "id": "f94e7254-ae96-432a-9ad8-e4cedd5c9947"
        },
        "3d6abb8b-ecc5-4621-a3ad-abf27e24fe8a": {
          "name": "PublicVirtualIP",
          "parameters": [
            "FixedIPs",
            "NodeIndex",
            "ExternalNetName",
            "ControlPlaneIP",
            "PortName",
            "ControlPlaneNetwork",
            "IPPool"
          ],
          "description": "Creates a port on the External network. The IP address will be chosen automatically if FixedIPs is empty.\n",
          "type": "OS::TripleO::Network::Ports::ExternalVipPort",
          "id": "3d6abb8b-ecc5-4621-a3ad-abf27e24fe8a"
        },
        "54f9b36b-8662-4106-93ff-66c47a8573b0": {
          "name": "10",
          "resources": [
            "2709b085-25f5-42b8-be43-acdf15fe64e4",
            "3570634b-6a25-432d-8678-83377ee28675"
          ],
          "id": "54f9b36b-8662-4106-93ff-66c47a8573b0",
          "type": "OS::TripleO::Services::ComputeNeutronOvsAgent",
          "parameters": [
            "NeutronEnableDVR",
            "NeutronEnableARPResponder",
            "DefaultPasswords",
            "NeutronTunnelTypes",
            "MonitoringSubscriptionNeutronOvs",
            "ServiceNetMap",
            "NeutronEnableL2Pop",
            "NeutronAgentExtensions",
            "NeutronBridgeMappings",
            "EndpointMap",
            "NeutronOVSFirewallDriver",
            "NeutronOpenVswitchAgentLoggingSource",
            "RoleName",
            "ServiceData",
            "RoleParameters"
          ],
          "description": "OpenStack Neutron OVS agent configured with Puppet\n"
        },
        "cf6edd93-1e69-4e2b-ad2c-020c609768c5": {
          "name": "19",
          "resources": [
            "aa365853-c667-4365-8c78-7afe44cd3c7b",
            "34679f59-dd7d-4d5a-965d-505daa1a6bb4",
            "3b210aa9-d1d8-44a3-9725-87a596b941fb"
          ],
          "id": "cf6edd93-1e69-4e2b-ad2c-020c609768c5",
          "type": "OS::TripleO::Services::NovaCompute",
          "parameters": [
            "DefaultPasswords",
            "DockerNovaMigrationSshdPort",
            "DockerNovaLibvirtConfigImage",
            "ServiceNetMap",
            "UpgradeLevelNovaCompute",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "DockerNovaComputeImage",
            "RoleParameters"
          ],
          "description": "OpenStack containerized Nova Compute service\n"
        },
        "c71fe9b2-cf9f-476e-b2e8-0a0e102023b8": {
          "name": "CeilometerAgentNotificationBase",
          "resources": [
            "53215f0a-bfa3-48e9-847f-a55bea899c4b"
          ],
          "id": "c71fe9b2-cf9f-476e-b2e8-0a0e102023b8",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/ceilometer-agent-notification.yaml",
          "parameters": [
            "DefaultPasswords",
            "CeilometerAgentNotificationLoggingSource",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "MonitoringSubscriptionCeilometerNotification",
            "RoleName",
            "RoleParameters"
          ],
          "description": "OpenStack Ceilometer Notification Agent service configured with Puppet\n"
        },
        "3ee59135-0548-4ab7-9a76-91c63c4c06fa": {
          "name": "RedisBase",
          "resources": [
            "9e55086e-0434-4dff-8213-32293d82fab1"
          ],
          "id": "3ee59135-0548-4ab7-9a76-91c63c4c06fa",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/database/redis.yaml",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "OpenStack Redis service configured with Puppet\n"
        },
        "b6a80352-a6b7-430f-9ba2-56a98f62afa4": {
          "name": "2",
          "resources": [
            "55f757dd-a20d-4cd7-985d-836c71d7a1e1",
            "c624bfe2-beb1-40f2-8127-cc54fcb34ea3",
            "caf48355-1fcb-4a6c-881a-a8b601b13ee6"
          ],
          "id": "b6a80352-a6b7-430f-9ba2-56a98f62afa4",
          "type": "OS::TripleO::Services::AodhListener",
          "parameters": [
            "DefaultPasswords",
            "DockerAodhListenerImage",
            "ServiceNetMap",
            "DockerAodhConfigImage",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "OpenStack containerized Aodh Listener service\n"
        },
        "38d21f94-13e2-492c-9f4b-68ffa1855963": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "38d21f94-13e2-492c-9f4b-68ffa1855963"
        },
        "af2bfdb6-dbda-40c3-ba33-29beecafdef3": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "af2bfdb6-dbda-40c3-ba33-29beecafdef3"
        },
        "02924772-fd01-4ff1-8974-a849d5a0e250": {
          "name": "ServiceNetMap",
          "id": "02924772-fd01-4ff1-8974-a849d5a0e250",
          "type": "OS::TripleO::ServiceNetMap",
          "parameters": [
            "ExternalNetName",
            "TenantNetName",
            "ServiceNetMapDefaults",
            "ServiceNetMap",
            "ServiceNetMapDeprecatedMapping",
            "StorageMgmtNetName",
            "StorageNetName",
            "InternalApiNetName",
            "ManagementNetName"
          ],
          "description": "Mapping of service_name_network -> network name\n",
          "parameter_groups": [
            {
              "label": "deprecated",
              "parameters": [
                "ServiceNetMapDeprecatedMapping"
              ],
              "description": "Do not use deprecated params, they will be removed."
            }
          ]
        },
        "a210f7d1-0cba-423f-bb25-a35bd25af117": {
          "name": "NodeExtraConfig",
          "parameters": [
            "server"
          ],
          "description": "Noop Extra Pre-Deployment Config",
          "type": "OS::TripleO::NodeExtraConfig",
          "id": "a210f7d1-0cba-423f-bb25-a35bd25af117"
        },
        "3d849c49-7c4d-4d6b-9bb1-f3b447372cb6": {
          "name": "ApacheServiceBase",
          "parameters": [
            "DefaultPasswords",
            "ApacheServerLimit",
            "ServiceData",
            "ServiceNetMap",
            "RoleParameters",
            "ApacheMaxRequestWorkers",
            "EndpointMap",
            "InternalTLSCAFile",
            "RoleName",
            "EnableInternalTLS"
          ],
          "description": "Apache service configured with Puppet. Note this is typically included automatically via other services which run via Apache.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/apache.yaml",
          "id": "3d849c49-7c4d-4d6b-9bb1-f3b447372cb6"
        },
        "b18ed1ea-6c65-44b0-83b7-356c66333ada": {
          "name": "11",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "OpenStack Ceilometer Expirer service, disabled since pike\n",
          "type": "OS::TripleO::Services::CeilometerExpirer",
          "id": "b18ed1ea-6c65-44b0-83b7-356c66333ada"
        },
        "970d5009-2197-4989-9545-96c4adb069b0": {
          "name": "50",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "Configure iscsid\n",
          "type": "OS::TripleO::Services::Iscsid",
          "id": "970d5009-2197-4989-9545-96c4adb069b0"
        },
        "0e3f18bf-19e1-4c36-9b3d-f22974c9e3f6": {
          "name": "ApacheServiceBase",
          "parameters": [
            "DefaultPasswords",
            "ApacheServerLimit",
            "ServiceData",
            "ServiceNetMap",
            "RoleParameters",
            "ApacheMaxRequestWorkers",
            "EndpointMap",
            "InternalTLSCAFile",
            "RoleName",
            "EnableInternalTLS"
          ],
          "description": "Apache service configured with Puppet. Note this is typically included automatically via other services which run via Apache.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/apache.yaml",
          "id": "0e3f18bf-19e1-4c36-9b3d-f22974c9e3f6"
        },
        "93383510-4d4b-4270-934e-1097ba4cfd80": {
          "name": "NovaBase",
          "parameters": [
            "NotificationDriver",
            "KeystoneRegion",
            "NovaCronArchiveDeleteRowsHour",
            "DatabaseSyncTimeout",
            "NovaOVSBridge",
            "RoleName",
            "NovaCronArchiveDeleteRowsUntilComplete",
            "DefaultPasswords",
            "RabbitClientPort",
            "ServiceNetMap",
            "NovaCronArchiveDeleteRowsMonth",
            "NovaCronArchiveDeleteRowsMonthday",
            "RoleParameters",
            "NovaCronArchiveDeleteRowsMinute",
            "NovaDebug",
            "NovaPlacementAPIInterface",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "NovaCronArchiveDeleteRowsUser",
            "UpgradeLevelNovaCompute",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "NovaCronArchiveDeleteRowsWeekday",
            "NovaPassword",
            "NovaCronArchiveDeleteRowsMaxRows",
            "NovaIPv6",
            "NeutronPassword",
            "EnableConfigPurge",
            "NovaCronArchiveDeleteRowsDestination"
          ],
          "description": "OpenStack Nova base service. Shared for all Nova services.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/nova-base.yaml",
          "id": "93383510-4d4b-4270-934e-1097ba4cfd80"
        },
        "37ce0cb8-50bd-4950-bfa7-382f6c2d453e": {
          "name": "102",
          "resources": [
            "56ff9bdb-e701-41ee-9e75-fd573a3c08b4"
          ],
          "id": "37ce0cb8-50bd-4950-bfa7-382f6c2d453e",
          "type": "OS::TripleO::Services::RabbitMQ",
          "parameters": [
            "DefaultPasswords",
            "DockerRabbitmqConfigImage",
            "DockerRabbitmqImage",
            "ServiceNetMap",
            "RabbitCookie",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "OpenStack containerized Rabbitmq service\n"
        },
        "82fcc552-0060-4667-81cf-dc1ff59b7571": {
          "name": "MySQLClient",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Mysql client settings\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/database/mysql-client.yaml",
          "id": "82fcc552-0060-4667-81cf-dc1ff59b7571"
        },
        "0fd27620-bc4d-46d7-8989-43b9dadb6363": {
          "name": "ManagementNetwork",
          "parameters": [
            "ManagementSubnetName",
            "ManagementNetCidr",
            "ManagementAllocationPools",
            "ManagementNetShared",
            "ManagementNetAdminStateUp",
            "ManagementNetEnableDHCP",
            "ManagementInterfaceDefaultRoute",
            "ManagementNetValueSpecs",
            "ManagementNetName"
          ],
          "description": "Management network definition (automatically generated).\n",
          "type": "OS::TripleO::Network::Management",
          "id": "0fd27620-bc4d-46d7-8989-43b9dadb6363"
        },
        "55f757dd-a20d-4cd7-985d-836c71d7a1e1": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "55f757dd-a20d-4cd7-985d-836c71d7a1e1"
        },
        "1669dca0-b456-43a5-8c45-0294cdca2546": {
          "name": "Networks",
          "resources": [
            "0fd27620-bc4d-46d7-8989-43b9dadb6363",
            "258f999b-9abc-45a9-b058-199b86ab7b0e",
            "dea0e6d4-1f7e-4911-960f-b6f3bd538aae",
            "afe8e9ff-87f0-45c2-a417-51e35b2cd674",
            "2d7c4ddf-6272-4038-8a7c-bbfa014e883d",
            "575a3cef-4be2-43c2-a899-1d276bf7c7e6"
          ],
          "id": "1669dca0-b456-43a5-8c45-0294cdca2546",
          "type": "OS::TripleO::Network",
          "parameters": [],
          "description": "Create networks to split out Overcloud traffic"
        },
        "870dccac-3429-49f8-b032-54342236aa2a": {
          "name": "ComputeSriov",
          "resources": [
            "62d29a17-40ce-4b0a-b164-8baa8cfde880"
          ],
          "id": "870dccac-3429-49f8-b032-54342236aa2a",
          "type": "OS::Heat::ResourceGroup",
          "parameters": [],
          "description": "No description"
        },
        "aa46c734-ab98-48c4-ab44-16b95949a285": {
          "name": "NeutronBase",
          "parameters": [
            "NotificationDriver",
            "NeutronDBSyncExtraParams",
            "NeutronDhcpAgentsPerNetwork",
            "DatabaseSyncTimeout",
            "RoleName",
            "DefaultPasswords",
            "RabbitClientPort",
            "ServiceNetMap",
            "RoleParameters",
            "NeutronDnsDomain",
            "NeutronDebug",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "NeutronGlobalPhysnetMtu",
            "NeutronServicePlugins",
            "NeutronCorePlugin",
            "EnableConfigPurge",
            "DhcpAgentNotification"
          ],
          "description": "OpenStack Neutron base service. Shared for all Neutron agents.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/neutron-base.yaml",
          "id": "aa46c734-ab98-48c4-ab44-16b95949a285"
        },
        "88f1521a-472b-4ddf-bc87-4f7c86e1e826": {
          "name": "66",
          "resources": [
            "f9d6c746-8d8d-440c-bccf-8c1eef9ffdcc",
            "62808418-f117-442e-a2ad-f9e980b75f8f"
          ],
          "id": "88f1521a-472b-4ddf-bc87-4f7c86e1e826",
          "type": "OS::TripleO::Services::MySQL",
          "parameters": [
            "DefaultPasswords",
            "DockerMysqlConfigImage",
            "DockerMysqlImage",
            "ServiceNetMap",
            "MysqlClustercheckPassword",
            "EndpointMap",
            "InternalTLSCAFile",
            "RoleName",
            "MysqlRootPassword",
            "ServiceData",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "MySQL service deployment with pacemaker bundle\n"
        },
        "a3f21c56-cd57-4af8-af8b-198c3ca832ff": {
          "name": "AllNodesDeploySteps",
          "resources": [
            "40c13fdd-f440-4592-8538-61d963aa3099",
            "7399065c-04f3-4aa8-bc2b-6b7ee4cfebd0",
            "82da7831-a516-405d-9330-c4ce99ec8dbe",
            "c4bfeb19-72b4-49d0-8158-1c9ded153fbd",
            "bc444235-d702-465c-9019-2b4a54ca3e24",
            "2ea9c20b-7242-478e-8754-e07c2ddec09a",
            "c5c045e9-ed15-4233-bd19-a9d7ec9b5e43",
            "76772edd-b7f1-4921-a0ef-0bd6286556ad",
            "b85b48a9-6e97-42c3-a901-5bf422111655",
            "1b9739ec-acc6-49b8-849e-91c6c48487de",
            "dbdd9b44-9737-4d28-9e4c-8d00645db87a",
            "d471d902-2b49-409c-87f4-b288e1ff388f",
            "95d9e865-1a36-45c1-a331-d90b41fa5f18",
            "3aa748b6-e75d-4f4b-b5f2-f76f98eaafd5",
            "1e13c01b-7e32-42b8-a0b5-a9485927102b",
            "b188af72-16ae-4573-9e0b-a80156d952ec",
            "a11c2231-c69a-4967-939d-a91168d84829",
            "57a9699c-8810-427c-8a46-66f13aa459e9"
          ],
          "id": "a3f21c56-cd57-4af8-af8b-198c3ca832ff",
          "type": "OS::TripleO::PostDeploySteps",
          "parameters": [
            "role_data",
            "DockerPuppetDebug",
            "stack_name",
            "servers",
            "EndpointMap",
            "DeployIdentifier",
            "DockerPuppetProcessCount",
            "ctlplane_service_ips"
          ],
          "description": "Post-deploy configuration steps via puppet for all roles, as defined in ../roles_data.yaml\n"
        },
        "eb1bb16c-4cfe-4a71-9ad4-f64e40a22108": {
          "name": "28",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "TimeZone",
            "RoleName",
            "RoleParameters"
          ],
          "description": "Composable Timezone service\n",
          "type": "OS::TripleO::Services::Timezone",
          "id": "eb1bb16c-4cfe-4a71-9ad4-f64e40a22108"
        },
        "52f34d31-a5ec-4112-87de-af58417dab97": {
          "name": "30",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "EnablePackageInstall",
            "RoleName",
            "EndpointMap",
            "RoleParameters"
          ],
          "description": "TripleO Package installation settings\n",
          "type": "OS::TripleO::Services::TripleoPackages",
          "id": "52f34d31-a5ec-4112-87de-af58417dab97"
        },
        "05cac074-1e46-41e0-b190-8fd4c255eceb": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "05cac074-1e46-41e0-b190-8fd4c255eceb"
        },
        "2d7c4ddf-6272-4038-8a7c-bbfa014e883d": {
          "name": "TenantNetwork",
          "parameters": [
            "TenantNetShared",
            "TenantNetName",
            "TenantSubnetName",
            "TenantInterfaceDefaultRoute",
            "TenantNetCidr",
            "TenantNetAdminStateUp",
            "TenantNetEnableDHCP",
            "TenantNetValueSpecs",
            "TenantAllocationPools"
          ],
          "description": "Tenant network definition (automatically generated).\n",
          "type": "OS::TripleO::Network::Tenant",
          "id": "2d7c4ddf-6272-4038-8a7c-bbfa014e883d"
        },
        "1c4d141a-d273-48b5-b10b-35bb84f6b3e3": {
          "name": "ControllerHostsDeployment",
          "parameters": [],
          "description": "No description",
          "type": "OS::Heat::StructuredDeployments",
          "id": "1c4d141a-d273-48b5-b10b-35bb84f6b3e3"
        },
        "51ec20d7-3fb5-4f8f-a240-537e09e9005b": {
          "name": "CeilometerServiceBase",
          "parameters": [
            "NotificationDriver",
            "KeystoneRegion",
            "GnocchiArchivePolicy",
            "RoleName",
            "SnmpdReadonlyUserPassword",
            "PipelinePublishers",
            "DefaultPasswords",
            "RabbitClientPort",
            "CeilometerDebug",
            "ServiceNetMap",
            "SnmpdReadonlyUserName",
            "RoleParameters",
            "CeilometerApiEndpoint",
            "CeilometerPassword",
            "ManageEventPipeline",
            "CeilometerWorkers",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "ManagePipeline",
            "EventPipelinePublishers",
            "CeilometerMeteringSecret"
          ],
          "description": "OpenStack Ceilometer service configured with Puppet\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/ceilometer-base.yaml",
          "id": "51ec20d7-3fb5-4f8f-a240-537e09e9005b"
        },
        "858091b0-c8fe-478c-8619-39258f1b5d2d": {
          "name": "GnocchiServiceBase",
          "parameters": [
            "NumberOfStorageSacks",
            "DefaultPasswords",
            "MetricProcessingDelay",
            "ServiceNetMap",
            "GnocchiIndexerBackend",
            "GnocchiPassword",
            "GnocchiRbdPoolName",
            "RedisPassword",
            "EndpointMap",
            "Debug",
            "RoleName",
            "GnocchiDebug",
            "CephClientUserName",
            "ServiceData",
            "RoleParameters"
          ],
          "description": "Gnocchi service configured with Puppet\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/gnocchi-base.yaml",
          "id": "858091b0-c8fe-478c-8619-39258f1b5d2d"
        },
        "cf84ff51-f2ac-4471-b0e8-1332bccb2a9c": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "cf84ff51-f2ac-4471-b0e8-1332bccb2a9c"
        },
        "6fcab76f-048b-468f-a755-b2d98cffe67f": {
          "name": "NeutronBase",
          "parameters": [
            "NotificationDriver",
            "NeutronDBSyncExtraParams",
            "NeutronDhcpAgentsPerNetwork",
            "DatabaseSyncTimeout",
            "RoleName",
            "DefaultPasswords",
            "RabbitClientPort",
            "ServiceNetMap",
            "RoleParameters",
            "NeutronDnsDomain",
            "NeutronDebug",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "NeutronGlobalPhysnetMtu",
            "NeutronServicePlugins",
            "NeutronCorePlugin",
            "EnableConfigPurge",
            "DhcpAgentNotification"
          ],
          "description": "OpenStack Neutron base service. Shared for all Neutron agents.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/neutron-base.yaml",
          "id": "6fcab76f-048b-468f-a755-b2d98cffe67f"
        },
        "40eb85c9-6088-4e5d-b392-a57961fd9657": {
          "name": "GnocchiServiceBase",
          "parameters": [
            "NumberOfStorageSacks",
            "DefaultPasswords",
            "MetricProcessingDelay",
            "ServiceNetMap",
            "GnocchiIndexerBackend",
            "GnocchiPassword",
            "GnocchiRbdPoolName",
            "RedisPassword",
            "EndpointMap",
            "Debug",
            "RoleName",
            "GnocchiDebug",
            "CephClientUserName",
            "ServiceData",
            "RoleParameters"
          ],
          "description": "Gnocchi service configured with Puppet\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/gnocchi-base.yaml",
          "id": "40eb85c9-6088-4e5d-b392-a57961fd9657"
        },
        "9080e350-ebb9-4c5b-89d4-a79109c531f5": {
          "name": "AodhBase",
          "parameters": [
            "RedisPassword",
            "NotificationDriver",
            "KeystoneRegion",
            "AodhPassword",
            "RabbitClientPort",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "ServiceNetMap",
            "RoleParameters",
            "DefaultPasswords",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "RoleName",
            "ServiceData",
            "AodhDebug"
          ],
          "description": "OpenStack Aodh service configured with Puppet\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/aodh-base.yaml",
          "id": "9080e350-ebb9-4c5b-89d4-a79109c531f5"
        },
        "3985f71d-a7b1-466b-be8d-7656c84f0ebf": {
          "name": "SshKnownHostsConfig",
          "parameters": [
            "known_hosts"
          ],
          "description": "SSH Known Hosts Config",
          "type": "OS::TripleO::Ssh::KnownHostsConfig",
          "id": "3985f71d-a7b1-466b-be8d-7656c84f0ebf"
        },
        "58938e3d-b97c-4ac6-bf3b-89f05c8da467": {
          "name": "ApacheServiceBase",
          "parameters": [
            "DefaultPasswords",
            "ApacheServerLimit",
            "ServiceData",
            "ServiceNetMap",
            "RoleParameters",
            "ApacheMaxRequestWorkers",
            "EndpointMap",
            "InternalTLSCAFile",
            "RoleName",
            "EnableInternalTLS"
          ],
          "description": "Apache service configured with Puppet. Note this is typically included automatically via other services which run via Apache.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/apache.yaml",
          "id": "58938e3d-b97c-4ac6-bf3b-89f05c8da467"
        },
        "c89815aa-5f0b-4523-800d-4bfca53b9374": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "c89815aa-5f0b-4523-800d-4bfca53b9374"
        },
        "48fe2e69-1947-48a8-9c47-42bb6e063945": {
          "name": "NovaBase",
          "parameters": [
            "NotificationDriver",
            "KeystoneRegion",
            "NovaCronArchiveDeleteRowsHour",
            "DatabaseSyncTimeout",
            "NovaOVSBridge",
            "RoleName",
            "NovaCronArchiveDeleteRowsUntilComplete",
            "DefaultPasswords",
            "RabbitClientPort",
            "ServiceNetMap",
            "NovaCronArchiveDeleteRowsMonth",
            "NovaCronArchiveDeleteRowsMonthday",
            "RoleParameters",
            "NovaCronArchiveDeleteRowsMinute",
            "NovaDebug",
            "NovaPlacementAPIInterface",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "NovaCronArchiveDeleteRowsUser",
            "UpgradeLevelNovaCompute",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "NovaCronArchiveDeleteRowsWeekday",
            "NovaPassword",
            "NovaCronArchiveDeleteRowsMaxRows",
            "NovaIPv6",
            "NeutronPassword",
            "EnableConfigPurge",
            "NovaCronArchiveDeleteRowsDestination"
          ],
          "description": "OpenStack Nova base service. Shared for all Nova services.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/nova-base.yaml",
          "id": "48fe2e69-1947-48a8-9c47-42bb6e063945"
        },
        "7dbf8d83-3677-4c30-9cfb-d581abb9fb6b": {
          "name": "AodhNotifierBase",
          "resources": [
            "727af1a7-8dd0-48fa-a245-4f7c98fce26b"
          ],
          "id": "7dbf8d83-3677-4c30-9cfb-d581abb9fb6b",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/aodh-notifier.yaml",
          "parameters": [
            "DefaultPasswords",
            "MonitoringSubscriptionAodhNotifier",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "OpenStack Aodh Notifier service configured with Puppet\n"
        },
        "a8ebfdde-752b-4c4a-8cdb-5720cb2f5f25": {
          "name": "NetIpMap",
          "parameters": [
            "TenantIpUri",
            "StorageIp",
            "ManagementIpSubnet",
            "ExternalNetName",
            "TenantNetName",
            "TenantIpSubnet",
            "TenantIp",
            "ExternalIpUri",
            "InternalApiIpUri",
            "InternalApiNetName",
            "ControlPlaneSubnetCidr",
            "InternalApiIpSubnet",
            "ManagementNetName",
            "ExternalIp",
            "StorageMgmtNetName",
            "ControlPlaneIp",
            "StorageIpSubnet",
            "ManagementIpUri",
            "StorageMgmtIpSubnet",
            "StorageIpUri",
            "StorageMgmtIpUri",
            "ExternalIpSubnet",
            "StorageMgmtIp",
            "InternalApiIp",
            "ManagementIp",
            "StorageNetName"
          ],
          "description": "No description",
          "type": "OS::TripleO::Network::Ports::NetIpMap",
          "id": "a8ebfdde-752b-4c4a-8cdb-5720cb2f5f25"
        },
        "64d93872-1e4b-4f3e-9245-311cad57a07f": {
          "name": "GnocchiStatsdBase",
          "resources": [
            "40eb85c9-6088-4e5d-b392-a57961fd9657"
          ],
          "id": "64d93872-1e4b-4f3e-9245-311cad57a07f",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/gnocchi-statsd.yaml",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "MonitoringSubscriptionGnocchiStatsd",
            "RoleName",
            "RoleParameters"
          ],
          "description": "Gnocchi service configured with Puppet\n"
        },
        "4b163618-58c7-4102-8252-29d26e9aa174": {
          "name": "TenantPort",
          "parameters": [
            "FixedIPs",
            "NodeIndex",
            "ControlPlaneNetwork",
            "TenantNetName",
            "ControlPlaneIP",
            "PortName",
            "IPPool"
          ],
          "description": "Creates a port on the Tenant network. The IP address will be chosen automatically if FixedIPs is empty.\n",
          "type": "OS::TripleO::Controller::Ports::TenantPort",
          "id": "4b163618-58c7-4102-8252-29d26e9aa174"
        },
        "93826c1e-efbd-476c-b091-57e8c3f9f88d": {
          "name": "7",
          "resources": [
            "a665e050-fedd-4e54-843c-0782b618452b"
          ],
          "id": "93826c1e-efbd-476c-b091-57e8c3f9f88d",
          "type": "OS::TripleO::Services::ComputeNeutronCorePlugin",
          "parameters": [
            "NeutronTypeDrivers",
            "NeutronVniRanges",
            "DefaultPasswords",
            "NeutronNetworkVLANRanges",
            "NeutronMechanismDrivers",
            "ServiceNetMap",
            "NeutronFlatNetworks",
            "NeutronOverlayIPVersion",
            "EndpointMap",
            "NeutronPluginExtensions",
            "RoleName",
            "NeutronTunnelIdRanges",
            "ServiceData",
            "NeutronNetworkType",
            "NeutronFirewallDriver",
            "RoleParameters"
          ],
          "description": "OpenStack Neutron ML2 Plugin configured with Puppet\n"
        },
        "693e0bcc-1d9a-4db5-91e9-da3400933d9f": {
          "name": "CinderBase",
          "parameters": [
            "CinderCronDbPurgeUser",
            "DefaultPasswords",
            "CinderCronDbPurgeMinute",
            "RabbitClientPort",
            "RabbitClientUseSSL",
            "CinderDebug",
            "CinderCronDbPurgeHour",
            "ServiceNetMap",
            "CinderCronDbPurgeDestination",
            "RabbitPassword",
            "ServiceData",
            "CinderCronDbPurgeMonthday",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "RoleName",
            "CinderCronDbPurgeAge",
            "CinderCronDbPurgeWeekday",
            "CinderCronDbPurgeMonth",
            "CinderPassword",
            "RoleParameters"
          ],
          "description": "OpenStack Cinder base service. Shared by all Cinder services.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/cinder-base.yaml",
          "id": "693e0bcc-1d9a-4db5-91e9-da3400933d9f"
        },
        "24241090-6b79-42e7-8f7c-0fa9c0c0b5f3": {
          "name": "26",
          "parameters": [
            "DefaultPasswords",
            "SnmpdBindHost",
            "ServiceNetMap",
            "SnmpdReadonlyUserName",
            "SnmpdOptions",
            "EndpointMap",
            "SnmpdReadonlyUserPassword",
            "RoleName",
            "ServiceData",
            "RoleParameters"
          ],
          "description": "SNMP client configured with Puppet, to facilitate Ceilometer Hardware monitoring in the undercloud. This service is required to enable hardware monitoring.\n",
          "type": "OS::TripleO::Services::Snmp",
          "id": "24241090-6b79-42e7-8f7c-0fa9c0c0b5f3"
        },
        "73e01c45-4176-43f1-9470-3ddb8aea8fd7": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "73e01c45-4176-43f1-9470-3ddb8aea8fd7"
        },
        "d08536e5-0c48-4f78-bc7b-a5a06237cdcd": {
          "name": "21",
          "parameters": [
            "DefaultPasswords",
            "NtpServer",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "NTP service deployment using puppet, this YAML file creates the interface between the HOT template and the puppet manifest that actually installs and configure NTP.\n",
          "type": "OS::TripleO::Services::Ntp",
          "id": "d08536e5-0c48-4f78-bc7b-a5a06237cdcd"
        },
        "f9d6c746-8d8d-440c-bccf-8c1eef9ffdcc": {
          "name": "MysqlPuppetBase",
          "resources": [
            "62cea89a-5844-4860-aee7-914dda89c999"
          ],
          "id": "f9d6c746-8d8d-440c-bccf-8c1eef9ffdcc",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/pacemaker/database/mysql.yaml",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "MySQL with Pacemaker service deployment using puppet\n"
        },
        "63c384c3-03d0-4f91-b904-7b84be719441": {
          "name": "ControllerSshKnownHostsDeployment",
          "parameters": [],
          "description": "No description",
          "type": "OS::Heat::StructuredDeployments",
          "id": "63c384c3-03d0-4f91-b904-7b84be719441"
        },
        "c624bfe2-beb1-40f2-8127-cc54fcb34ea3": {
          "name": "MySQLClient",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Mysql client settings\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/database/mysql-client.yaml",
          "id": "c624bfe2-beb1-40f2-8127-cc54fcb34ea3"
        },
        "52aa61de-8e29-41be-a8cc-bdc87196defb": {
          "name": "29",
          "parameters": [
            "PurgeFirewallRules",
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "ManageFirewall",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "TripleO Firewall settings\n",
          "type": "OS::TripleO::Services::TripleoFirewall",
          "id": "52aa61de-8e29-41be-a8cc-bdc87196defb"
        },
        "ec139473-fc0f-42cf-bfc4-576a70c2202a": {
          "name": "NovaPlacementBase",
          "resources": [
            "f7279e4d-136a-4bad-9f6c-8787fa0172c2",
            "f96347ca-7089-42ef-9ffb-ea2d5a4e137e"
          ],
          "id": "ec139473-fc0f-42cf-bfc4-576a70c2202a",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/nova-placement.yaml",
          "parameters": [
            "DefaultPasswords",
            "KeystoneRegion",
            "NovaPlacementLoggingSource",
            "ServiceNetMap",
            "ServiceData",
            "MonitoringSubscriptionNovaPlacement",
            "EndpointMap",
            "NovaWorkers",
            "RoleName",
            "EnableInternalTLS",
            "NovaPassword",
            "RoleParameters"
          ],
          "description": "OpenStack Nova Placement API service configured with Puppet\n"
        },
        "95b7c363-ea20-4209-8108-37786193984d": {
          "name": "HeatBase",
          "resources": [
            "cf5195b6-f289-4042-aaeb-232d9161934c",
            "8e8f5483-072b-4100-9235-e25742af7efb"
          ],
          "id": "95b7c363-ea20-4209-8108-37786193984d",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/heat-api.yaml",
          "parameters": [
            "DefaultPasswords",
            "HeatWorkers",
            "KeystoneRegion",
            "HeatApiLoggingSource",
            "ServiceNetMap",
            "MonitoringSubscriptionHeatApi",
            "ServiceData",
            "EndpointMap",
            "HeatPassword",
            "RoleName",
            "HeatApiPolicies",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Openstack Heat API service configured with Puppet\n"
        },
        "b3182ab6-884e-495f-b195-e37b07d018af": {
          "name": "47",
          "resources": [
            "d5d3ff1e-f2f6-451c-8731-53d02a118d8c",
            "ec9b3579-3e36-4f41-b92a-60bb35582ff5"
          ],
          "id": "b3182ab6-884e-495f-b195-e37b07d018af",
          "type": "OS::TripleO::Services::Horizon",
          "parameters": [
            "DefaultPasswords",
            "DockerHorizonImage",
            "DockerHorizonConfigImage",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "OpenStack containerized Horizon service\n"
        },
        "d07555f3-1514-4a7b-8fa8-b1ddb01c9d5d": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "d07555f3-1514-4a7b-8fa8-b1ddb01c9d5d"
        },
        "7399065c-04f3-4aa8-bc2b-6b7ee4cfebd0": {
          "name": "ComputeSriovDeployment_Step5",
          "parameters": [],
          "description": "No description",
          "type": "OS::TripleO::DeploymentSteps",
          "id": "7399065c-04f3-4aa8-bc2b-6b7ee4cfebd0"
        },
        "50522ab6-6621-46d9-9c4c-0b1215b134ad": {
          "name": "NeutronBase",
          "parameters": [
            "NotificationDriver",
            "NeutronDBSyncExtraParams",
            "NeutronDhcpAgentsPerNetwork",
            "DatabaseSyncTimeout",
            "RoleName",
            "DefaultPasswords",
            "RabbitClientPort",
            "ServiceNetMap",
            "RoleParameters",
            "NeutronDnsDomain",
            "NeutronDebug",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "NeutronGlobalPhysnetMtu",
            "NeutronServicePlugins",
            "NeutronCorePlugin",
            "EnableConfigPurge",
            "DhcpAgentNotification"
          ],
          "description": "OpenStack Neutron base service. Shared for all Neutron agents.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/neutron-base.yaml",
          "id": "50522ab6-6621-46d9-9c4c-0b1215b134ad"
        },
        "e957195b-7850-4e05-a221-aa1f409d41dd": {
          "name": "NeutronBase",
          "parameters": [
            "NotificationDriver",
            "NeutronDBSyncExtraParams",
            "NeutronDhcpAgentsPerNetwork",
            "DatabaseSyncTimeout",
            "RoleName",
            "DefaultPasswords",
            "RabbitClientPort",
            "ServiceNetMap",
            "RoleParameters",
            "NeutronDnsDomain",
            "NeutronDebug",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "NeutronGlobalPhysnetMtu",
            "NeutronServicePlugins",
            "NeutronCorePlugin",
            "EnableConfigPurge",
            "DhcpAgentNotification"
          ],
          "description": "OpenStack Neutron base service. Shared for all Neutron agents.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/neutron-base.yaml",
          "id": "e957195b-7850-4e05-a221-aa1f409d41dd"
        },
        "5342d841-d1e0-4902-a01a-61d4110e5424": {
          "name": "20",
          "resources": [
            "2b5b6ac8-191d-4ee4-b106-34f464268db0",
            "91e88cc1-f469-4473-8a5c-fdda7b288f71",
            "ca833f58-b5f7-4f4c-89c6-b09f3cb3d41a"
          ],
          "id": "5342d841-d1e0-4902-a01a-61d4110e5424",
          "type": "OS::TripleO::Services::NovaLibvirt",
          "parameters": [
            "UseTLSTransportForLiveMigration",
            "DefaultPasswords",
            "DockerNovaMigrationSshdPort",
            "DockerNovaLibvirtConfigImage",
            "CinderEnableRbdBackend",
            "CephClusterFSID",
            "ServiceNetMap",
            "ServiceData",
            "DockerNovaLibvirtImage",
            "EndpointMap",
            "NovaEnableRbdBackend",
            "RoleName",
            "CephClientKey",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "OpenStack Libvirt Service\n"
        },
        "43c42760-0c29-4a25-809e-f8725615c82b": {
          "name": "NodeAdminUserData",
          "parameters": [
            "node_admin_username",
            "node_admin_extra_ssh_keys"
          ],
          "description": "Uses cloud-init to create an additional user with a known name, in addition to the distro-default user created by the cloud-init default.\n",
          "type": "OS::TripleO::NodeAdminUserData",
          "id": "43c42760-0c29-4a25-809e-f8725615c82b"
        },
        "e6c3d5ba-4e7a-40cd-9cf7-4a2789325639": {
          "name": "Ovs",
          "id": "e6c3d5ba-4e7a-40cd-9cf7-4a2789325639",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/openvswitch.yaml",
          "parameters": [
            "OvsDpdkMemoryChannels",
            "DefaultPasswords",
            "NeutronDpdkCoreList",
            "OvsDpdkCoreList",
            "NeutronDpdkSocketMemory",
            "ServiceNetMap",
            "RoleName",
            "NeutronDpdkMemoryChannels",
            "EndpointMap",
            "NeutronDpdkDriverType",
            "OvsPmdCoreList",
            "HostCpusList",
            "OvsDpdkSocketMemory",
            "OvsDpdkDriverType",
            "ServiceData",
            "RoleParameters"
          ],
          "description": "Open vSwitch Configuration\n",
          "parameter_groups": [
            {
              "label": "deprecated",
              "parameters": [
                "HostCpusList",
                "NeutronDpdkCoreList",
                "NeutronDpdkMemoryChannels",
                "NeutronDpdkSocketMemory",
                "NeutronDpdkDriverType"
              ],
              "description": "Do not use deprecated params, they will be removed."
            }
          ]
        },
        "8e8f5483-072b-4100-9235-e25742af7efb": {
          "name": "HeatBase",
          "parameters": [
            "HeatCronPurgeDeletedMonthday",
            "HeatCronPurgeDeletedHour",
            "NotificationDriver",
            "RoleName",
            "HeatPassword",
            "HeatMaxJsonBodySize",
            "DefaultPasswords",
            "RabbitClientPort",
            "ServiceNetMap",
            "HeatDebug",
            "RoleParameters",
            "HeatCronPurgeDeletedAgeType",
            "HeatCronPurgeDeletedMaxDelay",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "HeatCronPurgeDeletedMonth",
            "HeatCronPurgeDeletedUser",
            "HeatCronPurgeDeletedAge",
            "HeatCronPurgeDeletedEnsure",
            "HeatCronPurgeDeletedMinute",
            "HeatCronPurgeDeletedDestination",
            "HeatCronPurgeDeletedWeekday"
          ],
          "description": "Openstack Heat base service. Shared for all Heat services.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/heat-base.yaml",
          "id": "8e8f5483-072b-4100-9235-e25742af7efb"
        },
        "e9e60f36-c8aa-4a13-8198-eaa04bc2f4ad": {
          "name": "40",
          "resources": [
            "e4729ba5-8fc1-4b9d-b6b5-ab4ab5ade83b",
            "77be8884-505f-48be-a49d-0246594027fc",
            "548fbbe9-ec4e-4027-affa-327b39bdb5df"
          ],
          "id": "e9e60f36-c8aa-4a13-8198-eaa04bc2f4ad",
          "type": "OS::TripleO::Services::GnocchiMetricd",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "DockerGnocchiMetricdImage",
            "RoleName",
            "DockerGnocchiConfigImage",
            "RoleParameters"
          ],
          "description": "OpenStack containerized Gnocchi Metricd service\n"
        },
        "7d8c1708-3fb9-418a-8497-8db8ff79d9e9": {
          "name": "67",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Mysql client settings\n",
          "type": "OS::TripleO::Services::MySQLClient",
          "id": "7d8c1708-3fb9-418a-8497-8db8ff79d9e9"
        },
        "71b93ef0-4e32-4bc6-82e8-5e0300b0241c": {
          "name": "NovaSchedulerBase",
          "resources": [
            "ef9800e1-56c3-4450-8b67-7cbc7a80bf6f"
          ],
          "id": "71b93ef0-4e32-4bc6-82e8-5e0300b0241c",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/nova-scheduler.yaml",
          "parameters": [
            "NovaSchedulerAvailableFilters",
            "DefaultPasswords",
            "NovaSchedulerDefaultFilters",
            "NovaSchedulerLoggingSource",
            "ServiceNetMap",
            "NovaSchedulerDiscoverHostsInCellsInterval",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "MonitoringSubscriptionNovaScheduler",
            "RoleParameters"
          ],
          "description": "OpenStack Nova Scheduler service configured with Puppet\n"
        },
        "034a2ec9-0176-4fff-a206-ba8798a79d5b": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "034a2ec9-0176-4fff-a206-ba8798a79d5b"
        },
        "1c3ac778-53bc-44c9-8541-7f45afa38412": {
          "name": "ApacheServiceBase",
          "parameters": [
            "DefaultPasswords",
            "ApacheServerLimit",
            "ServiceData",
            "ServiceNetMap",
            "RoleParameters",
            "ApacheMaxRequestWorkers",
            "EndpointMap",
            "InternalTLSCAFile",
            "RoleName",
            "EnableInternalTLS"
          ],
          "description": "Apache service configured with Puppet. Note this is typically included automatically via other services which run via Apache.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/apache.yaml",
          "id": "1c3ac778-53bc-44c9-8541-7f45afa38412"
        },
        "4a4ce658-b35f-4a3a-b474-37278383afd1": {
          "name": "ControllerExtraConfigPre",
          "parameters": [
            "server"
          ],
          "description": "Noop Extra Pre-Deployment Config",
          "type": "OS::TripleO::ControllerExtraConfigPre",
          "id": "4a4ce658-b35f-4a3a-b474-37278383afd1"
        },
        "28f31fe7-8959-441e-838a-4868ff017250": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "28f31fe7-8959-441e-838a-4868ff017250"
        },
        "a8f6ef08-31a3-48c0-9a3e-c4cbf97c2cc7": {
          "name": "16",
          "resources": [
            "e957195b-7850-4e05-a221-aa1f409d41dd"
          ],
          "id": "a8f6ef08-31a3-48c0-9a3e-c4cbf97c2cc7",
          "type": "OS::TripleO::Services::NeutronSriovAgent",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "NeutronExcludeDevices",
            "EndpointMap",
            "NeutronSriovNumVFs",
            "RoleName",
            "NeutronPhysicalDevMappings",
            "RoleParameters"
          ],
          "description": "OpenStack Neutron SR-IOV nic agent configured with Puppet\n"
        },
        "45b5362b-4e0f-4be2-930a-699560435fdc": {
          "name": "14",
          "parameters": [
            "DefaultPasswords",
            "ServiceData",
            "ServiceNetMap",
            "KernelPidMax",
            "RoleParameters",
            "KernelDisableIPv6",
            "EndpointMap",
            "RoleName",
            "NeighbourGcThreshold1",
            "NeighbourGcThreshold3",
            "NeighbourGcThreshold2"
          ],
          "description": "Load kernel modules with kmod and configure kernel options with sysctl.\n",
          "type": "OS::TripleO::Services::Kernel",
          "id": "45b5362b-4e0f-4be2-930a-699560435fdc"
        },
        "c77d16d5-def9-4b60-91b7-4cd6211242ee": {
          "name": "NeutronBase",
          "parameters": [
            "NotificationDriver",
            "NeutronDBSyncExtraParams",
            "NeutronDhcpAgentsPerNetwork",
            "DatabaseSyncTimeout",
            "RoleName",
            "DefaultPasswords",
            "RabbitClientPort",
            "ServiceNetMap",
            "RoleParameters",
            "NeutronDnsDomain",
            "NeutronDebug",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "NeutronGlobalPhysnetMtu",
            "NeutronServicePlugins",
            "NeutronCorePlugin",
            "EnableConfigPurge",
            "DhcpAgentNotification"
          ],
          "description": "OpenStack Neutron base service. Shared for all Neutron agents.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/neutron-base.yaml",
          "id": "c77d16d5-def9-4b60-91b7-4cd6211242ee"
        },
        "abab605c-7d56-47bb-aa92-8e6bf15e7764": {
          "name": "ComputeSriovAllNodesDeployment",
          "parameters": [],
          "description": "No description",
          "type": "OS::TripleO::AllNodesDeployment",
          "id": "abab605c-7d56-47bb-aa92-8e6bf15e7764"
        },
        "7f117485-db09-4b37-abe0-880d034d896c": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "7f117485-db09-4b37-abe0-880d034d896c"
        },
        "6e37d997-b71a-4189-b568-8838e69e9e40": {
          "name": "100",
          "parameters": [
            "FencingConfig",
            "DefaultPasswords",
            "MonitoringSubscriptionPacemaker",
            "CorosyncSettleTries",
            "PcsdPassword",
            "ServiceNetMap",
            "EnableLoadBalancer",
            "PacemakerRemoteAuthkey",
            "EndpointMap",
            "CorosyncIPv6",
            "ServiceData",
            "RoleName",
            "PacemakerLoggingSource",
            "EnableFencing",
            "RoleParameters"
          ],
          "description": "Pacemaker service configured with Puppet\n",
          "type": "OS::TripleO::Services::Pacemaker",
          "id": "6e37d997-b71a-4189-b568-8838e69e9e40"
        },
        "dbc06c8b-ca53-42a3-bff1-e6384c9a7d9c": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "dbc06c8b-ca53-42a3-bff1-e6384c9a7d9c"
        },
        "19756d73-17c9-44d4-b1da-4883652d070d": {
          "name": "ControllerServiceChain",
          "resources": [
            "677fba56-4eba-45a2-a4b3-103d0a8ca987",
            "c61d4db8-0f2a-40a1-aa7b-bd69c4924079"
          ],
          "id": "19756d73-17c9-44d4-b1da-4883652d070d",
          "type": "OS::TripleO::Services",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "Services",
            "RoleName",
            "RoleParameters"
          ],
          "description": "Utility stack to convert an array of services into a set of combined role configs.\n"
        },
        "7007c5b3-68bc-4008-8edf-d20f597b89d8": {
          "name": "SwiftStorageBase",
          "resources": [
            "6a4b67bf-bfa9-4cb7-a9bf-aa6385220f6a"
          ],
          "id": "7007c5b3-68bc-4008-8edf-d20f597b89d8",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/swift-storage.yaml",
          "parameters": [
            "DefaultPasswords",
            "ControllerEnableSwiftStorage",
            "SwiftRawDisks",
            "ServiceNetMap",
            "MonitoringSubscriptionSwiftStorage",
            "ServiceData",
            "EndpointMap",
            "Debug",
            "RoleName",
            "SwiftMountCheck",
            "RoleParameters"
          ],
          "description": "OpenStack Swift Storage service configured with Puppet\n",
          "parameter_groups": [
            {
              "label": "deprecated",
              "parameters": [
                "ControllerEnableSwiftStorage"
              ],
              "description": "Do not use deprecated params, they will be removed."
            }
          ]
        },
        "f7279e4d-136a-4bad-9f6c-8787fa0172c2": {
          "name": "NovaBase",
          "parameters": [
            "NotificationDriver",
            "KeystoneRegion",
            "NovaCronArchiveDeleteRowsHour",
            "DatabaseSyncTimeout",
            "NovaOVSBridge",
            "RoleName",
            "NovaCronArchiveDeleteRowsUntilComplete",
            "DefaultPasswords",
            "RabbitClientPort",
            "ServiceNetMap",
            "NovaCronArchiveDeleteRowsMonth",
            "NovaCronArchiveDeleteRowsMonthday",
            "RoleParameters",
            "NovaCronArchiveDeleteRowsMinute",
            "NovaDebug",
            "NovaPlacementAPIInterface",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "NovaCronArchiveDeleteRowsUser",
            "UpgradeLevelNovaCompute",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "NovaCronArchiveDeleteRowsWeekday",
            "NovaPassword",
            "NovaCronArchiveDeleteRowsMaxRows",
            "NovaIPv6",
            "NeutronPassword",
            "EnableConfigPurge",
            "NovaCronArchiveDeleteRowsDestination"
          ],
          "description": "OpenStack Nova base service. Shared for all Nova services.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/nova-base.yaml",
          "id": "f7279e4d-136a-4bad-9f6c-8787fa0172c2"
        },
        "82da7831-a516-405d-9330-c4ce99ec8dbe": {
          "name": "ComputeSriovArtifactsConfig",
          "parameters": [
            "DeployArtifactURLs"
          ],
          "description": "Software Config to install deployment artifacts (tarball's and/or distribution packages) via HTTP URLs. The contents of the URL's can be tarballs or distribution packages (RPMs). If a tarball URL is supplied it is extracted onto the target node during deployment. If a package is deployed it is installed from the supplied URL.  Note, you need the heat-config-script element built into your images, due to the script group below.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/deploy-artifacts.yaml",
          "id": "82da7831-a516-405d-9330-c4ce99ec8dbe"
        },
        "e73a8ca9-7503-40bf-96a9-6ccc6944370e": {
          "name": "ManagementPort",
          "parameters": [
            "FixedIPs",
            "NodeIndex",
            "ControlPlaneNetwork",
            "ControlPlaneIP",
            "ControlPlaneSubnetCidr",
            "ServiceName",
            "PortName",
            "IPPool",
            "NetworkName"
          ],
          "description": "Returns the control plane port (provisioning network) as the ip_address.\n",
          "type": "OS::TripleO::Controller::Ports::ManagementPort",
          "id": "e73a8ca9-7503-40bf-96a9-6ccc6944370e"
        },
        "43003532-7db2-4a11-b306-834387eeb516": {
          "name": "MysqlBase",
          "parameters": [
            "MysqlMaxConnections",
            "MysqlIncreaseFileLimit",
            "DefaultPasswords",
            "EnableGalera",
            "ServiceNetMap",
            "MysqlClustercheckPassword",
            "EndpointMap",
            "MysqlRootPassword",
            "RoleName",
            "ServiceData",
            "EnableInternalTLS",
            "NovaPassword",
            "RoleParameters"
          ],
          "description": "MySQL service deployment using puppet\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/database/mysql.yaml",
          "id": "43003532-7db2-4a11-b306-834387eeb516"
        },
        "12564c3b-328b-442d-b32a-fdd0a0d234e4": {
          "name": "ComputeSriovIpListMap",
          "parameters": [
            "NetworkHostnameMap",
            "ExternalNetName",
            "TenantNetName",
            "StorageIpList",
            "TenantIpList",
            "EnabledServices",
            "ServiceHostnameList",
            "ServiceNetMap",
            "ExternalIpList",
            "ManagementIpList",
            "ManagementNetName",
            "StorageMgmtIpList",
            "StorageMgmtNetName",
            "StorageNetName",
            "InternalApiNetName",
            "ControlPlaneIpList",
            "InternalApiIpList"
          ],
          "description": "No description",
          "type": "OS::TripleO::Network::Ports::NetIpListMap",
          "id": "12564c3b-328b-442d-b32a-fdd0a0d234e4"
        },
        "f959efa8-f065-4cdf-bd08-6a6c955e02c9": {
          "name": "18",
          "resources": [
            "827fea01-e0ca-4b5b-a864-bcb6376a17cd",
            "c142d21d-e3a9-483b-b31b-2b618135034f"
          ],
          "id": "f959efa8-f065-4cdf-bd08-6a6c955e02c9",
          "type": "OS::TripleO::Services::CinderApi",
          "parameters": [
            "MonitoringSubscriptionCinderApi",
            "DefaultPasswords",
            "NotificationDriver",
            "KeystoneRegion",
            "CinderApiLoggingSource",
            "ServiceNetMap",
            "CinderApiPolicies",
            "CinderWorkers",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "CinderEnableDBPurge",
            "EnableInternalTLS",
            "CinderPassword",
            "RoleParameters"
          ],
          "description": "OpenStack Cinder API service configured with Puppet\n"
        },
        "548fbbe9-ec4e-4027-affa-327b39bdb5df": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "548fbbe9-ec4e-4027-affa-327b39bdb5df"
        },
        "749a78a2-fc3c-45e5-a1be-e2df5667b782": {
          "name": "CinderBase",
          "parameters": [
            "CinderCronDbPurgeUser",
            "DefaultPasswords",
            "CinderCronDbPurgeMinute",
            "RabbitClientPort",
            "RabbitClientUseSSL",
            "CinderDebug",
            "CinderCronDbPurgeHour",
            "ServiceNetMap",
            "CinderCronDbPurgeDestination",
            "RabbitPassword",
            "ServiceData",
            "CinderCronDbPurgeMonthday",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "RoleName",
            "CinderCronDbPurgeAge",
            "CinderCronDbPurgeWeekday",
            "CinderCronDbPurgeMonth",
            "CinderPassword",
            "RoleParameters"
          ],
          "description": "OpenStack Cinder base service. Shared by all Cinder services.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/cinder-base.yaml",
          "id": "749a78a2-fc3c-45e5-a1be-e2df5667b782"
        },
        "ca833f58-b5f7-4f4c-89c6-b09f3cb3d41a": {
          "name": "ContainersCommon",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Contains a static list of common things necessary for containers\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/docker/services/containers-common.yaml",
          "id": "ca833f58-b5f7-4f4c-89c6-b09f3cb3d41a"
        },
        "afe8e9ff-87f0-45c2-a417-51e35b2cd674": {
          "name": "StorageNetwork",
          "parameters": [
            "StorageNetName",
            "StorageSubnetName",
            "StorageNetEnableDHCP",
            "StorageNetCidr",
            "StorageNetValueSpecs",
            "StorageAllocationPools",
            "StorageInterfaceDefaultRoute",
            "StorageNetShared",
            "StorageNetAdminStateUp"
          ],
          "description": "Storage network definition (automatically generated).\n",
          "type": "OS::TripleO::Network::Storage",
          "id": "afe8e9ff-87f0-45c2-a417-51e35b2cd674"
        },
        "33f210fc-88d5-48f0-8457-3725e47f43c5": {
          "name": "HeatBase",
          "resources": [
            "fa7629d0-4b68-44c8-b90c-f7e105f7bfcd",
            "2d727c45-2960-4a61-b325-bbd7a4033541"
          ],
          "id": "33f210fc-88d5-48f0-8457-3725e47f43c5",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/heat-api-cfn.yaml",
          "parameters": [
            "MonitoringSubscriptionHeatApiCnf",
            "DefaultPasswords",
            "HeatWorkers",
            "KeystoneRegion",
            "ServiceNetMap",
            "HeatApiCfnLoggingSource",
            "ServiceData",
            "EndpointMap",
            "HeatPassword",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Openstack Heat CloudFormation API service configured with Puppet\n"
        },
        "25d77856-66e5-4eff-96ff-097ea2deb75c": {
          "name": "71",
          "resources": [
            "41d1dfcd-766e-4a81-b380-b4f2b5220ba6"
          ],
          "id": "25d77856-66e5-4eff-96ff-097ea2deb75c",
          "type": "OS::TripleO::Services::NeutronDhcpAgent",
          "parameters": [
            "DefaultPasswords",
            "NeutronEnableForceMetadata",
            "NeutronDhcpAgentDnsmasqDnsServers",
            "ServiceNetMap",
            "NeutronEnableIsolatedMetadata",
            "MonitoringSubscriptionNeutronDhcp",
            "EndpointMap",
            "NeutronEnableMetadataNetwork",
            "RoleName",
            "ServiceData",
            "NeutronDhcpAgentLoggingSource",
            "RoleParameters"
          ],
          "description": "OpenStack Neutron DHCP agent configured with Puppet\n"
        },
        "efc0c47a-a6a5-4de3-bd9b-b4f2c31917cc": {
          "name": "ApacheServiceBase",
          "parameters": [
            "DefaultPasswords",
            "ApacheServerLimit",
            "ServiceData",
            "ServiceNetMap",
            "RoleParameters",
            "ApacheMaxRequestWorkers",
            "EndpointMap",
            "InternalTLSCAFile",
            "RoleName",
            "EnableInternalTLS"
          ],
          "description": "Apache service configured with Puppet. Note this is typically included automatically via other services which run via Apache.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/apache.yaml",
          "id": "efc0c47a-a6a5-4de3-bd9b-b4f2c31917cc"
        },
        "c4b9b83a-626d-4a00-a731-9e5368caaaae": {
          "name": "ComputeSriovAllNodesValidationDeployment",
          "parameters": [],
          "description": "No description",
          "type": "OS::Heat::StructuredDeployments",
          "id": "c4b9b83a-626d-4a00-a731-9e5368caaaae"
        },
        "f5065f5a-b265-4441-8972-54f147005edc": {
          "name": "Root",
          "resources": [
            "2fb38fea-aa0e-419d-94ff-67befffa808f",
            "9b23a95c-c63b-437a-b887-e9b1a1ec0803",
            "870dccac-3429-49f8-b032-54342236aa2a",
            "381959c1-f444-4e5c-98c5-734ec355eb89",
            "19756d73-17c9-44d4-b1da-4883652d070d",
            "cdb62013-9485-4c87-a259-6b173d9f83c2",
            "3c5f748a-535d-40b7-8bce-926995b785d9",
            "63c384c3-03d0-4f91-b904-7b84be719441",
            "540e4640-840c-4ab0-bb4a-830def3dbc27",
            "c13c48c4-02d3-44a7-b3ea-49947b64f124",
            "f94e7254-ae96-432a-9ad8-e4cedd5c9947",
            "02924772-fd01-4ff1-8974-a849d5a0e250",
            "85429f4c-4d17-460b-961c-10062852ca0b",
            "dc9a30d3-eb20-490a-988f-45615c4cf193",
            "12564c3b-328b-442d-b32a-fdd0a0d234e4",
            "3985f71d-a7b1-466b-be8d-7656c84f0ebf",
            "a3f21c56-cd57-4af8-af8b-198c3ca832ff",
            "72867d6c-fd31-4114-8b03-6518ced443b4",
            "3965c7a1-00ea-4f62-9d58-dd4e0117987a",
            "abab605c-7d56-47bb-aa92-8e6bf15e7764",
            "4717cff1-4a6d-415f-b74c-087cb12bda54",
            "b67f6967-07fd-4fae-b6ff-ff842f5692fe",
            "1c4d141a-d273-48b5-b10b-35bb84f6b3e3",
            "5474f034-73ce-487c-a110-83692ced7139",
            "c4b9b83a-626d-4a00-a731-9e5368caaaae",
            "31db735f-9fcf-4ce1-8555-be6591ea0579",
            "a6d36781-3447-4984-a56f-085b5ddb2275",
            "3d6abb8b-ecc5-4621-a3ad-abf27e24fe8a",
            "1669dca0-b456-43a5-8c45-0294cdca2546"
          ],
          "id": "f5065f5a-b265-4441-8972-54f147005edc",
          "parameters": [
            "ControllerParameters",
            "ControllerCount",
            "ComputeSriovServices",
            "ComputeSriovRemovalPolicies",
            "PublicVirtualFixedIPs",
            "StorageMgmtVirtualFixedIPs",
            "InternalApiVirtualFixedIPs",
            "CloudNameInternal",
            "ControllerExtraConfig",
            "ControllerHostnameFormat",
            "CloudDomain",
            "ControllerRemovalPolicies",
            "ServerMetadata",
            "ComputeSriovHostnameFormat",
            "ControllerSchedulerHints",
            "NeutronControlPlaneID",
            "NodeCreateBatchSize",
            "controllerExtraConfig",
            "RedisVirtualFixedIPs",
            "HypervisorNeutronPublicInterface",
            "ComputeSriovExtraConfig",
            "CloudName",
            "CloudNameCtlplane",
            "ComputeSriovCount",
            "AddVipsToEtcHosts",
            "CloudNameStorageManagement",
            "DeployIdentifier",
            "NeutronPublicInterface",
            "ControlFixedIPs",
            "StorageVirtualFixedIPs",
            "DeploymentServerBlacklist",
            "RabbitCookieSalt",
            "ControllerServices",
            "ExtraConfig",
            "HypervisorNeutronPhysicalBridge",
            "CloudNameStorage",
            "ComputeSriovParameters",
            "UpdateIdentifier",
            "ComputeSriovSchedulerHints"
          ],
          "description": "Deploy an OpenStack environment, consisting of several node types (roles), Controller, Compute, BlockStorage, SwiftStorage and CephStorage. The Storage roles enable independent scaling of the storage components, but the minimal deployment is one Controller and one Compute node.\n",
          "parameter_groups": [
            {
              "label": "deprecated",
              "parameters": [
                "controllerExtraConfig"
              ],
              "description": "Do not use deprecated params, they will be removed."
            }
          ]
        },
        "37eb5b04-9562-465e-8200-850a2e376a26": {
          "name": "CeilometerServiceBase",
          "parameters": [
            "NotificationDriver",
            "KeystoneRegion",
            "GnocchiArchivePolicy",
            "RoleName",
            "SnmpdReadonlyUserPassword",
            "PipelinePublishers",
            "DefaultPasswords",
            "RabbitClientPort",
            "CeilometerDebug",
            "ServiceNetMap",
            "SnmpdReadonlyUserName",
            "RoleParameters",
            "CeilometerApiEndpoint",
            "CeilometerPassword",
            "ManageEventPipeline",
            "CeilometerWorkers",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "ManagePipeline",
            "EventPipelinePublishers",
            "CeilometerMeteringSecret"
          ],
          "description": "OpenStack Ceilometer service configured with Puppet\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/ceilometer-base.yaml",
          "id": "37eb5b04-9562-465e-8200-850a2e376a26"
        },
        "952ddbf6-500a-4d4a-a3df-704a7985f070": {
          "name": "PankoApiPuppetBase",
          "resources": [
            "9ebb8f46-a6dc-4230-83d7-e2d04a5e1db7",
            "c42666ed-a318-456f-b157-36ca03dc5e62"
          ],
          "id": "952ddbf6-500a-4d4a-a3df-704a7985f070",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/panko-api.yaml",
          "parameters": [
            "DefaultPasswords",
            "PankoApiPolicies",
            "ServiceNetMap",
            "MonitoringSubscriptionPankoApi",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "OpenStack Panko API service configured with Puppet. Note, This service is deprecated in Pike release and will be disabled in future releases.\n"
        },
        "784f7a53-614e-47b7-bb9d-df1a8457431d": {
          "name": "28",
          "resources": [
            "693e0bcc-1d9a-4db5-91e9-da3400933d9f"
          ],
          "id": "784f7a53-614e-47b7-bb9d-df1a8457431d",
          "type": "OS::TripleO::Services::CinderScheduler",
          "parameters": [
            "DefaultPasswords",
            "MonitoringSubscriptionCinderScheduler",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "CinderSchedulerLoggingSource",
            "RoleParameters"
          ],
          "description": "OpenStack Cinder Scheduler service configured with Puppet\n"
        },
        "4b3fb869-d703-46a8-a523-a43899e71da1": {
          "name": "MysqlPuppetBase",
          "resources": [
            "43003532-7db2-4a11-b306-834387eeb516"
          ],
          "id": "4b3fb869-d703-46a8-a523-a43899e71da1",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/pacemaker/database/mysql.yaml",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "MySQL with Pacemaker service deployment using puppet\n"
        },
        "2b5a0603-8bcc-4b11-a23b-c2c6e29a2f5a": {
          "name": "NovaConductorBase",
          "resources": [
            "faedcce5-c1a5-48ce-9023-c3fe81a8a6df"
          ],
          "id": "2b5a0603-8bcc-4b11-a23b-c2c6e29a2f5a",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/nova-conductor.yaml",
          "parameters": [
            "MonitoringSubscriptionNovaConductor",
            "DefaultPasswords",
            "ServiceNetMap",
            "UpgradeLevelNovaCompute",
            "NovaSchedulerLoggingSource",
            "ServiceData",
            "EndpointMap",
            "NovaWorkers",
            "RoleName",
            "RoleParameters"
          ],
          "description": "OpenStack Nova Conductor service configured with Puppet\n"
        },
        "4f413630-e24c-4b7d-962f-0b77e8156175": {
          "name": "NodeAdminUserData",
          "parameters": [
            "node_admin_username",
            "node_admin_extra_ssh_keys"
          ],
          "description": "Uses cloud-init to create an additional user with a known name, in addition to the distro-default user created by the cloud-init default.\n",
          "type": "OS::TripleO::NodeAdminUserData",
          "id": "4f413630-e24c-4b7d-962f-0b77e8156175"
        },
        "4f90a018-c29e-46e4-afff-8fb778a677c9": {
          "name": "LoggingConfiguration",
          "parameters": [
            "LoggingDefaultSources",
            "LoggingDefaultFilters",
            "LoggingServers",
            "DefaultPasswords",
            "LoggingPosFilePath",
            "LoggingDefaultFormat",
            "LoggingDefaultGroups",
            "LoggingExtraFilters",
            "ServiceNetMap",
            "LoggingExtraGroups",
            "RoleParameters",
            "LoggingSSLKeyPassphrase",
            "EndpointMap",
            "LoggingUsesSSL",
            "LoggingExtraSources",
            "RoleName",
            "LoggingSSLCertificate",
            "ServiceData",
            "LoggingSharedKey",
            "LoggingSSLKey"
          ],
          "description": "Fluentd logging configuration",
          "type": "OS::TripleO::LoggingConfiguration",
          "id": "4f90a018-c29e-46e4-afff-8fb778a677c9"
        },
        "754d439a-1b36-4aa0-be1b-ac809f827585": {
          "name": "RoleUserData",
          "parameters": [],
          "description": "This is a default no-op template which provides empty user-data which can be passed to the OS::Nova::Server resources. This template can be replaced with a different implementation via the resource registry, such that deployers may customize their first-boot configuration.\n",
          "type": "OS::TripleO::Controller::NodeUserData",
          "id": "754d439a-1b36-4aa0-be1b-ac809f827585"
        },
        "014474a3-4f93-4b01-ade3-be9ff0edc37e": {
          "name": "112",
          "resources": [
            "c89815aa-5f0b-4523-800d-4bfca53b9374",
            "7007c5b3-68bc-4008-8edf-d20f597b89d8"
          ],
          "id": "014474a3-4f93-4b01-ade3-be9ff0edc37e",
          "type": "OS::TripleO::Services::SwiftStorage",
          "parameters": [
            "DefaultPasswords",
            "DockerSwiftObjectImage",
            "SwiftRawDisks",
            "ServiceNetMap",
            "DockerSwiftConfigImage",
            "RoleParameters",
            "DockerSwiftAccountImage",
            "EndpointMap",
            "RoleName",
            "ServiceData",
            "DockerSwiftContainerImage",
            "DockerSwiftProxyImage"
          ],
          "description": "OpenStack containerized Swift Storage services.\n"
        },
        "0e45c665-46e7-46cf-ad1f-989efe2b81df": {
          "name": "0",
          "resources": [
            "4f895d40-35b0-4b99-9859-aab96ada0cfc",
            "4a4ce658-b35f-4a3a-b474-37278383afd1",
            "23f538e0-c9e8-4534-b1a2-50d8dafe7919",
            "4b163618-58c7-4102-8252-29d26e9aa174",
            "a6526b83-e46f-4103-8772-bed4b4ceafe0",
            "52d2cd28-69ae-489f-8173-8d5b31493e95",
            "fe17943a-3e1e-43c7-9d4a-b581a53f9b8b",
            "106af7e7-bc97-4158-8418-dc4c2cc87878",
            "e73a8ca9-7503-40bf-96a9-6ccc6944370e",
            "e59b2363-ccc8-46d4-9105-45ffe4542fc0",
            "754d439a-1b36-4aa0-be1b-ac809f827585",
            "aae6b639-3f6d-4be7-b824-c61115ddec65",
            "43c42760-0c29-4a25-809e-f8725615c82b",
            "949a09a6-650b-4f9a-8e28-8b1f33395cb8",
            "a8ebfdde-752b-4c4a-8cdb-5720cb2f5f25",
            "63c662de-0818-41d3-988a-f42d698e8c1a"
          ],
          "id": "0e45c665-46e7-46cf-ad1f-989efe2b81df",
          "type": "OS::TripleO::Controller",
          "parameters": [
            "MonitoringSubscriptions",
            "ConfigCommand",
            "NetworkDeploymentActions",
            "OvercloudControlFlavor",
            "Hostname",
            "controllerImage",
            "ControllerIPs",
            "ControllerExtraConfig",
            "ControllerNetworkDeploymentActions",
            "CloudDomain",
            "ConfigCollectSplay",
            "ServerMetadata",
            "ServiceNetMap",
            "ServiceMetadataSettings",
            "DeploymentServerBlacklistDict",
            "ControllerServerMetadata",
            "KeyName",
            "LoggingSources",
            "ControllerImage",
            "SoftwareConfigTransport",
            "controllerExtraConfig",
            "NodeIndex",
            "UpgradeInitCommonCommand",
            "RoleParameters",
            "ServiceConfigSettings",
            "ImageUpdatePolicy",
            "OvercloudControllerFlavor",
            "NeutronPublicInterface",
            "UpgradeInitCommand",
            "NeutronPhysicalBridge",
            "ExtraConfig",
            "LoggingGroups",
            "ControllerSchedulerHints",
            "ServiceNames",
            "EndpointMap",
            "DeploymentSwiftDataMap",
            "HostnameMap",
            "UpdateIdentifier"
          ],
          "description": "OpenStack Controller node configured by Puppet",
          "parameter_groups": [
            {
              "label": "deprecated",
              "parameters": [
                "controllerExtraConfig",
                "controllerImage",
                "OvercloudControlFlavor"
              ],
              "description": "Do not use deprecated params, they will be removed."
            }
          ]
        },
        "66ad232a-c97a-40ec-a5c2-d20d58180e33": {
          "name": "NovaConsoleauthPuppetBase",
          "resources": [
            "f3f4190a-9f16-4d1e-941a-b4f7f604061f"
          ],
          "id": "66ad232a-c97a-40ec-a5c2-d20d58180e33",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/nova-consoleauth.yaml",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "MonitoringSubscriptionNovaConsoleauth",
            "NovaConsoleauthLoggingSource",
            "RoleName",
            "RoleParameters"
          ],
          "description": "OpenStack Nova Consoleauth service configured with Puppet\n"
        },
        "23f538e0-c9e8-4534-b1a2-50d8dafe7919": {
          "name": "PreNetworkConfig",
          "parameters": [
            "OvsEnableDpdk",
            "deployment_actions",
            "OvsDpdkSocketMemory",
            "OvsDpdkCoreList",
            "EnableDpdkDeploymentActions",
            "NeutronDpdkSocketMemory",
            "NeutronDpdkMemoryChannels",
            "server",
            "RoleParameters",
            "OvsPmdCoreList",
            "HostCpusList",
            "NeutronDpdkCoreList",
            "OvsDpdkMemoryChannels",
            "ServiceNames"
          ],
          "description": "All configurations which require reboot should be initiated via PreNetworkConfig. After this configuration is completed, the corresponding node will be rebooted.\n",
          "type": "OS::TripleO::Controller::PreNetworkConfig",
          "id": "23f538e0-c9e8-4534-b1a2-50d8dafe7919"
        },
        "57a9699c-8810-427c-8a46-66f13aa459e9": {
          "name": "ComputeSriovHostPrepDeployment",
          "parameters": [],
          "description": "No description",
          "type": "OS::Heat::SoftwareDeploymentGroup",
          "id": "57a9699c-8810-427c-8a46-66f13aa459e9"
        },
        "34679f59-dd7d-4d5a-965d-505daa1a6bb4": {
          "name": "NovaComputeBase",
          "resources": [
            "ae01e441-3cc8-4f4f-acd6-9079489d64c1"
          ],
          "id": "34679f59-dd7d-4d5a-965d-505daa1a6bb4",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/nova-compute.yaml",
          "parameters": [
            "NovaReservedHostMemory",
            "MigrationSshPort",
            "NovaEnableRbdBackend",
            "RoleName",
            "CinderEnableRbdBackend",
            "DefaultPasswords",
            "NovaComputeLoggingSource",
            "ServiceNetMap",
            "NovaRbdPoolName",
            "RoleParameters",
            "NovaVcpuPinSet",
            "CephClientUserName",
            "UpgradeLevelNovaCompute",
            "ServiceData",
            "NovaComputeLibvirtVifDriver",
            "EndpointMap",
            "CephClientKey",
            "NovaPCIPassthrough",
            "MigrationSshKey",
            "CephClusterFSID",
            "MonitoringSubscriptionNovaCompute",
            "CinderEnableNfsBackend"
          ],
          "description": "OpenStack Nova Compute service configured with Puppet\n"
        },
        "72a2cb9c-0579-4b0e-9e58-d82bbfb150af": {
          "name": "MySQLClient",
          "parameters": [
            "DefaultPasswords",
            "InternalTLSCAFile",
            "ServiceNetMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "EnableInternalTLS",
            "RoleParameters"
          ],
          "description": "Mysql client settings\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/database/mysql-client.yaml",
          "id": "72a2cb9c-0579-4b0e-9e58-d82bbfb150af"
        },
        "f3f4190a-9f16-4d1e-941a-b4f7f604061f": {
          "name": "NovaBase",
          "parameters": [
            "NotificationDriver",
            "KeystoneRegion",
            "NovaCronArchiveDeleteRowsHour",
            "DatabaseSyncTimeout",
            "NovaOVSBridge",
            "RoleName",
            "NovaCronArchiveDeleteRowsUntilComplete",
            "DefaultPasswords",
            "RabbitClientPort",
            "ServiceNetMap",
            "NovaCronArchiveDeleteRowsMonth",
            "NovaCronArchiveDeleteRowsMonthday",
            "RoleParameters",
            "NovaCronArchiveDeleteRowsMinute",
            "NovaDebug",
            "NovaPlacementAPIInterface",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "NovaCronArchiveDeleteRowsUser",
            "UpgradeLevelNovaCompute",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "NovaCronArchiveDeleteRowsWeekday",
            "NovaPassword",
            "NovaCronArchiveDeleteRowsMaxRows",
            "NovaIPv6",
            "NeutronPassword",
            "EnableConfigPurge",
            "NovaCronArchiveDeleteRowsDestination"
          ],
          "description": "OpenStack Nova base service. Shared for all Nova services.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/nova-base.yaml",
          "id": "f3f4190a-9f16-4d1e-941a-b4f7f604061f"
        },
        "a567d010-4b29-47b1-8667-efa5472aa1e6": {
          "name": "1",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "CAMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "HAproxy service configured with Puppet\n",
          "type": "OS::TripleO::Services::CACerts",
          "id": "a567d010-4b29-47b1-8667-efa5472aa1e6"
        },
        "c13c48c4-02d3-44a7-b3ea-49947b64f124": {
          "name": "DefaultPasswords",
          "parameters": [
            "DefaultMysqlRootPassword",
            "DefaultHorizonSecret",
            "DefaultPcsdPassword",
            "DefaultRabbitCookie",
            "DefaultHeatAuthEncryptionKey"
          ],
          "description": "Passwords we manage at the top level",
          "type": "OS::TripleO::DefaultPasswords",
          "id": "c13c48c4-02d3-44a7-b3ea-49947b64f124"
        },
        "62d29a17-40ce-4b0a-b164-8baa8cfde880": {
          "name": "0",
          "resources": [
            "a1a0c7a3-4b12-446e-9004-8890648c3f38",
            "a210f7d1-0cba-423f-bb25-a35bd25af117",
            "c49c43b8-aa1a-4976-86fb-5cc9283e177b",
            "b75194f1-9240-4ba2-88d6-1a19995944b1",
            "d4f30acf-7181-493d-bd25-5bd9629e5505",
            "8893e9a4-8a6c-4ac7-ba0d-b92e2e40b071",
            "df00d5d5-6651-47db-beb7-87cf7a1c7a40",
            "242469f8-5bc4-4d82-98d9-026dc55b7ad7",
            "0015d5a3-d4c0-4c3e-bf83-93dd20f9cb21",
            "345611fd-a648-41d3-845b-624b2ed84c9b",
            "0ba615e3-fed5-4a7b-974a-82c5defbecd6",
            "6a9d751c-f1de-4fc9-af2e-f87d274aadc7",
            "a4ab5c62-3dad-4191-9f0e-ffe0cd26ff66",
            "4f413630-e24c-4b7d-962f-0b77e8156175",
            "0fe5bbf1-ac02-46fd-9b28-d7d0df7fb7bd",
            "a454d53a-3799-4696-8dc6-6e417b0399e8"
          ],
          "id": "62d29a17-40ce-4b0a-b164-8baa8cfde880",
          "type": "OS::TripleO::ComputeSriov",
          "parameters": [
            "MonitoringSubscriptions",
            "ConfigCommand",
            "NetworkDeploymentActions",
            "Hostname",
            "CloudDomain",
            "ConfigCollectSplay",
            "ServerMetadata",
            "ServiceNetMap",
            "ServiceMetadataSettings",
            "DeploymentServerBlacklistDict",
            "RoleParameters",
            "KeyName",
            "LoggingSources",
            "SoftwareConfigTransport",
            "NodeIndex",
            "ComputeSriovExtraConfig",
            "ComputeSriovIPs",
            "UpgradeInitCommonCommand",
            "OvercloudComputeSriovFlavor",
            "ComputeSriovNetworkDeploymentActions",
            "ServiceConfigSettings",
            "ImageUpdatePolicy",
            "EndpointMap",
            "NeutronPublicInterface",
            "ComputeSriovServerMetadata",
            "ComputeSriovImage",
            "UpgradeInitCommand",
            "NeutronPhysicalBridge",
            "ExtraConfig",
            "LoggingGroups",
            "ServiceNames",
            "DeploymentSwiftDataMap",
            "HostnameMap",
            "UpdateIdentifier",
            "ComputeSriovSchedulerHints"
          ],
          "description": "OpenStack ComputeSriov node configured by Puppet"
        },
        "2709b085-25f5-42b8-be43-acdf15fe64e4": {
          "name": "NeutronBase",
          "parameters": [
            "NotificationDriver",
            "NeutronDBSyncExtraParams",
            "NeutronDhcpAgentsPerNetwork",
            "DatabaseSyncTimeout",
            "RoleName",
            "DefaultPasswords",
            "RabbitClientPort",
            "ServiceNetMap",
            "RoleParameters",
            "NeutronDnsDomain",
            "NeutronDebug",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "NeutronGlobalPhysnetMtu",
            "NeutronServicePlugins",
            "NeutronCorePlugin",
            "EnableConfigPurge",
            "DhcpAgentNotification"
          ],
          "description": "OpenStack Neutron base service. Shared for all Neutron agents.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/neutron-base.yaml",
          "id": "2709b085-25f5-42b8-be43-acdf15fe64e4"
        },
        "53215f0a-bfa3-48e9-847f-a55bea899c4b": {
          "name": "CeilometerServiceBase",
          "parameters": [
            "NotificationDriver",
            "KeystoneRegion",
            "GnocchiArchivePolicy",
            "RoleName",
            "SnmpdReadonlyUserPassword",
            "PipelinePublishers",
            "DefaultPasswords",
            "RabbitClientPort",
            "CeilometerDebug",
            "ServiceNetMap",
            "SnmpdReadonlyUserName",
            "RoleParameters",
            "CeilometerApiEndpoint",
            "CeilometerPassword",
            "ManageEventPipeline",
            "CeilometerWorkers",
            "RabbitClientUseSSL",
            "RabbitPassword",
            "ServiceData",
            "EndpointMap",
            "RabbitUserName",
            "Debug",
            "ManagePipeline",
            "EventPipelinePublishers",
            "CeilometerMeteringSecret"
          ],
          "description": "OpenStack Ceilometer service configured with Puppet\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/ceilometer-base.yaml",
          "id": "53215f0a-bfa3-48e9-847f-a55bea899c4b"
        },
        "c4bfeb19-72b4-49d0-8158-1c9ded153fbd": {
          "name": "ComputeSriovExtraConfigPost",
          "parameters": [
            "servers"
          ],
          "description": "Extra Post Deployment Config",
          "type": "OS::TripleO::NodeExtraConfigPost",
          "id": "c4bfeb19-72b4-49d0-8158-1c9ded153fbd"
        },
        "f96347ca-7089-42ef-9ffb-ea2d5a4e137e": {
          "name": "ApacheServiceBase",
          "parameters": [
            "DefaultPasswords",
            "ApacheServerLimit",
            "ServiceData",
            "ServiceNetMap",
            "RoleParameters",
            "ApacheMaxRequestWorkers",
            "EndpointMap",
            "InternalTLSCAFile",
            "RoleName",
            "EnableInternalTLS"
          ],
          "description": "Apache service configured with Puppet. Note this is typically included automatically via other services which run via Apache.\n",
          "type": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud/puppet/services/apache.yaml",
          "id": "f96347ca-7089-42ef-9ffb-ea2d5a4e137e"
        },
        "a6526b83-e46f-4103-8772-bed4b4ceafe0": {
          "name": "ExternalPort",
          "parameters": [
            "FixedIPs",
            "NodeIndex",
            "ExternalNetName",
            "ControlPlaneIP",
            "PortName",
            "ControlPlaneNetwork",
            "IPPool"
          ],
          "description": "Creates a port on the External network. The IP address will be chosen automatically if FixedIPs is empty.\n",
          "type": "OS::TripleO::Controller::Ports::ExternalPort",
          "id": "a6526b83-e46f-4103-8772-bed4b4ceafe0"
        },
        "1f37bffd-54eb-48fe-8dc2-db7fb188d66b": {
          "name": "6",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "CAMap",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "HAproxy service configured with Puppet\n",
          "type": "OS::TripleO::Services::CACerts",
          "id": "1f37bffd-54eb-48fe-8dc2-db7fb188d66b"
        },
        "51a58afc-bc10-4be6-b1b8-6f437f0d2318": {
          "name": "1",
          "resources": [
            "729908a5-9e92-47a6-8cf8-164c509a5999",
            "7c31ca27-7bc5-483c-962a-5d8662d90285",
            "034a2ec9-0176-4fff-a206-ba8798a79d5b"
          ],
          "id": "51a58afc-bc10-4be6-b1b8-6f437f0d2318",
          "type": "OS::TripleO::Services::AodhEvaluator",
          "parameters": [
            "DefaultPasswords",
            "ServiceNetMap",
            "DockerAodhEvaluatorImage",
            "DockerAodhConfigImage",
            "ServiceData",
            "EndpointMap",
            "RoleName",
            "RoleParameters"
          ],
          "description": "OpenStack containerized Aodh Evaluator service\n"
        }
      },
      "parameters": {
        "DeployedSSLCertificatePath": {
          "name": "DeployedSSLCertificatePath",
          "type": "String",
          "noEcho": "false",
          "label": "DeployedSSLCertificatePath",
          "default": "/etc/pki/tls/private/overcloud_endpoint.pem",
          "description": "The filepath of the certificate as it will be stored in the controller.\n"
        },
        "ctlplane_service_ips": {
          "label": "ctlplane_service_ips",
          "name": "ctlplane_service_ips",
          "description": "",
          "type": "Json",
          "noEcho": "false"
        },
        "InternalApiNetAdminStateUp": {
          "name": "InternalApiNetAdminStateUp",
          "type": "Boolean",
          "noEcho": "false",
          "label": "InternalApiNetAdminStateUp",
          "default": false,
          "description": "The admin state of the network."
        },
        "HeatEnableDBPurge": {
          "name": "HeatEnableDBPurge",
          "type": "Boolean",
          "noEcho": "false",
          "label": "HeatEnableDBPurge",
          "default": true,
          "description": "Whether to create cron job for purging soft deleted rows in the Heat database.\n"
        },
        "ApacheMaxRequestWorkers": {
          "name": "ApacheMaxRequestWorkers",
          "type": "Number",
          "noEcho": "false",
          "label": "ApacheMaxRequestWorkers",
          "default": 256,
          "description": "Maximum number of simultaneously processed requests."
        },
        "OvsDpdkMemoryChannels": {
          "name": "OvsDpdkMemoryChannels",
          "type": "String",
          "noEcho": "false",
          "allowedPattern": "[0-9]*",
          "label": "OvsDpdkMemoryChannels",
          "default": "",
          "description": "Number of memory channels per socket to be used for DPDK"
        },
        "HeatCronPurgeDeletedDestination": {
          "name": "HeatCronPurgeDeletedDestination",
          "type": "String",
          "noEcho": "false",
          "label": "HeatCronPurgeDeletedDestination",
          "default": "/dev/null",
          "description": "Cron to purge db entries marked as deleted and older than $age - Log destination\n"
        },
        "MonitoringSubscriptions": {
          "name": "MonitoringSubscriptions",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "MonitoringSubscriptions",
          "default": [],
          "description": ""
        },
        "cloud_name_ctlplane": {
          "description": "",
          "type": "String",
          "noEcho": "false",
          "label": "cloud_name_ctlplane",
          "value": "overcloud.ctlplane.localdomain",
          "name": "cloud_name_ctlplane"
        },
        "AodhPassword": {
          "name": "AodhPassword",
          "type": "String",
          "noEcho": "true",
          "label": "AodhPassword",
          "default": "feNkka8yvtwjTjHMYWgRYbhwW",
          "description": "The password for the aodh services."
        },
        "CinderNfsMountOptions": {
          "name": "CinderNfsMountOptions",
          "type": "String",
          "noEcho": "false",
          "label": "CinderNfsMountOptions",
          "default": "",
          "description": "Mount options for NFS mounts used by Cinder NFS backend. Effective when CinderEnableNfsBackend is true.\n"
        },
        "NovaDefaultFloatingPool": {
          "name": "NovaDefaultFloatingPool",
          "type": "String",
          "noEcho": "false",
          "label": "NovaDefaultFloatingPool",
          "default": "public",
          "description": "Default pool for floating IP addresses"
        },
        "EndpointMap": {
          "name": "EndpointMap",
          "type": "Json",
          "noEcho": "false",
          "label": "EndpointMap",
          "default": {},
          "description": "Mapping of service endpoint -> protocol. Typically set via parameter_defaults in the resource registry."
        },
        "InternalApiIpSubnet": {
          "name": "InternalApiIpSubnet",
          "type": "String",
          "noEcho": "false",
          "label": "InternalApiIpSubnet",
          "default": "",
          "description": "IP address/subnet on the internal API network"
        },
        "ControllerEnableSwiftStorage": {
          "name": "ControllerEnableSwiftStorage",
          "type": "Boolean",
          "noEcho": "false",
          "label": "ControllerEnableSwiftStorage",
          "default": true,
          "description": "Whether to enable Swift Storage on the Controller"
        },
        "ExternalNetCidr": {
          "name": "ExternalNetCidr",
          "type": "String",
          "noEcho": "false",
          "label": "ExternalNetCidr",
          "default": "10.9.88.0/24",
          "description": "Cidr for the external network."
        },
        "DockerNovaLibvirtImage": {
          "name": "DockerNovaLibvirtImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerNovaLibvirtImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-nova-libvirt-docker:20171004.1",
          "description": "image"
        },
        "ControlPlaneIp": {
          "name": "ControlPlaneIp",
          "type": "String",
          "noEcho": "false",
          "label": "ControlPlaneIp",
          "default": "",
          "description": "IP address/subnet on the ctlplane network"
        },
        "DockerKeystoneImage": {
          "name": "DockerKeystoneImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerKeystoneImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-keystone-docker:20171004.1",
          "description": "image"
        },
        "NeutronDebug": {
          "name": "NeutronDebug",
          "type": "String",
          "noEcho": "false",
          "label": "NeutronDebug",
          "default": "",
          "description": "Set to True to enable debugging Neutron services."
        },
        "CeilometerApiEndpoint": {
          "name": "CeilometerApiEndpoint",
          "type": "Boolean",
          "noEcho": "false",
          "label": "CeilometerApiEndpoint",
          "default": false,
          "description": "Whether to create or skip API endpoint. Set this to false, if you choose to disable Ceilometer API service."
        },
        "CinderCronDbPurgeMonthday": {
          "name": "CinderCronDbPurgeMonthday",
          "type": "String",
          "noEcho": "false",
          "label": "CinderCronDbPurgeMonthday",
          "default": "*",
          "description": "Cron to move deleted instances to another table - Month Day\n"
        },
        "DeploymentServerBlacklistDict": {
          "name": "DeploymentServerBlacklistDict",
          "type": "Json",
          "noEcho": "false",
          "label": "DeploymentServerBlacklistDict",
          "default": {},
          "description": "Map of server hostnames to blacklist from any triggered deployments. If the value is 1, the server will be blacklisted. This parameter is generated from the parent template.\n"
        },
        "LoggingSSLKey": {
          "name": "LoggingSSLKey",
          "type": "String",
          "noEcho": "false",
          "label": "LoggingSSLKey",
          "default": "",
          "description": "PEM-encoded key for fluentd CA certificate (used by in_secure_forward).\n"
        },
        "NovaCronArchiveDeleteRowsMonth": {
          "name": "NovaCronArchiveDeleteRowsMonth",
          "type": "String",
          "noEcho": "false",
          "label": "NovaCronArchiveDeleteRowsMonth",
          "default": "*",
          "description": "Cron to move deleted instances to another table - Month\n"
        },
        "KeystoneSSLCertificateKey": {
          "name": "KeystoneSSLCertificateKey",
          "type": "String",
          "noEcho": "true",
          "label": "KeystoneSSLCertificateKey",
          "default": "",
          "description": "Keystone key for signing tokens."
        },
        "SwiftRawDisks": {
          "name": "SwiftRawDisks",
          "type": "Json",
          "noEcho": "false",
          "label": "SwiftRawDisks",
          "default": {},
          "description": "A hash of additional raw devices to use as Swift backend (eg. {sdb: {}})"
        },
        "DockerHeatApiImage": {
          "name": "DockerHeatApiImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerHeatApiImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-heat-api-docker:20171004.1",
          "description": "image"
        },
        "ControllerNetworkDeploymentActions": {
          "name": "ControllerNetworkDeploymentActions",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "ControllerNetworkDeploymentActions",
          "default": [],
          "description": "Heat action when to apply network configuration changes\n"
        },
        "CloudNameInternal": {
          "name": "CloudNameInternal",
          "type": "String",
          "noEcho": "false",
          "label": "CloudNameInternal",
          "default": "overcloud.internalapi.localdomain",
          "description": "The DNS name of this cloud's internal_api endpoint. E.g. 'ci-overcloud.internalapi.tripleo.org'.\n"
        },
        "TenantIp": {
          "name": "TenantIp",
          "type": "String",
          "noEcho": "false",
          "label": "TenantIp",
          "default": "",
          "description": ""
        },
        "RoleName": {
          "name": "RoleName",
          "type": "String",
          "noEcho": "false",
          "label": "RoleName",
          "value": "Controller",
          "default": "",
          "description": "Role name on which the service is applied"
        },
        "HorizonSecureCookies": {
          "name": "HorizonSecureCookies",
          "type": "Boolean",
          "noEcho": "false",
          "label": "HorizonSecureCookies",
          "default": false,
          "description": "Set CSRF_COOKIE_SECURE / SESSION_COOKIE_SECURE in Horizon"
        },
        "ManagementNetShared": {
          "name": "ManagementNetShared",
          "type": "Boolean",
          "noEcho": "false",
          "label": "ManagementNetShared",
          "default": false,
          "description": "Whether this network is shared across all tenants."
        },
        "NovaCronArchiveDeleteRowsUntilComplete": {
          "name": "NovaCronArchiveDeleteRowsUntilComplete",
          "type": "Boolean",
          "noEcho": "false",
          "label": "NovaCronArchiveDeleteRowsUntilComplete",
          "default": false,
          "description": "Cron to move deleted instances to another table - Until complete\n"
        },
        "DockerHAProxyConfigImage": {
          "name": "DockerHAProxyConfigImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerHAProxyConfigImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-haproxy-docker:20171004.1",
          "description": "The container image to use for the haproxy config_volume"
        },
        "CinderRbdPoolName": {
          "name": "CinderRbdPoolName",
          "type": "String",
          "noEcho": "false",
          "label": "CinderRbdPoolName",
          "default": "volumes",
          "description": ""
        },
        "NeutronEnableForceMetadata": {
          "name": "NeutronEnableForceMetadata",
          "type": "Boolean",
          "noEcho": "false",
          "label": "NeutronEnableForceMetadata",
          "default": false,
          "description": "If True, DHCP always provides metadata route to VM."
        },
        "LocalProvisioningNicName": {
          "name": "LocalProvisioningNicName",
          "type": "String",
          "noEcho": "false",
          "label": "LocalProvisioningNicName",
          "default": "p5p2",
          "description": ""
        },
        "NovaDbSyncTimeout": {
          "name": "NovaDbSyncTimeout",
          "type": "Number",
          "noEcho": "false",
          "label": "NovaDbSyncTimeout",
          "default": 300,
          "description": "Timeout for Nova db sync"
        },
        "ExternalNetAdminStateUp": {
          "name": "ExternalNetAdminStateUp",
          "type": "Boolean",
          "noEcho": "false",
          "label": "ExternalNetAdminStateUp",
          "default": false,
          "description": "The admin state of the network."
        },
        "HAProxyStatsEnabled": {
          "name": "HAProxyStatsEnabled",
          "type": "Boolean",
          "noEcho": "false",
          "label": "HAProxyStatsEnabled",
          "default": true,
          "description": "Whether or not to enable the HAProxy stats interface."
        },
        "ControllerSchedulerHints": {
          "name": "ControllerSchedulerHints",
          "type": "Json",
          "noEcho": "false",
          "label": "ControllerSchedulerHints",
          "default": {},
          "description": "Optional scheduler hints to pass to nova"
        },
        "CinderWorkers": {
          "name": "CinderWorkers",
          "type": "String",
          "noEcho": "false",
          "label": "CinderWorkers",
          "default": "%{::os_workers}",
          "description": "Set the number of workers for cinder::wsgi::apache"
        },
        "NeutronCorePlugin": {
          "name": "NeutronCorePlugin",
          "type": "String",
          "noEcho": "false",
          "label": "NeutronCorePlugin",
          "default": "ml2",
          "description": "The core plugin for Neutron. The value should be the entrypoint to be loaded\nfrom neutron.core_plugins namespace.\n"
        },
        "HeatCronPurgeDeletedEnsure": {
          "name": "HeatCronPurgeDeletedEnsure",
          "type": "String",
          "noEcho": "false",
          "label": "HeatCronPurgeDeletedEnsure",
          "default": "present",
          "description": "Cron to purge db entries marked as deleted and older than $age - Ensure\n"
        },
        "NovaComputeLibvirtType": {
          "name": "NovaComputeLibvirtType",
          "type": "String",
          "noEcho": "false",
          "label": "NovaComputeLibvirtType",
          "default": "kvm",
          "description": ""
        },
        "MonitoringSubscriptionNovaLibvirt": {
          "name": "MonitoringSubscriptionNovaLibvirt",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionNovaLibvirt",
          "default": "overcloud-nova-libvirt",
          "description": ""
        },
        "NeutronDhcpAgentLoggingSource": {
          "name": "NeutronDhcpAgentLoggingSource",
          "type": "Json",
          "noEcho": "false",
          "label": "NeutronDhcpAgentLoggingSource",
          "default": {
            "tag": "openstack.neutron.agent.dhcp",
            "path": "/var/log/neutron/dhcp-agent.log"
          },
          "description": ""
        },
        "EnableDpdkDeploymentActions": {
          "name": "EnableDpdkDeploymentActions",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "EnableDpdkDeploymentActions",
          "default": [
            "CREATE"
          ],
          "description": "Exposing the DPDK deployment action, it may be required to run DPDK config during an upgrade. By default DPDK will be enabled during the CREATE action only. But on cases when it requires for certain migration, it may be required to run it for UPDATE action too.\n"
        },
        "NeutronPluginExtensions": {
          "name": "NeutronPluginExtensions",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "NeutronPluginExtensions",
          "default": "qos,port_security",
          "description": "Comma-separated list of extensions enabled for the Neutron plugin.\n"
        },
        "DockerSwiftAccountImage": {
          "name": "DockerSwiftAccountImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerSwiftAccountImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-swift-account-docker:20171004.1",
          "description": "image"
        },
        "CinderNfsServers": {
          "name": "CinderNfsServers",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "CinderNfsServers",
          "default": "",
          "description": "NFS servers used by Cinder NFS backend. Effective when CinderEnableNfsBackend is true.\n"
        },
        "ManagementIp": {
          "name": "ManagementIp",
          "type": "String",
          "noEcho": "false",
          "label": "ManagementIp",
          "default": "",
          "description": ""
        },
        "DockerAodhApiImage": {
          "name": "DockerAodhApiImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerAodhApiImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-aodh-api-docker:20171004.1",
          "description": "image"
        },
        "DockerRabbitmqConfigImage": {
          "name": "DockerRabbitmqConfigImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerRabbitmqConfigImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-rabbitmq-docker:20171004.1",
          "description": "The container image to use for the rabbitmq config_volume"
        },
        "CinderCronDbPurgeHour": {
          "name": "CinderCronDbPurgeHour",
          "type": "String",
          "noEcho": "false",
          "label": "CinderCronDbPurgeHour",
          "default": "0",
          "description": "Cron to move deleted instances to another table - Hour\n"
        },
        "StackUpdateType": {
          "name": "StackUpdateType",
          "type": "String",
          "label": "StackUpdateType",
          "noEcho": "false",
          "allowedValues": [
            "",
            "UPGRADE"
          ],
          "default": "",
          "description": "Type of update, to differentiate between UPGRADE and UPDATE cases when StackAction is UPDATE (both are the same stack action).\n"
        },
        "CinderDebug": {
          "name": "CinderDebug",
          "type": "String",
          "noEcho": "false",
          "label": "CinderDebug",
          "default": "",
          "description": "Set to True to enable debugging on Cinder services."
        },
        "MonitoringSubscriptionNovaConductor": {
          "name": "MonitoringSubscriptionNovaConductor",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionNovaConductor",
          "default": "overcloud-nova-conductor",
          "description": ""
        },
        "HypervisorNeutronPublicInterface": {
          "name": "HypervisorNeutronPublicInterface",
          "type": "String",
          "noEcho": "false",
          "label": "HypervisorNeutronPublicInterface",
          "default": "nic1",
          "description": "What interface to add to the HypervisorNeutronPhysicalBridge."
        },
        "StorageNetShared": {
          "name": "StorageNetShared",
          "type": "Boolean",
          "noEcho": "false",
          "label": "StorageNetShared",
          "default": false,
          "description": "Whether this network is shared across all tenants."
        },
        "RabbitHAQueues": {
          "name": "RabbitHAQueues",
          "type": "Number",
          "noEcho": "false",
          "label": "RabbitHAQueues",
          "default": -1,
          "description": "The number of HA queues to be configured in rabbit. The default is -1 which translates to \"ha-mode all\". The special value 0 will be automatically overridden to CEIL(N/2) where N is the number of nodes running rabbitmq."
        },
        "ComputeSriovHostnameFormat": {
          "name": "ComputeSriovHostnameFormat",
          "type": "String",
          "noEcho": "false",
          "label": "ComputeSriovHostnameFormat",
          "default": "%stackname%-computesriov-%index%",
          "description": "Format for ComputeSriov node hostnames Note %index% is translated into the index of the node, e.g 0/1/2 etc and %stackname% is replaced with the stack name e.g overcloud\n"
        },
        "ControlPlaneSubnetCidr": {
          "name": "ControlPlaneSubnetCidr",
          "type": "String",
          "noEcho": "false",
          "label": "ControlPlaneSubnetCidr",
          "default": "24",
          "description": "The subnet CIDR of the control plane network."
        },
        "StorageIpList": {
          "name": "StorageIpList",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "StorageIpList",
          "default": [],
          "description": ""
        },
        "RabbitCookie": {
          "name": "RabbitCookie",
          "type": "String",
          "noEcho": "true",
          "label": "RabbitCookie",
          "default": "",
          "description": ""
        },
        "NeutronMetadataAgentLoggingSource": {
          "name": "NeutronMetadataAgentLoggingSource",
          "type": "Json",
          "noEcho": "false",
          "label": "NeutronMetadataAgentLoggingSource",
          "default": {
            "tag": "openstack.neutron.agent.metadata",
            "path": "/var/log/neutron/metadata-agent.log"
          },
          "description": ""
        },
        "ManagementSubnetName": {
          "name": "ManagementSubnetName",
          "type": "String",
          "noEcho": "false",
          "label": "ManagementSubnetName",
          "default": "management_subnet",
          "description": "The name of the management subnet in Neutron."
        },
        "NeutronVniRanges": {
          "name": "NeutronVniRanges",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "NeutronVniRanges",
          "default": [
            "1:4094"
          ],
          "description": "Comma-separated list of <vni_min>:<vni_max> tuples enumerating ranges\nof VXLAN VNI IDs that are available for tenant network allocation\n"
        },
        "BondInterfaceOvsOptions": {
          "name": "BondInterfaceOvsOptions",
          "type": "String",
          "noEcho": "false",
          "label": "BondInterfaceOvsOptions",
          "default": "",
          "description": "The ovs_options string for the bond interface. Set things like lacp=active and/or bond_mode=balance-slb using this option."
        },
        "DockerGnocchiMetricdImage": {
          "name": "DockerGnocchiMetricdImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerGnocchiMetricdImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-gnocchi-metricd-docker:20171004.1",
          "description": "image"
        },
        "HAProxyInternalTLSKeysDirectory": {
          "name": "HAProxyInternalTLSKeysDirectory",
          "type": "String",
          "noEcho": "false",
          "label": "HAProxyInternalTLSKeysDirectory",
          "default": "/etc/pki/tls/private/haproxy",
          "description": ""
        },
        "StorageMgmtSubnetName": {
          "name": "StorageMgmtSubnetName",
          "type": "String",
          "noEcho": "false",
          "label": "StorageMgmtSubnetName",
          "default": "storage_mgmt_subnet",
          "description": "The name of the storage_mgmt subnet in Neutron."
        },
        "GlanceNfsEnabled": {
          "name": "GlanceNfsEnabled",
          "type": "Boolean",
          "noEcho": "false",
          "label": "GlanceNfsEnabled",
          "default": false,
          "description": "When using GlanceBackend 'file', mount NFS share for image storage.\n"
        },
        "MonitoringSubscriptionNeutronL3": {
          "name": "MonitoringSubscriptionNeutronL3",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionNeutronL3",
          "default": "overcloud-neutron-l3-agent",
          "description": ""
        },
        "stack_name": {
          "description": "Name of the topmost stack",
          "type": "String",
          "noEcho": "false",
          "label": "stack_name",
          "value": "dummy",
          "name": "stack_name"
        },
        "NeutronTunnelTypes": {
          "name": "NeutronTunnelTypes",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "NeutronTunnelTypes",
          "default": "",
          "description": "The tunnel types for the Neutron tenant network."
        },
        "ControlPlaneIpList": {
          "name": "ControlPlaneIpList",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "ControlPlaneIpList",
          "default": [],
          "description": ""
        },
        "MonitoringSubscriptionNovaScheduler": {
          "name": "MonitoringSubscriptionNovaScheduler",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionNovaScheduler",
          "default": "overcloud-nova-scheduler",
          "description": ""
        },
        "IPPool": {
          "name": "IPPool",
          "type": "Json",
          "noEcho": "false",
          "label": "IPPool",
          "default": {},
          "description": ""
        },
        "DockerPuppetProcessCount": {
          "name": "DockerPuppetProcessCount",
          "type": "Number",
          "noEcho": "false",
          "label": "DockerPuppetProcessCount",
          "default": 3,
          "description": "Number of concurrent processes to use when running docker-puppet to generate config files."
        },
        "AodhApiPolicies": {
          "name": "AodhApiPolicies",
          "type": "Json",
          "noEcho": "false",
          "label": "AodhApiPolicies",
          "default": {},
          "description": "A hash of policies to configure for Aodh API.\ne.g. { aodh-context_is_admin: { key: context_is_admin, value: 'role:admin' } }\n"
        },
        "GnocchiRbdPoolName": {
          "name": "GnocchiRbdPoolName",
          "type": "String",
          "noEcho": "false",
          "label": "GnocchiRbdPoolName",
          "default": "metrics",
          "description": ""
        },
        "ExtraConfig": {
          "name": "ExtraConfig",
          "type": "Json",
          "noEcho": "false",
          "label": "ExtraConfig",
          "default": {},
          "description": "Additional hiera configuration to inject into the cluster.\n"
        },
        "NeutronExternalNetworkBridge": {
          "name": "NeutronExternalNetworkBridge",
          "type": "String",
          "noEcho": "false",
          "label": "NeutronExternalNetworkBridge",
          "default": "''",
          "description": "Name of bridge used for external network traffic. Usually L2 agent handles port wiring into external bridge, and hence the parameter should be unset."
        },
        "MonitoringSubscriptionNovaApi": {
          "name": "MonitoringSubscriptionNovaApi",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionNovaApi",
          "default": "overcloud-nova-api",
          "description": ""
        },
        "GlanceLogFile": {
          "name": "GlanceLogFile",
          "type": "String",
          "noEcho": "false",
          "label": "GlanceLogFile",
          "default": "",
          "description": "The filepath of the file to use for logging messages from Glance."
        },
        "MonitoringSubscriptionCeilometerCentral": {
          "name": "MonitoringSubscriptionCeilometerCentral",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionCeilometerCentral",
          "default": "overcloud-ceilometer-agent-central",
          "description": ""
        },
        "MonitoringSubscriptionAodhListener": {
          "name": "MonitoringSubscriptionAodhListener",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionAodhListener",
          "default": "overcloud-ceilometer-aodh-listener",
          "description": ""
        },
        "DockerNovaConfigImage": {
          "name": "DockerNovaConfigImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerNovaConfigImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-nova-api-docker:20171004.1",
          "description": "The container image to use for the nova config_volume"
        },
        "NeutronEnableL2Pop": {
          "name": "NeutronEnableL2Pop",
          "type": "String",
          "noEcho": "false",
          "label": "NeutronEnableL2Pop",
          "default": "False",
          "description": "Enable/disable the L2 population feature in the Neutron agents."
        },
        "NeutronAllowL3AgentFailover": {
          "name": "NeutronAllowL3AgentFailover",
          "type": "String",
          "noEcho": "false",
          "label": "NeutronAllowL3AgentFailover",
          "default": "True",
          "description": "Allow automatic l3-agent failover"
        },
        "GlanceBackend": {
          "name": "GlanceBackend",
          "type": "String",
          "label": "GlanceBackend",
          "noEcho": "false",
          "allowedValues": [
            "swift",
            "file",
            "rbd"
          ],
          "default": "swift",
          "description": "The short name of the Glance backend to use. Should be one of swift, rbd, or file"
        },
        "DockerMysqlConfigImage": {
          "name": "DockerMysqlConfigImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerMysqlConfigImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-mariadb-docker:20171004.1",
          "description": "The container image to use for the mysql config_volume"
        },
        "NovaSchedulerAvailableFilters": {
          "name": "NovaSchedulerAvailableFilters",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "NovaSchedulerAvailableFilters",
          "default": [
            "nova.scheduler.filters.all_filters",
            "nova.scheduler.filters.pci_passthrough_filter.PciPassthroughFilter"
          ],
          "description": "List of scheduler available filters"
        },
        "HeatCronPurgeDeletedMaxDelay": {
          "name": "HeatCronPurgeDeletedMaxDelay",
          "type": "String",
          "noEcho": "false",
          "label": "HeatCronPurgeDeletedMaxDelay",
          "default": "3600",
          "description": "Cron to purge db entries marked as deleted and older than $age - Max Delay\n"
        },
        "NeutronMetadataProxySharedSecret": {
          "name": "NeutronMetadataProxySharedSecret",
          "type": "String",
          "noEcho": "true",
          "label": "NeutronMetadataProxySharedSecret",
          "default": "DatZ3w2vm6U8vb4jvhzJxtpqp",
          "description": "Shared secret to prevent spoofing"
        },
        "ManagementNetName": {
          "name": "ManagementNetName",
          "type": "String",
          "noEcho": "false",
          "label": "ManagementNetName",
          "default": "management",
          "description": "The name of the management network."
        },
        "controllerExtraConfig": {
          "name": "controllerExtraConfig",
          "type": "Json",
          "noEcho": "false",
          "label": "controllerExtraConfig",
          "default": {},
          "description": "DEPRECATED use ControllerExtraConfig instead\n"
        },
        "NeutronEnableIsolatedMetadata": {
          "name": "NeutronEnableIsolatedMetadata",
          "type": "Boolean",
          "noEcho": "false",
          "label": "NeutronEnableIsolatedMetadata",
          "default": false,
          "description": "If True, DHCP provide metadata route to VM."
        },
        "OvsDpdkDriverType": {
          "name": "OvsDpdkDriverType",
          "type": "String",
          "noEcho": "false",
          "label": "OvsDpdkDriverType",
          "default": "vfio-pci",
          "description": "DPDK Driver type. Ensure the Overcloud NIC to be used for DPDK supports this UIO/PMD driver.\n"
        },
        "LoggingExtraSources": {
          "name": "LoggingExtraSources",
          "type": "Json",
          "noEcho": "false",
          "label": "LoggingExtraSources",
          "default": [],
          "description": "A list of additional logging sources for fluentd.  These will be combined with the LoggingDefaultSources and any logging sources defined by composable services.\n"
        },
        "NeighbourGcThreshold3": {
          "name": "NeighbourGcThreshold3",
          "type": "Number",
          "noEcho": "false",
          "label": "NeighbourGcThreshold3",
          "default": 4096,
          "description": "Configures sysctl net.ipv4.neigh.default.gc_thresh3 value. This is the hard maximum number of entries to keep in the ARP cache. The garbage collector will always run if there are more than this number of entries in the cache."
        },
        "NetVipMap": {
          "label": "NetVipMap",
          "name": "NetVipMap",
          "description": "",
          "type": "Json",
          "noEcho": "false"
        },
        "NovaCronArchiveDeleteRowsMonthday": {
          "name": "NovaCronArchiveDeleteRowsMonthday",
          "type": "String",
          "noEcho": "false",
          "label": "NovaCronArchiveDeleteRowsMonthday",
          "default": "*",
          "description": "Cron to move deleted instances to another table - Month Day\n"
        },
        "KeystoneCronTokenFlushWeekday": {
          "name": "KeystoneCronTokenFlushWeekday",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "KeystoneCronTokenFlushWeekday",
          "default": "*",
          "description": "Cron to purge expired tokens - Week Day\n"
        },
        "NovaWorkers": {
          "name": "NovaWorkers",
          "type": "Number",
          "noEcho": "false",
          "label": "NovaWorkers",
          "default": 0,
          "description": "Number of workers for Nova services."
        },
        "DockerRedisImage": {
          "name": "DockerRedisImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerRedisImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-redis-docker:20171004.1",
          "description": "image"
        },
        "InternalApiNetCidr": {
          "name": "InternalApiNetCidr",
          "type": "String",
          "noEcho": "false",
          "label": "InternalApiNetCidr",
          "default": "10.10.81.0/24",
          "description": "Cidr for the internal_api network."
        },
        "SwiftMountCheck": {
          "name": "SwiftMountCheck",
          "type": "Boolean",
          "noEcho": "false",
          "label": "SwiftMountCheck",
          "default": false,
          "description": "Value of mount_check in Swift account/container/object -server.conf"
        },
        "DatabaseSyncTimeout": {
          "name": "DatabaseSyncTimeout",
          "type": "Number",
          "noEcho": "false",
          "label": "DatabaseSyncTimeout",
          "default": 300,
          "description": "DB Sync Timeout default"
        },
        "ComputeSriovRemovalPolicies": {
          "name": "ComputeSriovRemovalPolicies",
          "type": "Json",
          "noEcho": "false",
          "label": "ComputeSriovRemovalPolicies",
          "default": [],
          "description": "List of resources to be removed from ComputeSriov ResourceGroup when doing an update which requires removal of specific resources. Example format ComputeRemovalPolicies: [{'resource_list': ['0']}]\n"
        },
        "OvsDpdkSocketMemory": {
          "name": "OvsDpdkSocketMemory",
          "type": "String",
          "noEcho": "false",
          "label": "OvsDpdkSocketMemory",
          "default": "",
          "description": "Sets the amount of hugepage memory to assign per NUMA node. It is recommended to use the socket closest to the PCIe slot used for the desired DPDK NIC.  The format should be in \"<socket 0 mem>, <socket 1 mem>, <socket n mem>\", where the value is specified in MB.  For example: \"1024,0\".\n"
        },
        "DockerPankoConfigImage": {
          "name": "DockerPankoConfigImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerPankoConfigImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-panko-api-docker:20171004.1",
          "description": "The container image to use for the panko config_volume"
        },
        "SSLCertificate": {
          "name": "SSLCertificate",
          "type": "String",
          "noEcho": "false",
          "label": "SSLCertificate",
          "default": "",
          "description": "The content of the SSL certificate (without Key) in PEM format.\n"
        },
        "hosts": {
          "description": "",
          "type": "String",
          "noEcho": "false",
          "label": "hosts",
          "value": "\n\n",
          "name": "hosts"
        },
        "server": {
          "description": "",
          "type": "String",
          "noEcho": "false",
          "label": "server",
          "value": "ComputeSriov",
          "name": "server"
        },
        "NovaApiLoggingSource": {
          "name": "NovaApiLoggingSource",
          "type": "Json",
          "noEcho": "false",
          "label": "NovaApiLoggingSource",
          "default": {
            "tag": "openstack.nova.api",
            "path": "/var/log/nova/nova-api.log"
          },
          "description": ""
        },
        "StorageMgmtNetCidr": {
          "name": "StorageMgmtNetCidr",
          "type": "String",
          "noEcho": "false",
          "label": "StorageMgmtNetCidr",
          "default": "10.10.83.0/24",
          "description": "Cidr for the storage_mgmt network."
        },
        "ManagementNetValueSpecs": {
          "name": "ManagementNetValueSpecs",
          "type": "Json",
          "noEcho": "false",
          "label": "ManagementNetValueSpecs",
          "default": {
            "provider:network_type": "flat",
            "provider:physical_network": "management"
          },
          "description": "Value specs for the management network."
        },
        "DockerHorizonConfigImage": {
          "name": "DockerHorizonConfigImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerHorizonConfigImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-horizon-docker:20171004.1",
          "description": "The container image to use for the horizon config_volume"
        },
        "PingTestIps": {
          "name": "PingTestIps",
          "type": "String",
          "noEcho": "false",
          "label": "PingTestIps",
          "value": "     ",
          "default": "",
          "description": "A string containing a space separated list of IP addresses used to ping test each available network interface."
        },
        "DeploymentServerBlacklist": {
          "name": "DeploymentServerBlacklist",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "DeploymentServerBlacklist",
          "default": [],
          "description": "List of server hostnames to blacklist from any triggered deployments.\n"
        },
        "OvercloudControlFlavor": {
          "name": "OvercloudControlFlavor",
          "type": "String",
          "noEcho": "false",
          "label": "OvercloudControlFlavor",
          "default": "baremetal",
          "description": "DEPRECATED Use OvercloudControllerFlavor instead."
        },
        "StorageMgmtAllocationPools": {
          "name": "StorageMgmtAllocationPools",
          "type": "Json",
          "noEcho": "false",
          "label": "StorageMgmtAllocationPools",
          "default": [
            {
              "end": "10.10.83.200",
              "start": "10.10.83.20"
            }
          ],
          "description": "Ip allocation pool range for the storage_mgmt network."
        },
        "KeystoneFernetMaxActiveKeys": {
          "name": "KeystoneFernetMaxActiveKeys",
          "type": "Number",
          "noEcho": "false",
          "label": "KeystoneFernetMaxActiveKeys",
          "default": 5,
          "description": "The maximum active keys in the keystone fernet key repository."
        },
        "Debug": {
          "name": "Debug",
          "type": "String",
          "noEcho": "false",
          "label": "Debug",
          "default": "",
          "description": "Set to True to enable debugging on all services."
        },
        "KeystoneCredential1": {
          "name": "KeystoneCredential1",
          "type": "String",
          "noEcho": "false",
          "label": "KeystoneCredential1",
          "default": "RYJBOX1f0eQIwsSG0RAgTbQhO734vO_moK_3Mk-yXQ0=",
          "description": "The second Keystone credential key. Must be a valid key."
        },
        "KeystoneCredential0": {
          "name": "KeystoneCredential0",
          "type": "String",
          "noEcho": "false",
          "label": "KeystoneCredential0",
          "default": "3uLnEJ8aWLjK433U5iZbcB83H2xw-VpTRSXXEIEa8-o=",
          "description": "The first Keystone credential key. Must be a valid key."
        },
        "DockerGlanceApiImage": {
          "name": "DockerGlanceApiImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerGlanceApiImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-glance-api-docker:20171004.1",
          "description": "image"
        },
        "InternalApiAllocationPools": {
          "name": "InternalApiAllocationPools",
          "type": "Json",
          "noEcho": "false",
          "label": "InternalApiAllocationPools",
          "default": [
            {
              "end": "10.10.81.200",
              "start": "10.10.81.20"
            }
          ],
          "description": "Ip allocation pool range for the internal_api network."
        },
        "RabbitPassword": {
          "name": "RabbitPassword",
          "type": "String",
          "noEcho": "true",
          "label": "RabbitPassword",
          "default": "vwwYtWnacwbkZRgCy2W3uaeWQ",
          "description": "The password for RabbitMQ"
        },
        "CinderCronDbPurgeMonth": {
          "name": "CinderCronDbPurgeMonth",
          "type": "String",
          "noEcho": "false",
          "label": "CinderCronDbPurgeMonth",
          "default": "*",
          "description": "Cron to move deleted instances to another table - Month\n"
        },
        "DockerKeystoneConfigImage": {
          "name": "DockerKeystoneConfigImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerKeystoneConfigImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-keystone-docker:20171004.1",
          "description": "The container image to use for the keystone config_volume"
        },
        "CloudName": {
          "name": "CloudName",
          "type": "String",
          "noEcho": "false",
          "label": "CloudName",
          "default": "overcloud.localdomain",
          "description": "The DNS name of this cloud. E.g. ci-overcloud.tripleo.org"
        },
        "CinderApiLoggingSource": {
          "name": "CinderApiLoggingSource",
          "type": "Json",
          "noEcho": "false",
          "label": "CinderApiLoggingSource",
          "default": {
            "tag": "openstack.cinder.api",
            "path": "/var/log/cinder/cinder-api.log"
          },
          "description": ""
        },
        "controller_ips": {
          "label": "controller_ips",
          "name": "controller_ips",
          "description": "",
          "type": "CommaDelimitedList",
          "noEcho": "false"
        },
        "PurgeFirewallRules": {
          "name": "PurgeFirewallRules",
          "type": "Boolean",
          "noEcho": "false",
          "label": "PurgeFirewallRules",
          "default": false,
          "description": "Whether IPtables rules should be purged before setting up the new ones."
        },
        "ServiceNetMapDeprecatedMapping": {
          "name": "ServiceNetMapDeprecatedMapping",
          "type": "Json",
          "noEcho": "false",
          "label": "ServiceNetMapDeprecatedMapping",
          "default": {
            "RabbitMqNetwork": "RabbitmqNetwork",
            "CephPublicNetwork": "CephMonNetwork",
            "MongoDbNetwork": "MongodbNetwork",
            "SwiftMgmtNetwork": "SwiftStorageNetwork"
          },
          "description": "Mapping older deprecated service names, intended for internal use only, this will be removed in future."
        },
        "NeutronEnableMetadataNetwork": {
          "name": "NeutronEnableMetadataNetwork",
          "type": "Boolean",
          "noEcho": "false",
          "label": "NeutronEnableMetadataNetwork",
          "default": false,
          "description": "If True, DHCP provide metadata network. Requires either IsolatedMetadata or ForceMetadata parameters to also be True."
        },
        "NovaSchedulerDiscoverHostsInCellsInterval": {
          "name": "NovaSchedulerDiscoverHostsInCellsInterval",
          "type": "Number",
          "noEcho": "false",
          "label": "NovaSchedulerDiscoverHostsInCellsInterval",
          "default": -1,
          "description": "This value controls how often (in seconds) the scheduler should attempt to discover new hosts that have been added to cells. The default value of -1 disables the periodic task completely. It is recommended to set this parameter for deployments using Ironic.\n"
        },
        "StorageMgmtVirtualFixedIPs": {
          "name": "StorageMgmtVirtualFixedIPs",
          "type": "Json",
          "noEcho": "false",
          "label": "StorageMgmtVirtualFixedIPs",
          "default": [],
          "description": "Control the IP allocation for the StorageMgmtVirtualInterface port. E.g. [{'ip_address':'1.2.3.4'}]\n"
        },
        "PublicVirtualFixedIPs": {
          "name": "PublicVirtualFixedIPs",
          "type": "Json",
          "noEcho": "false",
          "label": "PublicVirtualFixedIPs",
          "default": [],
          "description": "Control the IP allocation for the PublicVirtualInterface port. E.g. [{'ip_address':'1.2.3.4'}]\n"
        },
        "CinderCronDbPurgeAge": {
          "name": "CinderCronDbPurgeAge",
          "type": "String",
          "noEcho": "false",
          "label": "CinderCronDbPurgeAge",
          "default": "0",
          "description": "Cron to move deleted instances to another table - Age\n"
        },
        "LoggingDefaultFormat": {
          "name": "LoggingDefaultFormat",
          "type": "String",
          "noEcho": "false",
          "label": "LoggingDefaultFormat",
          "default": "/(?<time>\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}.\\d+) (?<pid>\\d+) (?<priority>\\S+) (?<message>.*)$/",
          "description": "Default format used to parse messages from log files.\n"
        },
        "ControllerCount": {
          "name": "ControllerCount",
          "type": "Number",
          "noEcho": "false",
          "label": "ControllerCount",
          "default": 1,
          "description": "Number of Controller nodes to deploy"
        },
        "ComputeSriovSchedulerHints": {
          "name": "ComputeSriovSchedulerHints",
          "type": "Json",
          "noEcho": "false",
          "label": "ComputeSriovSchedulerHints",
          "default": {},
          "description": "Optional scheduler hints to pass to nova"
        },
        "SwiftRingPutTempurl": {
          "name": "SwiftRingPutTempurl",
          "type": "String",
          "noEcho": "false",
          "label": "SwiftRingPutTempurl",
          "default": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud-swift-rings/swift-rings.tar.gz?temp_url_sig=991f24658dbc8aeab3f33b43766ad33d23652ca9&temp_url_expires=1510140167",
          "description": "A temporary Swift URL to upload rings to."
        },
        "StorageNetName": {
          "name": "StorageNetName",
          "type": "String",
          "noEcho": "false",
          "label": "StorageNetName",
          "default": "storage",
          "description": "The name of the storage network."
        },
        "NovaCronArchiveDeleteRowsDestination": {
          "name": "NovaCronArchiveDeleteRowsDestination",
          "type": "String",
          "noEcho": "false",
          "label": "NovaCronArchiveDeleteRowsDestination",
          "default": "/var/log/nova/nova-rowsflush.log",
          "description": "Cron to move deleted instances to another table - Log destination\n"
        },
        "HeatCronPurgeDeletedMinute": {
          "name": "HeatCronPurgeDeletedMinute",
          "type": "String",
          "noEcho": "false",
          "label": "HeatCronPurgeDeletedMinute",
          "default": "1",
          "description": "Cron to purge db entries marked as deleted and older than $age - Minute\n"
        },
        "CephClusterFSID": {
          "name": "CephClusterFSID",
          "type": "String",
          "noEcho": "false",
          "label": "CephClusterFSID",
          "default": "08833944-c37c-11e7-b782-5254000244dd",
          "description": "The Ceph cluster FSID. Must be a UUID."
        },
        "cloud_name_external": {
          "description": "",
          "type": "String",
          "noEcho": "false",
          "label": "cloud_name_external",
          "value": "overcloud.localdomain",
          "name": "cloud_name_external"
        },
        "RabbitCookieSalt": {
          "name": "RabbitCookieSalt",
          "type": "String",
          "noEcho": "false",
          "label": "RabbitCookieSalt",
          "default": "unset",
          "description": "Salt for the rabbit cookie, change this to force the randomly generated rabbit cookie to change."
        },
        "LoggingSSLCertificate": {
          "name": "LoggingSSLCertificate",
          "type": "String",
          "noEcho": "false",
          "label": "LoggingSSLCertificate",
          "default": "",
          "description": "PEM-encoded SSL CA certificate for fluentd.\n"
        },
        "NeutronGlobalPhysnetMtu": {
          "name": "NeutronGlobalPhysnetMtu",
          "type": "Number",
          "noEcho": "false",
          "label": "NeutronGlobalPhysnetMtu",
          "default": 1500,
          "description": "MTU of the underlying physical network. Neutron uses this value to\ncalculate MTU for all virtual network components. For flat and VLAN\nnetworks, neutron uses this value without modification. For overlay\nnetworks such as VXLAN, neutron automatically subtracts the overlay\nprotocol overhead from this value.\n"
        },
        "DockerSwiftProxyImage": {
          "name": "DockerSwiftProxyImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerSwiftProxyImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-swift-proxy-server-docker:20171004.1",
          "description": "image"
        },
        "cloud_name_storage_mgmt": {
          "description": "",
          "type": "String",
          "noEcho": "false",
          "label": "cloud_name_storage_mgmt",
          "value": "overcloud.storagemgmt.localdomain",
          "name": "cloud_name_storage_mgmt"
        },
        "NeutronOverlayIPVersion": {
          "name": "NeutronOverlayIPVersion",
          "type": "Number",
          "label": "NeutronOverlayIPVersion",
          "noEcho": "false",
          "allowedValues": [
            4,
            6
          ],
          "default": 4,
          "description": "IP version used for all overlay network endpoints."
        },
        "NovaSchedulerLoggingSource": {
          "name": "NovaSchedulerLoggingSource",
          "type": "Json",
          "noEcho": "false",
          "label": "NovaSchedulerLoggingSource",
          "default": {
            "tag": "openstack.nova.scheduler",
            "path": "/var/log/nova/nova-scheduler.log"
          },
          "description": ""
        },
        "HeatApiCfnLoggingSource": {
          "name": "HeatApiCfnLoggingSource",
          "type": "Json",
          "noEcho": "false",
          "label": "HeatApiCfnLoggingSource",
          "default": {
            "tag": "openstack.heat.api.cfn",
            "path": "/var/log/heat/heat-api-cfn.log"
          },
          "description": ""
        },
        "DockerHeatApiCfnImage": {
          "name": "DockerHeatApiCfnImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerHeatApiCfnImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-heat-api-cfn-docker:20171004.1",
          "description": "image"
        },
        "RabbitClientUseSSL": {
          "name": "RabbitClientUseSSL",
          "type": "String",
          "noEcho": "false",
          "label": "RabbitClientUseSSL",
          "default": false,
          "description": "Rabbit client subscriber parameter to specify an SSL connection to the RabbitMQ host.\n"
        },
        "NeutronWorkers": {
          "name": "NeutronWorkers",
          "type": "String",
          "noEcho": "false",
          "label": "NeutronWorkers",
          "default": "",
          "description": "Sets the number of API and RPC workers for the Neutron service.\nThe default value results in the configuration being left unset\nand a system-dependent default will be chosen (usually the number\nof processors). Please note that this can result in a large number\nof processes and memory consumption on systems with a large core\ncount. On such systems it is recommended that a non-default value\nbe selected that matches the load requirements.\n"
        },
        "ControllerRemovalPolicies": {
          "name": "ControllerRemovalPolicies",
          "type": "Json",
          "noEcho": "false",
          "label": "ControllerRemovalPolicies",
          "default": [],
          "description": "List of resources to be removed from Controller ResourceGroup when doing an update which requires removal of specific resources. Example format ComputeRemovalPolicies: [{'resource_list': ['0']}]\n"
        },
        "DockerNovaPlacementConfigImage": {
          "name": "DockerNovaPlacementConfigImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerNovaPlacementConfigImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-nova-placement-api-docker:20171004.1",
          "description": "The container image to use for the nova_placement config_volume"
        },
        "NovaPlacementAPIInterface": {
          "name": "NovaPlacementAPIInterface",
          "type": "String",
          "noEcho": "false",
          "label": "NovaPlacementAPIInterface",
          "default": "internal",
          "description": "Endpoint interface to be used for the placement API.\n"
        },
        "NovaCronArchiveDeleteRowsMinute": {
          "name": "NovaCronArchiveDeleteRowsMinute",
          "type": "String",
          "noEcho": "false",
          "label": "NovaCronArchiveDeleteRowsMinute",
          "default": "1",
          "description": "Cron to move deleted instances to another table - Minute\n"
        },
        "DockerNovaVncProxyImage": {
          "name": "DockerNovaVncProxyImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerNovaVncProxyImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-nova-novncproxy-docker:20171004.1",
          "description": "image"
        },
        "DockerCrondConfigImage": {
          "name": "DockerCrondConfigImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerCrondConfigImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-cron-docker:20171004.1",
          "description": "The container image to use for the crond config_volume"
        },
        "KernelPidMax": {
          "name": "KernelPidMax",
          "type": "Number",
          "noEcho": "false",
          "label": "KernelPidMax",
          "default": 1048576,
          "description": "Configures sysctl kernel.pid_max key"
        },
        "DockerAodhEvaluatorImage": {
          "name": "DockerAodhEvaluatorImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerAodhEvaluatorImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-aodh-evaluator-docker:20171004.1",
          "description": "image"
        },
        "HeatApiCloudwatchLoggingSource": {
          "name": "HeatApiCloudwatchLoggingSource",
          "type": "Json",
          "noEcho": "false",
          "label": "HeatApiCloudwatchLoggingSource",
          "default": {
            "tag": "openstack.heat.api.cloudwatch",
            "path": "/var/log/heat/heat-api-cloudwatch.log"
          },
          "description": ""
        },
        "NovaSchedulerDefaultFilters": {
          "name": "NovaSchedulerDefaultFilters",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "NovaSchedulerDefaultFilters",
          "default": [
            "RetryFilter",
            "AvailabilityZoneFilter",
            "RamFilter",
            "ComputeFilter",
            "ComputeCapabilitiesFilter",
            "ImagePropertiesFilter",
            "ServerGroupAntiAffinityFilter",
            "ServerGroupAffinityFilter",
            "PciPassthroughFilter"
          ],
          "description": "An array of filters used by Nova to filter a node.These filters will be applied in the order they are listed, so place your most restrictive filters first to make the filtering process more efficient.\n"
        },
        "DockerGlanceApiConfigImage": {
          "name": "DockerGlanceApiConfigImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerGlanceApiConfigImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-glance-api-docker:20171004.1",
          "description": "The container image to use for the glance_api config_volume"
        },
        "MonitoringSubscriptionCinderVolume": {
          "name": "MonitoringSubscriptionCinderVolume",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionCinderVolume",
          "default": "overcloud-cinder-volume",
          "description": ""
        },
        "MonitoringSubscriptionHeatApi": {
          "name": "MonitoringSubscriptionHeatApi",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionHeatApi",
          "default": "overcloud-heat-api",
          "description": ""
        },
        "ControllerExtraConfig": {
          "name": "ControllerExtraConfig",
          "type": "Json",
          "noEcho": "false",
          "label": "ControllerExtraConfig",
          "default": {},
          "description": "Role specific additional hiera configuration to inject into the cluster.\n"
        },
        "RedisVirtualIP": {
          "name": "RedisVirtualIP",
          "type": "String",
          "noEcho": "false",
          "label": "RedisVirtualIP",
          "default": "",
          "description": ""
        },
        "InternalApiNetValueSpecs": {
          "name": "InternalApiNetValueSpecs",
          "type": "Json",
          "noEcho": "false",
          "label": "InternalApiNetValueSpecs",
          "default": {
            "provider:network_type": "flat",
            "provider:physical_network": "internal_api"
          },
          "description": "Value specs for the internal_api network."
        },
        "HeatPassword": {
          "name": "HeatPassword",
          "type": "String",
          "noEcho": "true",
          "label": "HeatPassword",
          "default": "YgwTQgkfq97mHvG2CfrZg28gM",
          "description": "The password for the Heat service and db account, used by the Heat services."
        },
        "KeystoneNotificationFormat": {
          "name": "KeystoneNotificationFormat",
          "type": "String",
          "label": "KeystoneNotificationFormat",
          "noEcho": "false",
          "allowedValues": [
            "basic",
            "cadf"
          ],
          "default": "basic",
          "description": "The Keystone notification format"
        },
        "MonitoringSubscriptionPankoApi": {
          "name": "MonitoringSubscriptionPankoApi",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionPankoApi",
          "default": "overcloud-ceilometer-panko-api",
          "description": ""
        },
        "HAProxySyslogAddress": {
          "name": "HAProxySyslogAddress",
          "type": "String",
          "noEcho": "false",
          "label": "HAProxySyslogAddress",
          "default": "/dev/log",
          "description": "Syslog address where HAproxy will send its log"
        },
        "KeystoneFernetKeys": {
          "name": "KeystoneFernetKeys",
          "type": "Json",
          "noEcho": "false",
          "label": "KeystoneFernetKeys",
          "default": {
            "/etc/keystone/fernet-keys/1": {
              "content": "XAHw-aewoyXflq0qAlQaZpGOY_ZFKOCvBjWQsY64kxE="
            },
            "/etc/keystone/fernet-keys/0": {
              "content": "ahRoEQtKwcJ-83hreCrVnQJAW_LignyPfm2vTb3wais="
            }
          },
          "description": "Mapping containing keystone's fernet keys and their paths."
        },
        "KeystoneDebug": {
          "name": "KeystoneDebug",
          "type": "String",
          "noEcho": "false",
          "label": "KeystoneDebug",
          "default": "",
          "description": "Set to True to enable debugging Keystone service."
        },
        "CinderNasSecureFileOperations": {
          "name": "CinderNasSecureFileOperations",
          "type": "String",
          "noEcho": "false",
          "label": "CinderNasSecureFileOperations",
          "default": false,
          "description": "Controls whether security enhanced NFS file operations are enabled. Valid values are 'auto', 'true' or 'false'. Effective when CinderEnableNfsBackend is true.\n"
        },
        "CeilometerAgentNotificationLoggingSource": {
          "name": "CeilometerAgentNotificationLoggingSource",
          "type": "Json",
          "noEcho": "false",
          "label": "CeilometerAgentNotificationLoggingSource",
          "default": {
            "tag": "openstack.ceilometer.agent.notification",
            "path": "/var/log/ceilometer/agent-notification.log"
          },
          "description": ""
        },
        "NovaReservedHostMemory": {
          "name": "NovaReservedHostMemory",
          "type": "Number",
          "label": "NovaReservedHostMemory",
          "noEcho": "false",
          "minValue": 512,
          "default": 4096,
          "description": "Reserved RAM for host processes.\n"
        },
        "HeatCronPurgeDeletedMonthday": {
          "name": "HeatCronPurgeDeletedMonthday",
          "type": "String",
          "noEcho": "false",
          "label": "HeatCronPurgeDeletedMonthday",
          "default": "*",
          "description": "Cron to purge db entries marked as deleted and older than $age - Month Day\n"
        },
        "NumberOfStorageSacks": {
          "name": "NumberOfStorageSacks",
          "type": "Number",
          "noEcho": "false",
          "label": "NumberOfStorageSacks",
          "default": 128,
          "description": "Number of storage sacks to create."
        },
        "EnableInternalTLS": {
          "name": "EnableInternalTLS",
          "type": "Boolean",
          "noEcho": "false",
          "label": "EnableInternalTLS",
          "default": false,
          "description": ""
        },
        "ManagementNetEnableDHCP": {
          "name": "ManagementNetEnableDHCP",
          "type": "Boolean",
          "noEcho": "false",
          "label": "ManagementNetEnableDHCP",
          "default": false,
          "description": "Whether to enable DHCP on the associated subnet (IPv4 only)."
        },
        "NeutronOpenVswitchAgentLoggingSource": {
          "name": "NeutronOpenVswitchAgentLoggingSource",
          "type": "Json",
          "noEcho": "false",
          "label": "NeutronOpenVswitchAgentLoggingSource",
          "default": {
            "tag": "openstack.neutron.agent.openvswitch",
            "path": "/var/log/neutron/openvswitch-agent.log"
          },
          "description": ""
        },
        "CloudNameStorage": {
          "name": "CloudNameStorage",
          "type": "String",
          "noEcho": "false",
          "label": "CloudNameStorage",
          "default": "overcloud.storage.localdomain",
          "description": "The DNS name of this cloud's storage endpoint. E.g. 'ci-overcloud.storage.tripleo.org'.\n"
        },
        "RedisFDLimit": {
          "name": "RedisFDLimit",
          "type": "String",
          "noEcho": "false",
          "label": "RedisFDLimit",
          "default": 10240,
          "description": "Configure Redis FD limit"
        },
        "KeystoneCronTokenFlushMaxDelay": {
          "name": "KeystoneCronTokenFlushMaxDelay",
          "type": "Number",
          "noEcho": "false",
          "label": "KeystoneCronTokenFlushMaxDelay",
          "default": 0,
          "description": "Cron to purge expired tokens - Max Delay\n"
        },
        "StorageNetValueSpecs": {
          "name": "StorageNetValueSpecs",
          "type": "Json",
          "noEcho": "false",
          "label": "StorageNetValueSpecs",
          "default": {
            "provider:network_type": "flat",
            "provider:physical_network": "storage"
          },
          "description": "Value specs for the storage network."
        },
        "MonitoringSubscriptionNovaCompute": {
          "name": "MonitoringSubscriptionNovaCompute",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionNovaCompute",
          "default": "overcloud-nova-compute",
          "description": ""
        },
        "SnmpdBindHost": {
          "name": "SnmpdBindHost",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "SnmpdBindHost",
          "default": [
            "udp:161",
            "udp6:[::1]:161"
          ],
          "description": "An array of bind host addresses on which SNMP daemon will listen."
        },
        "NeutronPassword": {
          "name": "NeutronPassword",
          "type": "String",
          "noEcho": "true",
          "label": "NeutronPassword",
          "default": "3drAqyuefEVM8RKhJnXvbAKUJ",
          "description": "The password for the neutron service and db account, used by neutron agents."
        },
        "ComputeSriovImage": {
          "name": "ComputeSriovImage",
          "type": "String",
          "noEcho": "false",
          "customConstraint": "glance.image",
          "label": "ComputeSriovImage",
          "default": "overcloud-full",
          "description": "The disk image file to use for the role."
        },
        "NovaCronArchiveDeleteRowsMaxRows": {
          "name": "NovaCronArchiveDeleteRowsMaxRows",
          "type": "String",
          "noEcho": "false",
          "label": "NovaCronArchiveDeleteRowsMaxRows",
          "default": "100",
          "description": "Cron to move deleted instances to another table - Max Rows\n"
        },
        "MonitoringSubscriptionRabbitmq": {
          "name": "MonitoringSubscriptionRabbitmq",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionRabbitmq",
          "default": "overcloud-rabbitmq",
          "description": ""
        },
        "EnableFencing": {
          "name": "EnableFencing",
          "type": "Boolean",
          "noEcho": "false",
          "label": "EnableFencing",
          "default": false,
          "description": "Whether to enable fencing in Pacemaker or not."
        },
        "HeatCronPurgeDeletedUser": {
          "name": "HeatCronPurgeDeletedUser",
          "type": "String",
          "noEcho": "false",
          "label": "HeatCronPurgeDeletedUser",
          "default": "heat",
          "description": "Cron to purge db entries marked as deleted and older than $age - User\n"
        },
        "TenantNetEnableDHCP": {
          "name": "TenantNetEnableDHCP",
          "type": "Boolean",
          "noEcho": "false",
          "label": "TenantNetEnableDHCP",
          "default": false,
          "description": "Whether to enable DHCP on the associated subnet (IPv4 only)."
        },
        "HeatCronPurgeDeletedMonth": {
          "name": "HeatCronPurgeDeletedMonth",
          "type": "String",
          "noEcho": "false",
          "label": "HeatCronPurgeDeletedMonth",
          "default": "*",
          "description": "Cron to purge db entries marked as deleted and older than $age - Month\n"
        },
        "GlanceApiLoggingSource": {
          "name": "GlanceApiLoggingSource",
          "type": "Json",
          "noEcho": "false",
          "label": "GlanceApiLoggingSource",
          "default": {
            "tag": "openstack.glance.api",
            "path": "/var/log/glance/api.log"
          },
          "description": ""
        },
        "KeystoneLDAPDomainEnable": {
          "name": "KeystoneLDAPDomainEnable",
          "type": "Boolean",
          "noEcho": "false",
          "label": "KeystoneLDAPDomainEnable",
          "default": false,
          "description": "Trigger to call ldap_backend puppet keystone define."
        },
        "Hostname": {
          "name": "Hostname",
          "type": "String",
          "noEcho": "false",
          "label": "Hostname",
          "value": "dummy-computesriov-0",
          "default": "",
          "description": ""
        },
        "ManageEventPipeline": {
          "name": "ManageEventPipeline",
          "type": "Boolean",
          "noEcho": "false",
          "label": "ManageEventPipeline",
          "default": true,
          "description": "Whether to manage event_pipeline.yaml."
        },
        "NeutronFirewallDriver": {
          "name": "NeutronFirewallDriver",
          "type": "String",
          "noEcho": "false",
          "label": "NeutronFirewallDriver",
          "default": "openvswitch",
          "description": "Firewall driver for realizing neutron security group function"
        },
        "NetIpMap": {
          "name": "NetIpMap",
          "type": "Json",
          "noEcho": "false",
          "label": "NetIpMap",
          "default": {},
          "description": "The Net IP map"
        },
        "MonitoringSubscriptionCeilometerCompute": {
          "name": "MonitoringSubscriptionCeilometerCompute",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionCeilometerCompute",
          "default": "overcloud-ceilometer-agent-compute",
          "description": ""
        },
        "KeyName": {
          "name": "KeyName",
          "type": "String",
          "noEcho": "false",
          "customConstraint": "nova.keypair",
          "label": "KeyName",
          "default": "default",
          "description": "Name of an existing Nova key pair to enable SSH access to the instances"
        },
        "HeatMaxResourcesPerStack": {
          "name": "HeatMaxResourcesPerStack",
          "type": "Number",
          "noEcho": "false",
          "label": "HeatMaxResourcesPerStack",
          "default": 1000,
          "description": "Maximum resources allowed per top-level stack. -1 stands for unlimited."
        },
        "KeystoneTokenProvider": {
          "name": "KeystoneTokenProvider",
          "type": "String",
          "label": "KeystoneTokenProvider",
          "noEcho": "false",
          "allowedValues": [
            "uuid",
            "fernet"
          ],
          "default": "fernet",
          "description": "The keystone token format"
        },
        "InternalApiIpUri": {
          "name": "InternalApiIpUri",
          "type": "String",
          "noEcho": "false",
          "label": "InternalApiIpUri",
          "default": "",
          "description": "IP address with brackets in case of IPv6"
        },
        "HeatApiLoggingSource": {
          "name": "HeatApiLoggingSource",
          "type": "Json",
          "noEcho": "false",
          "label": "HeatApiLoggingSource",
          "default": {
            "tag": "openstack.heat.api",
            "path": "/var/log/heat/heat-api.log"
          },
          "description": ""
        },
        "NeutronServicePlugins": {
          "name": "NeutronServicePlugins",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "NeutronServicePlugins",
          "default": "router,qos,trunk",
          "description": "Comma-separated list of service plugin entrypoints to be loaded from the\nneutron.service_plugins namespace.\n"
        },
        "MonitoringSubscriptionNovaPlacement": {
          "name": "MonitoringSubscriptionNovaPlacement",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionNovaPlacement",
          "default": "overcloud-nova-placement",
          "description": ""
        },
        "ControllerHostnameFormat": {
          "name": "ControllerHostnameFormat",
          "type": "String",
          "noEcho": "false",
          "label": "ControllerHostnameFormat",
          "default": "%stackname%-controller-%index%",
          "description": "Format for Controller node hostnames Note %index% is translated into the index of the node, e.g 0/1/2 etc and %stackname% is replaced with the stack name e.g overcloud\n"
        },
        "FencingConfig": {
          "name": "FencingConfig",
          "type": "Json",
          "noEcho": "false",
          "label": "FencingConfig",
          "default": {},
          "description": "Pacemaker fencing configuration. The JSON should have\nthe following structure:\n  {\n    \"devices\": [\n      {\n        \"agent\": \"AGENT_NAME\",\n        \"host_mac\": \"HOST_MAC_ADDRESS\",\n        \"params\": {\"PARAM_NAME\": \"PARAM_VALUE\"}\n      }\n    ]\n  }\nFor instance:\n  {\n    \"devices\": [\n      {\n        \"agent\": \"fence_xvm\",\n        \"host_mac\": \"52:54:00:aa:bb:cc\",\n        \"params\": {\n          \"multicast_address\": \"225.0.0.12\",\n          \"port\": \"baremetal_0\",\n          \"manage_fw\": true,\n          \"manage_key_file\": true,\n          \"key_file\": \"/etc/fence_xvm.key\",\n          \"key_file_password\": \"abcdef\"\n        }\n      }\n    ]\n  }\n"
        },
        "ManagementInterfaceDefaultRoute": {
          "name": "ManagementInterfaceDefaultRoute",
          "type": "String",
          "noEcho": "false",
          "label": "ManagementInterfaceDefaultRoute",
          "default": "unset",
          "description": "The default route of the management network."
        },
        "ControlPlaneDefaultRoute": {
          "name": "ControlPlaneDefaultRoute",
          "type": "String",
          "noEcho": "false",
          "label": "ControlPlaneDefaultRoute",
          "default": "172.18.0.1",
          "description": "The default route of the control plane network."
        },
        "EnablePackageInstall": {
          "name": "EnablePackageInstall",
          "type": "Boolean",
          "noEcho": "false",
          "label": "EnablePackageInstall",
          "default": false,
          "description": "Set to true to enable package installation at deploy time"
        },
        "CinderNasSecureFilePermissions": {
          "name": "CinderNasSecureFilePermissions",
          "type": "String",
          "noEcho": "false",
          "label": "CinderNasSecureFilePermissions",
          "default": false,
          "description": "Controls whether security enhanced NFS file permissions are enabled. Valid values are 'auto', 'true' or 'false'. Effective when CinderEnableNfsBackend is true.\n"
        },
        "NeutronDhcpAgentsPerNetwork": {
          "name": "NeutronDhcpAgentsPerNetwork",
          "type": "Number",
          "noEcho": "false",
          "label": "NeutronDhcpAgentsPerNetwork",
          "default": 0,
          "description": "The number of neutron dhcp agents to schedule per network"
        },
        "ValidateNtp": {
          "name": "ValidateNtp",
          "type": "Boolean",
          "noEcho": "false",
          "label": "ValidateNtp",
          "default": true,
          "description": "Validation to ensure at least one time source is accessible."
        },
        "CinderCronDbPurgeDestination": {
          "name": "CinderCronDbPurgeDestination",
          "type": "String",
          "noEcho": "false",
          "label": "CinderCronDbPurgeDestination",
          "default": "/var/log/cinder/cinder-rowsflush.log",
          "description": "Cron to move deleted instances to another table - Log destination\n"
        },
        "GlanceRbdPoolName": {
          "name": "GlanceRbdPoolName",
          "type": "String",
          "noEcho": "false",
          "label": "GlanceRbdPoolName",
          "default": "images",
          "description": ""
        },
        "MonitoringSubscriptionKeystone": {
          "name": "MonitoringSubscriptionKeystone",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionKeystone",
          "default": "overcloud-keystone",
          "description": ""
        },
        "NotificationDriver": {
          "name": "NotificationDriver",
          "type": "String",
          "label": "NotificationDriver",
          "noEcho": "false",
          "allowedValues": [
            "messagingv2",
            "noop"
          ],
          "default": "messagingv2",
          "description": "Driver or drivers to handle sending notifications."
        },
        "GlanceWorkers": {
          "name": "GlanceWorkers",
          "type": "String",
          "noEcho": "false",
          "label": "GlanceWorkers",
          "default": "",
          "description": "Number of API worker processes for Glance. If left unset (empty string), the\ndefault value will result in the configuration being left unset and a\nsystem-dependent default value will be chosen (e.g.: number of\nprocessors). Please note that this will create a large number of\nprocesses on systems with a large number of CPUs resulting in excess\nmemory consumption. It is recommended that a suitable non-default value\nbe selected on such systems.\n"
        },
        "NetworkName": {
          "name": "NetworkName",
          "type": "String",
          "noEcho": "false",
          "label": "NetworkName",
          "default": "ctlplane",
          "description": "Name of the network where the VIP will be created"
        },
        "InternalApiIpList": {
          "name": "InternalApiIpList",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "InternalApiIpList",
          "default": [],
          "description": ""
        },
        "HeatConvergenceEngine": {
          "name": "HeatConvergenceEngine",
          "type": "Boolean",
          "noEcho": "false",
          "label": "HeatConvergenceEngine",
          "default": true,
          "description": "Enables the heat engine with the convergence architecture."
        },
        "NeutronAgentExtensions": {
          "name": "NeutronAgentExtensions",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "NeutronAgentExtensions",
          "default": "qos",
          "description": "Comma-separated list of extensions enabled for the Neutron agents.\n"
        },
        "StorageMgmtInterfaceDefaultRoute": {
          "name": "StorageMgmtInterfaceDefaultRoute",
          "type": "String",
          "noEcho": "false",
          "label": "StorageMgmtInterfaceDefaultRoute",
          "default": "",
          "description": "default route for the storage_mgmt network"
        },
        "ControllerServices": {
          "name": "ControllerServices",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "ControllerServices",
          "default": [
            "OS::TripleO::Services::AodhApi",
            "OS::TripleO::Services::AodhEvaluator",
            "OS::TripleO::Services::AodhListener",
            "OS::TripleO::Services::AodhNotifier",
            "OS::TripleO::Services::AuditD",
            "OS::TripleO::Services::BarbicanApi",
            "OS::TripleO::Services::CACerts",
            "OS::TripleO::Services::CeilometerAgentCentral",
            "OS::TripleO::Services::CeilometerAgentNotification",
            "OS::TripleO::Services::CeilometerApi",
            "OS::TripleO::Services::CeilometerCollector",
            "OS::TripleO::Services::CeilometerExpirer",
            "OS::TripleO::Services::CephExternal",
            "OS::TripleO::Services::CephMds",
            "OS::TripleO::Services::CephMon",
            "OS::TripleO::Services::CephRbdMirror",
            "OS::TripleO::Services::CephRgw",
            "OS::TripleO::Services::CertmongerUser",
            "OS::TripleO::Services::CinderApi",
            "OS::TripleO::Services::CinderBackendDellPs",
            "OS::TripleO::Services::CinderBackendDellSc",
            "OS::TripleO::Services::CinderBackendDellEMCUnity",
            "OS::TripleO::Services::CinderBackendDellEMCVMAXISCSI",
            "OS::TripleO::Services::CinderBackendNetApp",
            "OS::TripleO::Services::CinderBackendScaleIO",
            "OS::TripleO::Services::CinderBackendVRTSHyperScale",
            "OS::TripleO::Services::CinderBackup",
            "OS::TripleO::Services::CinderHPELeftHandISCSI",
            "OS::TripleO::Services::CinderScheduler",
            "OS::TripleO::Services::CinderVolume",
            "OS::TripleO::Services::Clustercheck",
            "OS::TripleO::Services::Collectd",
            "OS::TripleO::Services::Congress",
            "OS::TripleO::Services::Docker",
            "OS::TripleO::Services::Ec2Api",
            "OS::TripleO::Services::Etcd",
            "OS::TripleO::Services::ExternalSwiftProxy",
            "OS::TripleO::Services::FluentdClient",
            "OS::TripleO::Services::GlanceApi",
            "OS::TripleO::Services::GnocchiApi",
            "OS::TripleO::Services::GnocchiMetricd",
            "OS::TripleO::Services::GnocchiStatsd",
            "OS::TripleO::Services::HAproxy",
            "OS::TripleO::Services::HeatApi",
            "OS::TripleO::Services::HeatApiCfn",
            "OS::TripleO::Services::HeatApiCloudwatch",
            "OS::TripleO::Services::HeatEngine",
            "OS::TripleO::Services::Horizon",
            "OS::TripleO::Services::IronicApi",
            "OS::TripleO::Services::IronicConductor",
            "OS::TripleO::Services::Iscsid",
            "OS::TripleO::Services::Keepalived",
            "OS::TripleO::Services::Kernel",
            "OS::TripleO::Services::Keystone",
            "OS::TripleO::Services::ManilaApi",
            "OS::TripleO::Services::ManilaBackendCephFs",
            "OS::TripleO::Services::ManilaBackendGeneric",
            "OS::TripleO::Services::ManilaBackendIsilon",
            "OS::TripleO::Services::ManilaBackendNetapp",
            "OS::TripleO::Services::ManilaBackendUnity",
            "OS::TripleO::Services::ManilaBackendVNX",
            "OS::TripleO::Services::ManilaBackendVMAX",
            "OS::TripleO::Services::ManilaScheduler",
            "OS::TripleO::Services::ManilaShare",
            "OS::TripleO::Services::Memcached",
            "OS::TripleO::Services::MongoDb",
            "OS::TripleO::Services::MySQL",
            "OS::TripleO::Services::MySQLClient",
            "OS::TripleO::Services::NeutronApi",
            "OS::TripleO::Services::NeutronBgpVpnApi",
            "OS::TripleO::Services::NeutronCorePlugin",
            "OS::TripleO::Services::NeutronDhcpAgent",
            "OS::TripleO::Services::NeutronL2gwAgent",
            "OS::TripleO::Services::NeutronL2gwApi",
            "OS::TripleO::Services::NeutronL3Agent",
            "OS::TripleO::Services::NeutronLbaasv2Agent",
            "OS::TripleO::Services::NeutronLinuxbridgeAgent",
            "OS::TripleO::Services::NeutronMetadataAgent",
            "OS::TripleO::Services::NeutronML2FujitsuCfab",
            "OS::TripleO::Services::NeutronML2FujitsuFossw",
            "OS::TripleO::Services::NeutronOvsAgent",
            "OS::TripleO::Services::NeutronVppAgent",
            "OS::TripleO::Services::NovaApi",
            "OS::TripleO::Services::NovaConductor",
            "OS::TripleO::Services::NovaConsoleauth",
            "OS::TripleO::Services::NovaIronic",
            "OS::TripleO::Services::NovaMetadata",
            "OS::TripleO::Services::NovaPlacement",
            "OS::TripleO::Services::NovaScheduler",
            "OS::TripleO::Services::NovaVncProxy",
            "OS::TripleO::Services::Ntp",
            "OS::TripleO::Services::ContainersLogrotateCrond",
            "OS::TripleO::Services::OctaviaApi",
            "OS::TripleO::Services::OctaviaHealthManager",
            "OS::TripleO::Services::OctaviaHousekeeping",
            "OS::TripleO::Services::OctaviaWorker",
            "OS::TripleO::Services::OpenDaylightApi",
            "OS::TripleO::Services::OpenDaylightOvs",
            "OS::TripleO::Services::OVNDBs",
            "OS::TripleO::Services::OVNController",
            "OS::TripleO::Services::Pacemaker",
            "OS::TripleO::Services::PankoApi",
            "OS::TripleO::Services::RabbitMQ",
            "OS::TripleO::Services::Redis",
            "OS::TripleO::Services::SaharaApi",
            "OS::TripleO::Services::SaharaEngine",
            "OS::TripleO::Services::Securetty",
            "OS::TripleO::Services::SensuClient",
            "OS::TripleO::Services::Snmp",
            "OS::TripleO::Services::Sshd",
            "OS::TripleO::Services::SwiftProxy",
            "OS::TripleO::Services::SwiftRingBuilder",
            "OS::TripleO::Services::SwiftStorage",
            "OS::TripleO::Services::Tacker",
            "OS::TripleO::Services::Timezone",
            "OS::TripleO::Services::TripleoFirewall",
            "OS::TripleO::Services::TripleoPackages",
            "OS::TripleO::Services::Tuned",
            "OS::TripleO::Services::Vpp",
            "OS::TripleO::Services::Zaqar"
          ],
          "description": "A list of service resources (configured in the Heat resource_registry) which represent nested stacks for each service that should get installed on the Controller role."
        },
        "StorageMgmtNetAdminStateUp": {
          "name": "StorageMgmtNetAdminStateUp",
          "type": "Boolean",
          "noEcho": "false",
          "label": "StorageMgmtNetAdminStateUp",
          "default": false,
          "description": "The admin state of the network."
        },
        "UpgradeInitCommand": {
          "name": "UpgradeInitCommand",
          "type": "String",
          "noEcho": "false",
          "label": "UpgradeInitCommand",
          "default": "",
          "description": "Command or script snippet to run on all overcloud nodes to\ninitialize the upgrade process. E.g. a repository switch.\n"
        },
        "KeystoneWorkers": {
          "name": "KeystoneWorkers",
          "type": "String",
          "noEcho": "false",
          "label": "KeystoneWorkers",
          "default": "%{::os_workers}",
          "description": "Set the number of workers for keystone::wsgi::apache"
        },
        "HorizonPasswordValidatorHelp": {
          "name": "HorizonPasswordValidatorHelp",
          "type": "String",
          "noEcho": "false",
          "label": "HorizonPasswordValidatorHelp",
          "default": "",
          "description": "Help text for password validation"
        },
        "deployment_actions": {
          "name": "deployment_actions",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "deployment_actions",
          "default": [
            "CREATE",
            "UPDATE"
          ],
          "description": "List of stack actions that will trigger any deployments in this templates. The actions will be an empty list of the server is in the toplevel DeploymentServerBlacklist parameter's value.\n"
        },
        "UseTLSTransportForLiveMigration": {
          "name": "UseTLSTransportForLiveMigration",
          "type": "Boolean",
          "noEcho": "false",
          "label": "UseTLSTransportForLiveMigration",
          "default": true,
          "description": "If set to true and if EnableInternalTLS is enabled, it will set the libvirt URI's transport to tls and configure the relevant keys for libvirt."
        },
        "CinderEnableDBPurge": {
          "name": "CinderEnableDBPurge",
          "type": "Boolean",
          "noEcho": "false",
          "label": "CinderEnableDBPurge",
          "default": true,
          "description": "Whether to create cron job for purging soft deleted rows in Cinder database.\n"
        },
        "TunedProfileName": {
          "name": "TunedProfileName",
          "type": "String",
          "noEcho": "false",
          "label": "TunedProfileName",
          "default": "",
          "description": "Tuned Profile to apply to the host"
        },
        "NeutronDpdkSocketMemory": {
          "name": "NeutronDpdkSocketMemory",
          "type": "String",
          "noEcho": "false",
          "label": "NeutronDpdkSocketMemory",
          "default": "",
          "description": "Memory allocated for each socket"
        },
        "ExternalInterfaceDefaultRoute": {
          "name": "ExternalInterfaceDefaultRoute",
          "type": "String",
          "noEcho": "false",
          "label": "ExternalInterfaceDefaultRoute",
          "default": "10.9.88.254",
          "description": "The default route of the external network."
        },
        "OvercloudControllerFlavor": {
          "name": "OvercloudControllerFlavor",
          "type": "String",
          "noEcho": "false",
          "customConstraint": "nova.flavor",
          "label": "OvercloudControllerFlavor",
          "default": "control",
          "description": "Flavor for the Controller node."
        },
        "ManagementIpUri": {
          "name": "ManagementIpUri",
          "type": "String",
          "noEcho": "false",
          "label": "ManagementIpUri",
          "default": "",
          "description": "IP address with brackets in case of IPv6"
        },
        "ManagementNetworkVlanID": {
          "name": "ManagementNetworkVlanID",
          "type": "Number",
          "noEcho": "false",
          "label": "ManagementNetworkVlanID",
          "default": 60,
          "description": "Vlan ID for the management network traffic."
        },
        "StorageIpSubnet": {
          "name": "StorageIpSubnet",
          "type": "String",
          "noEcho": "false",
          "label": "StorageIpSubnet",
          "default": "",
          "description": "IP address/subnet on the storage network"
        },
        "MonitoringSubscriptionNeutronMetadata": {
          "name": "MonitoringSubscriptionNeutronMetadata",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionNeutronMetadata",
          "default": "overcloud-neutron-metadata",
          "description": ""
        },
        "GlanceNotifierStrategy": {
          "name": "GlanceNotifierStrategy",
          "type": "String",
          "noEcho": "false",
          "label": "GlanceNotifierStrategy",
          "default": "noop",
          "description": "Strategy to use for Glance notification queue"
        },
        "LoggingServers": {
          "name": "LoggingServers",
          "type": "Json",
          "noEcho": "false",
          "label": "LoggingServers",
          "default": [],
          "description": "A list of destinations to which fluentd will forward log messages.  Expects\na list of dictionaries of the form:\n\n    - host: loghost1.example.com\n      port: 24224\n    - host: loghost2.example.com\n      port: 24224\n"
        },
        "CinderCronDbPurgeUser": {
          "name": "CinderCronDbPurgeUser",
          "type": "String",
          "noEcho": "false",
          "label": "CinderCronDbPurgeUser",
          "default": "keystone",
          "description": "Cron to move deleted instances to another table - User\n"
        },
        "NeutronNetworkType": {
          "name": "NeutronNetworkType",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "NeutronNetworkType",
          "default": [
            "vlan"
          ],
          "description": "The tenant network type for Neutron."
        },
        "NodeCreateBatchSize": {
          "name": "NodeCreateBatchSize",
          "type": "Number",
          "noEcho": "false",
          "label": "NodeCreateBatchSize",
          "default": 30,
          "description": "Maxiumum batch size for creating nodes"
        },
        "NeutronControlPlaneID": {
          "name": "NeutronControlPlaneID",
          "type": "String",
          "noEcho": "false",
          "label": "NeutronControlPlaneID",
          "default": "ctlplane",
          "description": "Neutron ID or name for ctlplane network."
        },
        "ManageKeystoneFernetKeys": {
          "name": "ManageKeystoneFernetKeys",
          "type": "Boolean",
          "noEcho": "false",
          "label": "ManageKeystoneFernetKeys",
          "default": true,
          "description": "Whether TripleO should manage the keystone fernet keys or not. If set to true, the fernet keys will get the values from the saved keys repository in mistral (the KeystoneFernetKeys variable). If set to false, only the stack creation initializes the keys, but subsequent updates won't touch them."
        },
        "MonitoringSubscriptionAodhNotifier": {
          "name": "MonitoringSubscriptionAodhNotifier",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionAodhNotifier",
          "default": "overcloud-ceilometer-aodh-notifier",
          "description": ""
        },
        "DockerNovaConductorImage": {
          "name": "DockerNovaConductorImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerNovaConductorImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-nova-conductor-docker:20171004.1",
          "description": "image"
        },
        "MysqlIncreaseFileLimit": {
          "name": "MysqlIncreaseFileLimit",
          "type": "Boolean",
          "noEcho": "false",
          "label": "MysqlIncreaseFileLimit",
          "default": true,
          "description": "Flag to increase MySQL open-files-limit to 16384"
        },
        "StorageNetAdminStateUp": {
          "name": "StorageNetAdminStateUp",
          "type": "Boolean",
          "noEcho": "false",
          "label": "StorageNetAdminStateUp",
          "default": false,
          "description": "The admin state of the network."
        },
        "node_admin_extra_ssh_keys": {
          "name": "node_admin_extra_ssh_keys",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "node_admin_extra_ssh_keys",
          "default": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC+f0Er3AeHJAPYhGxTGHbzyhWWnJAxV2lrXJPimIGF5c9DxfShVFWwKhccgQWq/u+oZ1HJC18kdu4hKhss2VuzNZe0SQRqJvOzdIJIy64nUPpO1gIdhwByYhPEb6ZBzNhC7YZiiYUu2p/BXvYOlMM5FipaLLJaFzap48QLnsQ08LZiiVPf43q0pCttlhQ6/NZucs0w6n6CS2t7f1WTxDj5BUoMmaMwdE28VXO32Sb6qXOkmH/LR5TXNllf+CvhRg7hc+KaqfwBuNe8sGvQDoUSZMOLgbbEsACkI5l6Mg9vsDvmBG1OpNmh0suGatpZqFMGVcaXLrLwUJEjwhc4v7R7 Generated by TripleO",
          "description": ""
        },
        "MonitoringSubscriptionNovaConsoleauth": {
          "name": "MonitoringSubscriptionNovaConsoleauth",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionNovaConsoleauth",
          "default": "overcloud-nova-consoleauth",
          "description": ""
        },
        "InternalTLSCRLPEMFile": {
          "name": "InternalTLSCRLPEMFile",
          "type": "String",
          "noEcho": "false",
          "label": "InternalTLSCRLPEMFile",
          "default": "/etc/pki/CA/crl/overcloud-crl.pem",
          "description": "Specifies the default CRL PEM file to use for revocation if TLS is used for services in the internal network."
        },
        "PcsdPassword": {
          "name": "PcsdPassword",
          "type": "String",
          "noEcho": "true",
          "label": "PcsdPassword",
          "default": "",
          "description": "The password for the 'pcsd' user for pacemaker."
        },
        "EnabledServices": {
          "name": "EnabledServices",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "EnabledServices",
          "default": [],
          "description": ""
        },
        "role_data": {
          "description": "Mapping of Role name e.g Controller to the per-role data",
          "type": "Json",
          "noEcho": "false",
          "label": "role_data",
          "value": {
            "ComputeSriov": {},
            "Controller": {}
          },
          "name": "role_data"
        },
        "LoggingDefaultFilters": {
          "name": "LoggingDefaultFilters",
          "type": "Json",
          "noEcho": "false",
          "label": "LoggingDefaultFilters",
          "default": [
            {
              "type": "record_transformer",
              "record": {
                "host": "${hostname}"
              },
              "tag_pattern": "**"
            },
            {
              "type": "record_transformer",
              "record": {
                "component": "${tag_parts[1]}"
              },
              "tag_pattern": "openstack.**"
            }
          ],
          "description": "A list of fluentd default filters. This will be passed verbatim to the 'filter' key of a fluentd::config resource.  Only override this if you do not want the default set of filters; use LoggingExtraFilters if you just want to add additional servers.\n"
        },
        "MonitoringSubscriptionHeatApiCnf": {
          "name": "MonitoringSubscriptionHeatApiCnf",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionHeatApiCnf",
          "default": "overcloud-heat-api-cfn",
          "description": ""
        },
        "StorageMgmtNetShared": {
          "name": "StorageMgmtNetShared",
          "type": "Boolean",
          "noEcho": "false",
          "label": "StorageMgmtNetShared",
          "default": false,
          "description": "Whether this network is shared across all tenants."
        },
        "cloud_name_storage": {
          "description": "",
          "type": "String",
          "noEcho": "false",
          "label": "cloud_name_storage",
          "value": "overcloud.storage.localdomain",
          "name": "cloud_name_storage"
        },
        "SwiftPartPower": {
          "name": "SwiftPartPower",
          "type": "Number",
          "noEcho": "false",
          "label": "SwiftPartPower",
          "default": 10,
          "description": "Partition Power to use when building Swift rings"
        },
        "StorageSubnetName": {
          "name": "StorageSubnetName",
          "type": "String",
          "noEcho": "false",
          "label": "StorageSubnetName",
          "default": "storage_subnet",
          "description": "The name of the storage subnet in Neutron."
        },
        "servers": {
          "description": "Mapping of Role name e.g Controller to a list of servers",
          "type": "Json",
          "noEcho": "false",
          "label": "servers",
          "value": {
            "ComputeSriov": null,
            "Controller": null
          },
          "name": "servers"
        },
        "DeploymentSwiftDataMap": {
          "name": "DeploymentSwiftDataMap",
          "type": "Json",
          "noEcho": "false",
          "label": "DeploymentSwiftDataMap",
          "default": {},
          "description": "Map of servers to Swift container and object for storing deployment data.\nThe keys are the Heat assigned hostnames, and the value is a map of the\ncontainer/object name in Swift. Example value:\n  overcloud-controller-0:\n    container: overcloud-controller\n    object: 0\n  overcloud-controller-1:\n    container: overcloud-controller\n    object: 1\n  overcloud-controller-2:\n    container: overcloud-controller\n    object: 2\n  overcloud-novacompute-0:\n    container: overcloud-compute\n    object: 0\n"
        },
        "NovaConsoleauthLoggingSource": {
          "name": "NovaConsoleauthLoggingSource",
          "type": "Json",
          "noEcho": "false",
          "label": "NovaConsoleauthLoggingSource",
          "default": {
            "tag": "openstack.nova.consoleauth",
            "path": "/var/log/nova/nova-consoleauth.log"
          },
          "description": ""
        },
        "NeutronDpdkDriverType": {
          "name": "NeutronDpdkDriverType",
          "type": "String",
          "noEcho": "false",
          "label": "NeutronDpdkDriverType",
          "default": "vfio-pci",
          "description": "DPDK Driver type"
        },
        "CinderEnableIscsiBackend": {
          "name": "CinderEnableIscsiBackend",
          "type": "Boolean",
          "noEcho": "false",
          "label": "CinderEnableIscsiBackend",
          "default": true,
          "description": "Whether to enable or not the Iscsi backend for Cinder"
        },
        "ExternalIpList": {
          "name": "ExternalIpList",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "ExternalIpList",
          "default": [],
          "description": ""
        },
        "LoggingExtraGroups": {
          "name": "LoggingExtraGroups",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "LoggingExtraGroups",
          "default": [],
          "description": "Make fluentd user a member of these groups (in addition to LoggingDefaultGroups and the groups provided by individual composable services).\n"
        },
        "DockerNovaPlacementImage": {
          "name": "DockerNovaPlacementImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerNovaPlacementImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-nova-placement-api-docker:20171004.1",
          "description": "image"
        },
        "ManagementNetCidr": {
          "name": "ManagementNetCidr",
          "type": "String",
          "noEcho": "false",
          "label": "ManagementNetCidr",
          "default": "10.0.1.0/24",
          "description": "Cidr for the management network."
        },
        "SshServerOptions": {
          "name": "SshServerOptions",
          "type": "Json",
          "noEcho": "false",
          "label": "SshServerOptions",
          "default": {
            "ChallengeResponseAuthentication": "no",
            "X11Forwarding": "yes",
            "UsePrivilegeSeparation": "sandbox",
            "AcceptEnv": [
              "LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES",
              "LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT",
              "LC_IDENTIFICATION LC_ALL LANGUAGE",
              "XMODIFIERS"
            ],
            "Subsystem": "sftp  /usr/libexec/openssh/sftp-server",
            "UsePAM": "yes",
            "HostKey": [
              "/etc/ssh/ssh_host_rsa_key",
              "/etc/ssh/ssh_host_ecdsa_key",
              "/etc/ssh/ssh_host_ed25519_key"
            ],
            "GSSAPICleanupCredentials": "no",
            "SyslogFacility": "AUTHPRIV",
            "GSSAPIAuthentication": "yes",
            "PasswordAuthentication": "no",
            "AuthorizedKeysFile": ".ssh/authorized_keys"
          },
          "description": "Mapping of sshd_config values"
        },
        "ExternalNetEnableDHCP": {
          "name": "ExternalNetEnableDHCP",
          "type": "Boolean",
          "noEcho": "false",
          "label": "ExternalNetEnableDHCP",
          "default": false,
          "description": "Whether to enable DHCP on the associated subnet (IPv4 only)."
        },
        "StorageVirtualFixedIPs": {
          "name": "StorageVirtualFixedIPs",
          "type": "Json",
          "noEcho": "false",
          "label": "StorageVirtualFixedIPs",
          "default": [],
          "description": "Control the IP allocation for the StorageVirtualInterface port. E.g. [{'ip_address':'1.2.3.4'}]\n"
        },
        "StorageIpUri": {
          "name": "StorageIpUri",
          "type": "String",
          "noEcho": "false",
          "label": "StorageIpUri",
          "default": "",
          "description": "IP address with brackets in case of IPv6"
        },
        "DeployIdentifier": {
          "name": "DeployIdentifier",
          "type": "String",
          "noEcho": "false",
          "label": "DeployIdentifier",
          "default": 1510053775,
          "description": "Setting this to a unique value will re-run any deployment tasks which perform configuration on a Heat stack-update.\n"
        },
        "StorageMgmtIpSubnet": {
          "name": "StorageMgmtIpSubnet",
          "type": "String",
          "noEcho": "false",
          "label": "StorageMgmtIpSubnet",
          "default": "",
          "description": "IP address/subnet on the storage mgmt network"
        },
        "CloudNameStorageManagement": {
          "name": "CloudNameStorageManagement",
          "type": "String",
          "noEcho": "false",
          "label": "CloudNameStorageManagement",
          "default": "overcloud.storagemgmt.localdomain",
          "description": "The DNS name of this cloud's storage_mgmt endpoint. E.g. 'ci-overcloud.storagemgmt.tripleo.org'.\n"
        },
        "StackAction": {
          "name": "StackAction",
          "type": "String",
          "label": "StackAction",
          "noEcho": "false",
          "allowedValues": [
            "CREATE",
            "UPDATE"
          ],
          "default": "UPDATE",
          "description": "Heat action on performed top-level stack.  Note StackUpdateType is set to UPGRADE when a major-version upgrade is in progress.\n"
        },
        "HeatWorkers": {
          "name": "HeatWorkers",
          "type": "Number",
          "noEcho": "false",
          "label": "HeatWorkers",
          "default": 0,
          "description": "Number of workers for Heat service."
        },
        "SwiftReplicas": {
          "name": "SwiftReplicas",
          "type": "Number",
          "noEcho": "false",
          "label": "SwiftReplicas",
          "default": 3,
          "description": "How many replicas to use in the swift rings."
        },
        "GnocchiDebug": {
          "name": "GnocchiDebug",
          "type": "String",
          "noEcho": "false",
          "label": "GnocchiDebug",
          "default": "",
          "description": "Set to True to enable debugging Gnocchi services."
        },
        "CinderEnableRbdBackend": {
          "name": "CinderEnableRbdBackend",
          "type": "Boolean",
          "noEcho": "false",
          "label": "CinderEnableRbdBackend",
          "default": false,
          "description": "Whether to enable or not the Rbd backend for Cinder"
        },
        "DockerNovaMetadataImage": {
          "name": "DockerNovaMetadataImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerNovaMetadataImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-nova-api-docker:20171004.1",
          "description": "image"
        },
        "ManagementIpList": {
          "name": "ManagementIpList",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "ManagementIpList",
          "default": [],
          "description": ""
        },
        "GlancePassword": {
          "name": "GlancePassword",
          "type": "String",
          "noEcho": "true",
          "label": "GlancePassword",
          "default": "ab7UP8EbpGMyvq9rCAnrZT7ac",
          "description": "The password for the glance service and db account, used by the glance services."
        },
        "HostCpusList": {
          "name": "HostCpusList",
          "type": "String",
          "noEcho": "false",
          "allowedPattern": "[0-9,-]+",
          "label": "HostCpusList",
          "default": "0",
          "description": "List of cores to be used for host process"
        },
        "FixedIPs": {
          "name": "FixedIPs",
          "type": "Json",
          "noEcho": "false",
          "label": "FixedIPs",
          "value": "[]",
          "default": [],
          "description": "Control the IP allocation for the VIP port. E.g. [{'ip_address':'1.2.3.4'}]\n"
        },
        "NeutronNetworkVLANRanges": {
          "name": "NeutronNetworkVLANRanges",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "NeutronNetworkVLANRanges",
          "default": "datacentre:1:1000",
          "description": "The Neutron ML2 and OpenVSwitch vlan mapping range to support. See the Neutron documentation for permitted values. Defaults to permitting VLANs 1 to 1000 on the 'datacentre' physical network (See NeutronBridgeMappings).\n"
        },
        "KeystoneRegion": {
          "name": "KeystoneRegion",
          "type": "String",
          "noEcho": "false",
          "label": "KeystoneRegion",
          "default": "regionOne",
          "description": "Keystone region for endpoint"
        },
        "StorageNetEnableDHCP": {
          "name": "StorageNetEnableDHCP",
          "type": "Boolean",
          "noEcho": "false",
          "label": "StorageNetEnableDHCP",
          "default": false,
          "description": "Whether to enable DHCP on the associated subnet (IPv4 only)."
        },
        "short_service_bootstrap_node": {
          "label": "short_service_bootstrap_node",
          "name": "short_service_bootstrap_node",
          "description": "",
          "type": "Json",
          "noEcho": "false"
        },
        "DhcpAgentNotification": {
          "name": "DhcpAgentNotification",
          "type": "Boolean",
          "noEcho": "false",
          "label": "DhcpAgentNotification",
          "default": true,
          "description": "Whether or not to enable DHCP agent notifications."
        },
        "SwiftWorkers": {
          "name": "SwiftWorkers",
          "type": "String",
          "noEcho": "false",
          "label": "SwiftWorkers",
          "default": "auto",
          "description": "Number of workers for Swift service."
        },
        "MonitoringSubscriptionGnocchiMetricd": {
          "name": "MonitoringSubscriptionGnocchiMetricd",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionGnocchiMetricd",
          "default": "overcloud-gnocchi-metricd",
          "description": ""
        },
        "CloudEndpoints": {
          "name": "CloudEndpoints",
          "type": "Json",
          "noEcho": "false",
          "label": "CloudEndpoints",
          "value": {
            "internal_api": "overcloud.internalapi.localdomain",
            "external": "overcloud.localdomain",
            "storage": "overcloud.storage.localdomain",
            "ctlplane": "overcloud.ctlplane.localdomain",
            "storage_mgmt": "overcloud.storagemgmt.localdomain"
          },
          "default": {},
          "description": "A map containing the DNS names for the different endpoints (external, internal_api, etc.)"
        },
        "ControllerIPs": {
          "name": "ControllerIPs",
          "type": "Json",
          "noEcho": "false",
          "label": "ControllerIPs",
          "default": {},
          "description": ""
        },
        "AodhDebug": {
          "name": "AodhDebug",
          "type": "String",
          "noEcho": "false",
          "label": "AodhDebug",
          "default": "",
          "description": "Set to True to enable debugging Aodh services."
        },
        "MonitoringSubscriptionAodhApi": {
          "name": "MonitoringSubscriptionAodhApi",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionAodhApi",
          "default": "overcloud-ceilometer-aodh-api",
          "description": ""
        },
        "ExternalIpSubnet": {
          "name": "ExternalIpSubnet",
          "type": "String",
          "noEcho": "false",
          "label": "ExternalIpSubnet",
          "default": "",
          "description": "IP address/subnet on the external network"
        },
        "enabled_services": {
          "label": "enabled_services",
          "name": "enabled_services",
          "description": "",
          "type": "CommaDelimitedList",
          "noEcho": "false"
        },
        "SwiftRingBuild": {
          "name": "SwiftRingBuild",
          "type": "Boolean",
          "noEcho": "false",
          "label": "SwiftRingBuild",
          "default": true,
          "description": "Whether to manage Swift rings or not"
        },
        "MonitoringSubscriptionNovaVNCProxy": {
          "name": "MonitoringSubscriptionNovaVNCProxy",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionNovaVNCProxy",
          "default": "overcloud-nova-vncproxy",
          "description": ""
        },
        "DockerClustercheckConfigImage": {
          "name": "DockerClustercheckConfigImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerClustercheckConfigImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-mariadb-docker:20171004.1",
          "description": "The container image to use for the clustercheck config_volume"
        },
        "DockerRabbitmqImage": {
          "name": "DockerRabbitmqImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerRabbitmqImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-rabbitmq-docker:20171004.1",
          "description": "image"
        },
        "TenantNetShared": {
          "name": "TenantNetShared",
          "type": "Boolean",
          "noEcho": "false",
          "label": "TenantNetShared",
          "default": false,
          "description": "Whether this network is shared across all tenants."
        },
        "NeutronDpdkCoreList": {
          "name": "NeutronDpdkCoreList",
          "type": "String",
          "noEcho": "false",
          "allowedPattern": "[0-9,-]*",
          "label": "NeutronDpdkCoreList",
          "default": "",
          "description": "List of cores to be used for DPDK Poll Mode Driver"
        },
        "ComputeSriovExtraConfig": {
          "name": "ComputeSriovExtraConfig",
          "type": "Json",
          "noEcho": "false",
          "label": "ComputeSriovExtraConfig",
          "default": {},
          "description": "Role specific additional hiera configuration to inject into the cluster.\n"
        },
        "DockerPuppetDebug": {
          "name": "DockerPuppetDebug",
          "type": "String",
          "noEcho": "false",
          "label": "DockerPuppetDebug",
          "default": "",
          "description": "Set to True to enable debug logging with docker-puppet.py"
        },
        "CorosyncSettleTries": {
          "name": "CorosyncSettleTries",
          "type": "Number",
          "noEcho": "false",
          "label": "CorosyncSettleTries",
          "default": 360,
          "description": "Number of tries for cluster settling. This has the same default as the pacemaker puppet module. Override to a smaller value when in need to replace a controller node."
        },
        "UpgradeInitCommonCommand": {
          "name": "UpgradeInitCommonCommand",
          "type": "String",
          "noEcho": "false",
          "label": "UpgradeInitCommonCommand",
          "default": "",
          "description": "Common commands required by the upgrades process. This should not\nnormally be modified by the operator and is set and unset in the\nmajor-upgrade-composable-steps.yaml and major-upgrade-converge.yaml\nenvironment files.\n"
        },
        "MetricProcessingDelay": {
          "name": "MetricProcessingDelay",
          "type": "Number",
          "noEcho": "false",
          "label": "MetricProcessingDelay",
          "default": 30,
          "description": "Delay between processing metrics."
        },
        "KeystoneNotificationDriver": {
          "name": "KeystoneNotificationDriver",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "KeystoneNotificationDriver",
          "default": [
            "messaging"
          ],
          "description": "Comma-separated list of Oslo notification drivers used by Keystone"
        },
        "HeatAuthEncryptionKey": {
          "name": "HeatAuthEncryptionKey",
          "type": "String",
          "noEcho": "true",
          "label": "HeatAuthEncryptionKey",
          "default": "",
          "description": "Auth encryption key for heat-engine"
        },
        "KeystoneLoggingSource": {
          "name": "KeystoneLoggingSource",
          "type": "Json",
          "noEcho": "false",
          "label": "KeystoneLoggingSource",
          "default": {
            "tag": "openstack.keystone",
            "path": "/var/log/keystone/keystone.log"
          },
          "description": ""
        },
        "ServiceName": {
          "name": "ServiceName",
          "type": "String",
          "noEcho": "false",
          "label": "ServiceName",
          "value": "redis",
          "default": "",
          "description": "Name of the service to lookup"
        },
        "RabbitUserName": {
          "name": "RabbitUserName",
          "type": "String",
          "noEcho": "false",
          "label": "RabbitUserName",
          "default": "guest",
          "description": "The username for RabbitMQ"
        },
        "NovaCronArchiveDeleteRowsWeekday": {
          "name": "NovaCronArchiveDeleteRowsWeekday",
          "type": "String",
          "noEcho": "false",
          "label": "NovaCronArchiveDeleteRowsWeekday",
          "default": "*",
          "description": "Cron to move deleted instances to another table - Week Day\n"
        },
        "CephClientUserName": {
          "name": "CephClientUserName",
          "type": "String",
          "noEcho": "false",
          "label": "CephClientUserName",
          "default": "openstack",
          "description": ""
        },
        "AdminEmail": {
          "name": "AdminEmail",
          "type": "String",
          "noEcho": "true",
          "label": "AdminEmail",
          "default": "admin@example.com",
          "description": "The email for the keystone admin account."
        },
        "StorageMgmtIp": {
          "name": "StorageMgmtIp",
          "type": "String",
          "noEcho": "false",
          "label": "StorageMgmtIp",
          "default": "",
          "description": ""
        },
        "UpgradeLevelNovaCompute": {
          "name": "UpgradeLevelNovaCompute",
          "type": "String",
          "noEcho": "false",
          "label": "UpgradeLevelNovaCompute",
          "default": "",
          "description": "Nova Compute upgrade level"
        },
        "ComputeSriovServerMetadata": {
          "name": "ComputeSriovServerMetadata",
          "type": "Json",
          "noEcho": "false",
          "label": "ComputeSriovServerMetadata",
          "default": {},
          "description": "Extra properties or metadata passed to Nova for the created nodes in the overcloud. It's accessible via the Nova metadata API. This option is role-specific and is merged with the values given to the ServerMetadata parameter.\n"
        },
        "SwiftHashSuffix": {
          "name": "SwiftHashSuffix",
          "type": "String",
          "noEcho": "true",
          "label": "SwiftHashSuffix",
          "default": "q6Wcn4Ak9pT74KxbERGMnWdjb",
          "description": "A random string to be used as a salt when hashing to determine mappings in the ring."
        },
        "AdminPassword": {
          "name": "AdminPassword",
          "type": "String",
          "noEcho": "true",
          "label": "AdminPassword",
          "default": "trT329qYb9vVrQKwRwcDNgUfg",
          "description": "The password for the keystone admin account, used for monitoring, querying neutron etc."
        },
        "ManagementIpSubnet": {
          "name": "ManagementIpSubnet",
          "type": "String",
          "noEcho": "false",
          "label": "ManagementIpSubnet",
          "default": "",
          "description": "IP address/subnet on the management network"
        },
        "MonitoringSubscriptionCinderScheduler": {
          "name": "MonitoringSubscriptionCinderScheduler",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionCinderScheduler",
          "default": "overcloud-cinder-scheduler",
          "description": ""
        },
        "LibvirtEnabledPerfEvents": {
          "name": "LibvirtEnabledPerfEvents",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "LibvirtEnabledPerfEvents",
          "default": [],
          "description": "This is a performance event list which could be used as monitor. For example - ``enabled_perf_events = cmt, mbml, mbmt`` The supported events list can be found in https://libvirt.org/html/libvirt-libvirt-domain.html , which you may need to search key words ``VIR_PERF_PARAM_*``"
        },
        "CinderApiPolicies": {
          "name": "CinderApiPolicies",
          "type": "Json",
          "noEcho": "false",
          "label": "CinderApiPolicies",
          "default": {},
          "description": "A hash of policies to configure for Cinder API.\ne.g. { cinder-context_is_admin: { key: context_is_admin, value: 'role:admin' } }\n"
        },
        "GnocchiApiPolicies": {
          "name": "GnocchiApiPolicies",
          "type": "Json",
          "noEcho": "false",
          "label": "GnocchiApiPolicies",
          "default": {},
          "description": "A hash of policies to configure for Gnocchi API.\ne.g. { gnocchi-context_is_admin: { key: context_is_admin, value: 'role:admin' } }\n"
        },
        "ServiceNames": {
          "name": "ServiceNames",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "ServiceNames",
          "default": [],
          "description": ""
        },
        "KeystoneEnableDBPurge": {
          "name": "KeystoneEnableDBPurge",
          "type": "Boolean",
          "noEcho": "false",
          "label": "KeystoneEnableDBPurge",
          "default": true,
          "description": "Whether to create cron job for purging soft deleted rows in Keystone database.\n"
        },
        "HeatApiPolicies": {
          "name": "HeatApiPolicies",
          "type": "Json",
          "noEcho": "false",
          "label": "HeatApiPolicies",
          "default": {},
          "description": "A hash of policies to configure for Heat API.\ne.g. { heat-context_is_admin: { key: context_is_admin, value: 'role:admin' } }\n"
        },
        "CinderSchedulerLoggingSource": {
          "name": "CinderSchedulerLoggingSource",
          "type": "Json",
          "noEcho": "false",
          "label": "CinderSchedulerLoggingSource",
          "default": {
            "tag": "openstack.cinder.scheduler",
            "path": "/var/log/cinder/cinder-scheduler.log"
          },
          "description": ""
        },
        "KeystoneFernetKey1": {
          "name": "KeystoneFernetKey1",
          "type": "String",
          "noEcho": "false",
          "label": "KeystoneFernetKey1",
          "default": "1zVh0VMpOCc7PdINfdHwPmhBzt3oGZ6AqLauB6m8K6g=",
          "description": "(DEPRECATED) The second Keystone fernet key. Must be a valid key."
        },
        "ExternalNetName": {
          "name": "ExternalNetName",
          "type": "String",
          "noEcho": "false",
          "label": "ExternalNetName",
          "default": "external",
          "description": "The name of the external network."
        },
        "NeutronBridgeMappings": {
          "name": "NeutronBridgeMappings",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "NeutronBridgeMappings",
          "default": "datacentre:br-ex",
          "description": "The OVS logical->physical bridge mappings to use. See the Neutron documentation for details. Defaults to mapping br-ex - the external bridge on hosts - to a physical name 'datacentre' which can be used to create provider networks (and we use this for the default floating network) - if changing this either use different post-install network scripts or be sure to keep 'datacentre' as a mapping network name.\n"
        },
        "HeatDebug": {
          "name": "HeatDebug",
          "type": "String",
          "noEcho": "false",
          "label": "HeatDebug",
          "default": "",
          "description": "Set to True to enable debugging Heat services."
        },
        "StorageMgmtIpList": {
          "name": "StorageMgmtIpList",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "StorageMgmtIpList",
          "default": [],
          "description": ""
        },
        "ManagementNetAdminStateUp": {
          "name": "ManagementNetAdminStateUp",
          "type": "Boolean",
          "noEcho": "false",
          "label": "ManagementNetAdminStateUp",
          "default": false,
          "description": "The admin state of the network."
        },
        "NeighbourGcThreshold1": {
          "name": "NeighbourGcThreshold1",
          "type": "Number",
          "noEcho": "false",
          "label": "NeighbourGcThreshold1",
          "default": 1024,
          "description": "Configures sysctl net.ipv4.neigh.default.gc_thresh1 value. This is the minimum number of entries to keep in the ARP cache. The garbage collector will not run if there are fewer than this number of entries in the cache."
        },
        "DockerGnocchiConfigImage": {
          "name": "DockerGnocchiConfigImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerGnocchiConfigImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-gnocchi-api-docker:20171004.1",
          "description": "The container image to use for the gnocchi config_volume"
        },
        "MonitoringSubscriptionSwiftStorage": {
          "name": "MonitoringSubscriptionSwiftStorage",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionSwiftStorage",
          "default": "overcloud-swift-storage",
          "description": ""
        },
        "StorageMgmtNetworkVlanID": {
          "name": "StorageMgmtNetworkVlanID",
          "type": "Number",
          "noEcho": "false",
          "label": "StorageMgmtNetworkVlanID",
          "default": 133,
          "description": "Vlan ID for the storage mgmt network traffic."
        },
        "InternalTLSCAFile": {
          "name": "InternalTLSCAFile",
          "type": "String",
          "noEcho": "false",
          "label": "InternalTLSCAFile",
          "default": "/etc/ipa/ca.crt",
          "description": "Specifies the default CA cert to use if TLS is used for services in the internal network."
        },
        "ComputeSriovNetworkDeploymentActions": {
          "name": "ComputeSriovNetworkDeploymentActions",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "ComputeSriovNetworkDeploymentActions",
          "default": [],
          "description": "Heat action when to apply network configuration changes\n"
        },
        "StorageInterfaceDefaultRoute": {
          "name": "StorageInterfaceDefaultRoute",
          "type": "String",
          "noEcho": "false",
          "label": "StorageInterfaceDefaultRoute",
          "default": "",
          "description": "default route for the storage network"
        },
        "InternalApiNetworkVlanID": {
          "name": "InternalApiNetworkVlanID",
          "type": "Number",
          "noEcho": "false",
          "label": "InternalApiNetworkVlanID",
          "default": 131,
          "description": "Vlan ID for the internal_api network traffic."
        },
        "DockerClustercheckImage": {
          "name": "DockerClustercheckImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerClustercheckImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-mariadb-docker:20171004.1",
          "description": "image"
        },
        "HeatMaxJsonBodySize": {
          "name": "HeatMaxJsonBodySize",
          "type": "Number",
          "noEcho": "false",
          "label": "HeatMaxJsonBodySize",
          "default": 1048576,
          "description": "Maximum raw byte size of the Heat API JSON request body."
        },
        "CinderLVMLoopDeviceSize": {
          "name": "CinderLVMLoopDeviceSize",
          "type": "Number",
          "noEcho": "false",
          "label": "CinderLVMLoopDeviceSize",
          "default": 10280,
          "description": "The size of the loopback file used by the cinder LVM driver."
        },
        "LibvirtCACert": {
          "name": "LibvirtCACert",
          "type": "String",
          "noEcho": "false",
          "label": "LibvirtCACert",
          "default": "",
          "description": "This specifies the CA certificate to use for TLS in libvirt. This file will be symlinked to the default CA path in libvirt, which is /etc/pki/CA/cacert.pem. Note that due to limitations GNU TLS, which is the TLS backend for libvirt, the file must be less than 65K (so we can't use the system's CA bundle). This parameter should be used if the default (which comes from the InternalTLSCAFile parameter) is not desired. The current default reflects TripleO's default CA, which is FreeIPA. It will only be used if internal TLS is enabled."
        },
        "DockerMemcachedImage": {
          "name": "DockerMemcachedImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerMemcachedImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-memcached-docker:20171004.1",
          "description": "image"
        },
        "ServiceConfigSettings": {
          "name": "ServiceConfigSettings",
          "type": "Json",
          "noEcho": "false",
          "label": "ServiceConfigSettings",
          "default": {},
          "description": ""
        },
        "KernelDisableIPv6": {
          "name": "KernelDisableIPv6",
          "type": "Number",
          "noEcho": "false",
          "label": "KernelDisableIPv6",
          "default": 0,
          "description": "Configures sysctl net.ipv6.{default/all}.disable_ipv6 keys"
        },
        "MonitoringSubscriptionGnocchiStatsd": {
          "name": "MonitoringSubscriptionGnocchiStatsd",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionGnocchiStatsd",
          "default": "overcloud-gnocchi-statsd",
          "description": ""
        },
        "DockerHeatApiCfnConfigImage": {
          "name": "DockerHeatApiCfnConfigImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerHeatApiCfnConfigImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-heat-api-cfn-docker:20171004.1",
          "description": "The container image to use for the heat_api_cfn config_volume"
        },
        "DockerHeatConfigImage": {
          "name": "DockerHeatConfigImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerHeatConfigImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-heat-api-docker:20171004.1",
          "description": "The container image to use for the heat config_volume"
        },
        "ControlFixedIPs": {
          "name": "ControlFixedIPs",
          "type": "Json",
          "noEcho": "false",
          "label": "ControlFixedIPs",
          "default": [],
          "description": "Control the IP allocation for the ControlVirtualIP port. E.g. [{'ip_address':'1.2.3.4'}]\n"
        },
        "LoggingSharedKey": {
          "name": "LoggingSharedKey",
          "type": "String",
          "noEcho": "false",
          "label": "LoggingSharedKey",
          "default": "",
          "description": "Shared secret for fluentd secure-forward plugin.\n"
        },
        "known_hosts": {
          "label": "known_hosts",
          "name": "known_hosts",
          "description": "",
          "type": "String",
          "noEcho": "false"
        },
        "StorageAllocationPools": {
          "name": "StorageAllocationPools",
          "type": "Json",
          "noEcho": "false",
          "label": "StorageAllocationPools",
          "default": [
            {
              "end": "10.10.82.200",
              "start": "10.10.82.20"
            }
          ],
          "description": "Ip allocation pool range for the storage network."
        },
        "EnableGalera": {
          "name": "EnableGalera",
          "type": "Boolean",
          "noEcho": "false",
          "label": "EnableGalera",
          "default": true,
          "description": "Whether to use Galera instead of regular MariaDB."
        },
        "DockerHeatEngineImage": {
          "name": "DockerHeatEngineImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerHeatEngineImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-heat-engine-docker:20171004.1",
          "description": "image"
        },
        "CinderEnableNfsBackend": {
          "name": "CinderEnableNfsBackend",
          "type": "Boolean",
          "noEcho": "false",
          "label": "CinderEnableNfsBackend",
          "default": false,
          "description": "Whether to enable or not the NFS backend for Cinder"
        },
        "PortName": {
          "name": "PortName",
          "type": "String",
          "noEcho": "false",
          "label": "PortName",
          "value": "redis_virtual_ip",
          "default": "",
          "description": "Name of the port"
        },
        "NeutronEnableDVR": {
          "name": "NeutronEnableDVR",
          "type": "Boolean",
          "noEcho": "false",
          "label": "NeutronEnableDVR",
          "default": false,
          "description": "Enable Neutron DVR."
        },
        "KeystoneFernetKey0": {
          "name": "KeystoneFernetKey0",
          "type": "String",
          "noEcho": "false",
          "label": "KeystoneFernetKey0",
          "default": "HtpT6DD5LWOPdzmqFj3nvbpsVuGtng3pfbbo-r5YQIo=",
          "description": "(DEPRECATED) The first Keystone fernet key. Must be a valid key."
        },
        "PankoApiPolicies": {
          "name": "PankoApiPolicies",
          "type": "Json",
          "noEcho": "false",
          "label": "PankoApiPolicies",
          "default": {},
          "description": "A hash of policies to configure for Panko API.\ne.g. { panko-context_is_admin: { key: context_is_admin, value: 'role:admin' } }\n"
        },
        "LoggingPosFilePath": {
          "name": "LoggingPosFilePath",
          "type": "String",
          "noEcho": "false",
          "label": "LoggingPosFilePath",
          "default": "/var/cache/fluentd",
          "description": "Directory in which to place fluentd pos_file files (used to track file position for the 'tail' input type).\n"
        },
        "BannerText": {
          "name": "BannerText",
          "type": "String",
          "noEcho": "false",
          "label": "BannerText",
          "default": "",
          "description": "Configures Banner text in sshd_config"
        },
        "MonitoringSubscriptionGlanceApi": {
          "name": "MonitoringSubscriptionGlanceApi",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionGlanceApi",
          "default": "overcloud-glance-api",
          "description": ""
        },
        "KeystonePolicies": {
          "name": "KeystonePolicies",
          "type": "Json",
          "noEcho": "false",
          "label": "KeystonePolicies",
          "default": {},
          "description": "A hash of policies to configure for Keystone.\ne.g. { keystone-context_is_admin: { key: context_is_admin, value: 'role:admin' } }\n"
        },
        "DockerCeilometerComputeImage": {
          "name": "DockerCeilometerComputeImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerCeilometerComputeImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-ceilometer-compute-docker:20171004.1",
          "description": "image"
        },
        "RabbitClientPort": {
          "name": "RabbitClientPort",
          "type": "Number",
          "noEcho": "false",
          "label": "RabbitClientPort",
          "default": 5672,
          "description": "Set rabbit subscriber port, change this if using SSL"
        },
        "MonitoringSubscriptionHeatApiCloudwatch": {
          "name": "MonitoringSubscriptionHeatApiCloudwatch",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionHeatApiCloudwatch",
          "default": "overcloud-heat-api-cloudwatch",
          "description": ""
        },
        "ExternalAllocationPools": {
          "name": "ExternalAllocationPools",
          "type": "Json",
          "noEcho": "false",
          "label": "ExternalAllocationPools",
          "default": [
            {
              "end": "10.9.88.220",
              "start": "10.9.88.211"
            }
          ],
          "description": "Ip allocation pool range for the external network."
        },
        "ServerMetadata": {
          "name": "ServerMetadata",
          "type": "Json",
          "noEcho": "false",
          "label": "ServerMetadata",
          "default": {},
          "description": "Extra properties or metadata passed to Nova for the created nodes in the overcloud. It's accessible via the Nova metadata API.\n"
        },
        "DockerPankoApiImage": {
          "name": "DockerPankoApiImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerPankoApiImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-panko-api-docker:20171004.1",
          "description": "image"
        },
        "MonitoringSubscriptionNeutronServer": {
          "name": "MonitoringSubscriptionNeutronServer",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionNeutronServer",
          "default": "overcloud-neutron-server",
          "description": ""
        },
        "LoggingSSLKeyPassphrase": {
          "name": "LoggingSSLKeyPassphrase",
          "type": "String",
          "noEcho": "false",
          "label": "LoggingSSLKeyPassphrase",
          "default": "",
          "description": "Passphrase for LoggingSSLKey (used by in_secure_forward).\n"
        },
        "MysqlRootPassword": {
          "name": "MysqlRootPassword",
          "type": "String",
          "noEcho": "true",
          "label": "MysqlRootPassword",
          "default": "",
          "description": ""
        },
        "ControllerImage": {
          "name": "ControllerImage",
          "type": "String",
          "noEcho": "false",
          "customConstraint": "glance.image",
          "label": "ControllerImage",
          "default": "overcloud-full",
          "description": "The disk image file to use for the role."
        },
        "NeutronPhysicalDevMappings": {
          "name": "NeutronPhysicalDevMappings",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "NeutronPhysicalDevMappings",
          "default": "tenant:p1p1",
          "description": "List of <physical_network>:<physical device> All physical networks listed in network_vlan_ranges on the server should have mappings to appropriate interfaces on each agent. Example \"tenant0:ens2f0,tenant1:ens2f1\"\n"
        },
        "CinderPassword": {
          "name": "CinderPassword",
          "type": "String",
          "noEcho": "true",
          "label": "CinderPassword",
          "default": "NY3zWUbZEevWjVckAXUuW6YVJ",
          "description": "The password for the cinder service account, used by cinder-api."
        },
        "NeutronTypeDrivers": {
          "name": "NeutronTypeDrivers",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "NeutronTypeDrivers",
          "default": "vxlan,vlan,flat,gre",
          "description": "Comma-separated list of network type driver entrypoints to be loaded.\n"
        },
        "NodeIndex": {
          "name": "NodeIndex",
          "type": "Number",
          "noEcho": "false",
          "label": "NodeIndex",
          "default": 0,
          "description": ""
        },
        "ComputeSriovIPs": {
          "name": "ComputeSriovIPs",
          "type": "Json",
          "noEcho": "false",
          "label": "ComputeSriovIPs",
          "default": {},
          "description": ""
        },
        "GnocchiExternalProject": {
          "name": "GnocchiExternalProject",
          "type": "String",
          "noEcho": "false",
          "label": "GnocchiExternalProject",
          "default": "service",
          "description": "Project name of resources creator in Gnocchi."
        },
        "ServiceData": {
          "name": "ServiceData",
          "type": "Json",
          "noEcho": "false",
          "label": "ServiceData",
          "value": {
            "net_cidr_map": null
          },
          "default": {},
          "description": "Dictionary packing service data"
        },
        "ImageUpdatePolicy": {
          "name": "ImageUpdatePolicy",
          "type": "String",
          "noEcho": "false",
          "label": "ImageUpdatePolicy",
          "default": "REBUILD_PRESERVE_EPHEMERAL",
          "description": "What policy to use when reconstructing instances. REBUILD for rebuilds, REBUILD_PRESERVE_EPHEMERAL to preserve /mnt."
        },
        "KeystoneCronTokenFlushMonth": {
          "name": "KeystoneCronTokenFlushMonth",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "KeystoneCronTokenFlushMonth",
          "default": "*",
          "description": "Cron to purge expired tokens - Month\n"
        },
        "StorageMgmtIpUri": {
          "name": "StorageMgmtIpUri",
          "type": "String",
          "noEcho": "false",
          "label": "StorageMgmtIpUri",
          "default": "",
          "description": "IP address with brackets in case of IPv6"
        },
        "AdminToken": {
          "name": "AdminToken",
          "type": "String",
          "noEcho": "true",
          "label": "AdminToken",
          "default": "N6JZ9XRe4QybxDAgbPCppBxXK",
          "description": "The keystone auth secret and db password."
        },
        "NovaIPv6": {
          "name": "NovaIPv6",
          "type": "Boolean",
          "noEcho": "false",
          "label": "NovaIPv6",
          "default": false,
          "description": "Enable IPv6 features in Nova"
        },
        "DefaultHeatAuthEncryptionKey": {
          "label": "DefaultHeatAuthEncryptionKey",
          "name": "DefaultHeatAuthEncryptionKey",
          "description": "",
          "type": "String",
          "noEcho": "false"
        },
        "DockerNovaMigrationSshdPort": {
          "name": "DockerNovaMigrationSshdPort",
          "type": "Number",
          "noEcho": "false",
          "label": "DockerNovaMigrationSshdPort",
          "default": 2022,
          "description": "Port that dockerized nova migration target sshd service binds to."
        },
        "NeutronPhysicalBridge": {
          "name": "NeutronPhysicalBridge",
          "type": "String",
          "noEcho": "false",
          "label": "NeutronPhysicalBridge",
          "default": "br-ex",
          "description": "An OVS bridge to create for accessing external networks."
        },
        "NovaComputeLoggingSource": {
          "name": "NovaComputeLoggingSource",
          "type": "Json",
          "noEcho": "false",
          "label": "NovaComputeLoggingSource",
          "default": {
            "tag": "openstack.nova.compute",
            "path": "/var/log/nova/nova-compute.log"
          },
          "description": ""
        },
        "ServiceHostnameList": {
          "name": "ServiceHostnameList",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "ServiceHostnameList",
          "default": [],
          "description": ""
        },
        "LoggingGroups": {
          "name": "LoggingGroups",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "LoggingGroups",
          "default": [],
          "description": ""
        },
        "MigrationSshKey": {
          "name": "MigrationSshKey",
          "type": "Json",
          "noEcho": "false",
          "label": "MigrationSshKey",
          "default": {
            "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAyI/IA3EsnvaDAw4CrYegIE83OWEnJ+58sy+uaBMjXaef0PNJ\nLX1gR1qX4lRqz6H7sXhpE+9Z+Zdydb9SMnKx5KH2DnKjNJxt1bbM4uLu0f7tVrtk\nE6Nod6yY3OuaZ9APNcZ/XpLCvf3NH/MbJAQgIXgDjrhifpNDVAiFs4I0mZsSIAEi\n9eD3WoT+E32+kxyW4A8/N/1gT9A3koA2x5Zs8bWXRoSYljN2BAwPUWaKkTeNR75J\nX516WSmcz5lD7V0pfo0cpp9fk1UCcLJf4FF4TZL+HFNxM0AppkE12jCAVXNYLthS\ni8/nRlHyyssSw5Lx/pMhzeR0tIoKvi9lEeFwbwIDAQABAoIBAAVPQSVOLrc6oXdI\nPKvpZkTUtAqR1t6IwsZfocdhklMdZ+65MhvBMPZSoKi+QWGj0Sz+mhGMCZ7A8qfJ\nW9y4CpuZ6hCx2j4/Ue0RfNUY2ue2TwQ3y8t1TQO2DwnyNtE+wdhTm/Wd/wfWm0KY\nRgSrE0qvibCSkxD0xxiHbTq2XLwgQcgJ6IOzxh1fUsRrVIQK8UQa+Lwu5e0lN7WG\nVNePGq13p2Bbw1kwWP1FXbAQIIht5GdHRPsDAZS7Ay8hV0brvV8wNGj4qURQMFyq\nMMW+9BbisSB1QwQkCsV8h2xlaW0R0+BeIOflwkqMVagCVDYKkdDJEWUG4uDI5oL7\nV9ggdJECgYEA+w/t/1qaFcDjweegoujh+ZwbpJDhNfCYALeCcI09jyuqWNVSfH6n\nyYOGUpis7b/ZJ0fRamh2A50utnREv0KkhZ6cR3R3t5UewHiR76jBuFMDCFjcyCBY\nIC/PZ5ap6XKS/NOw4ljHcflOVXgd+2K3tWdYTJqTU0ySJJtk83RIRWkCgYEAzIGW\nOtRWGx+Kfd6IbHey+EwIIx00WP3Qp8UAFL2syZ9WOPsigzygKDShCkUSpSVo5jIk\nBEEUMd36BvHBDiUvhcj8QOG6upaQdXxl3r3fc5JGxe9gT3OLF9g55bw/Db2oACQd\n9GaT3ZLcVgFgxndRAMfKhTbREhwDN3QczXhfFBcCgYAjcmNS61LYAWzmwrJObf0B\nxgWtHXt+pyJ+72nuRDLN1QdvFWdZBnTgIb7ESKQZyT16q0wo7ujCp92hixbtvhYG\ne5drC0mf1OELobpREQ2Q3b+O3SUG6HIo0TdCU+ZXfIK+SZEu1AQM1ns13Ai3pn9z\nkEzKPATS/PuhSYNeUCuoCQKBgQDBnAl7Jp1iTkkSAwTLE8OW+HxXqgVuHtVUj9gU\nysFznGrHxVIWRuYlSjYP//a37KPUEzIv6ODSmSFlQ6kO2DuWgAH49vuOPI8E+0GC\nT+Xlh12DdK2MaooLiATAL6jOPHh5sbe+MwLYKXp53hIdssY4Y+2ikpP6fhS5gi7m\ng4gX/wKBgQCm5mL8SqGD0ifFKbwCTGK/FeCc89zlx40dzmKi5/prX/YYKUDjLCXe\n9GwYrlFaQjoB7fQ70VBKFw933zvBBE17Sfwn5643LF6B4WrWxjGazr4mUVOryk1Z\nLWKk4QS4hzX43+mtHcCybr+oY/+gPWduVPfHBJmOwSB9EvwDVq1FVg==\n-----END RSA PRIVATE KEY-----\n",
            "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDIj8gDcSye9oMDDgKth6AgTzc5YScn7nyzL65oEyNdp5/Q80ktfWBHWpfiVGrPofuxeGkT71n5l3J1v1IycrHkofYOcqM0nG3Vtszi4u7R/u1Wu2QTo2h3rJjc65pn0A81xn9eksK9/c0f8xskBCAheAOOuGJ+k0NUCIWzgjSZmxIgASL14PdahP4Tfb6THJbgDz83/WBP0DeSgDbHlmzxtZdGhJiWM3YEDA9RZoqRN41HvklfnXpZKZzPmUPtXSl+jRymn1+TVQJwsl/gUXhNkv4cU3EzQCmmQTXaMIBVc1gu2FKLz+dGUfLKyxLDkvH+kyHN5HS0igq+L2UR4XBv Generated by TripleO"
          },
          "description": "SSH key for migration. Expects a dictionary with keys 'public_key' and 'private_key'. Values should be identical to SSH public/private key files.\n"
        },
        "GnocchiArchivePolicy": {
          "name": "GnocchiArchivePolicy",
          "type": "String",
          "noEcho": "false",
          "label": "GnocchiArchivePolicy",
          "default": "low",
          "description": "archive policy to use with gnocchi backend"
        },
        "MessageOfTheDay": {
          "name": "MessageOfTheDay",
          "type": "String",
          "noEcho": "false",
          "label": "MessageOfTheDay",
          "default": "",
          "description": "Configures /etc/motd text"
        },
        "InternalApiNetShared": {
          "name": "InternalApiNetShared",
          "type": "Boolean",
          "noEcho": "false",
          "label": "InternalApiNetShared",
          "default": false,
          "description": "Whether this network is shared across all tenants."
        },
        "DefaultPcsdPassword": {
          "label": "DefaultPcsdPassword",
          "name": "DefaultPcsdPassword",
          "description": "",
          "type": "String",
          "noEcho": "false"
        },
        "InternalApiInterfaceDefaultRoute": {
          "name": "InternalApiInterfaceDefaultRoute",
          "type": "String",
          "noEcho": "false",
          "label": "InternalApiInterfaceDefaultRoute",
          "default": "",
          "description": "default route for the internal_api network"
        },
        "ExternalIp": {
          "name": "ExternalIp",
          "type": "String",
          "noEcho": "false",
          "label": "ExternalIp",
          "default": "",
          "description": ""
        },
        "MigrationSshPort": {
          "name": "MigrationSshPort",
          "type": "Number",
          "noEcho": "false",
          "label": "MigrationSshPort",
          "value": 2022,
          "default": 22,
          "description": "Target port for migration over ssh"
        },
        "TenantNetName": {
          "name": "TenantNetName",
          "type": "String",
          "noEcho": "false",
          "label": "TenantNetName",
          "default": "tenant",
          "description": "The name of the tenant network."
        },
        "LoggingSources": {
          "name": "LoggingSources",
          "type": "Json",
          "noEcho": "false",
          "label": "LoggingSources",
          "default": [],
          "description": ""
        },
        "service_ips": {
          "label": "service_ips",
          "name": "service_ips",
          "description": "",
          "type": "Json",
          "noEcho": "false"
        },
        "GnocchiIndexerBackend": {
          "name": "GnocchiIndexerBackend",
          "type": "String",
          "noEcho": "false",
          "label": "GnocchiIndexerBackend",
          "default": "mysql",
          "description": "The short name of the Gnocchi indexer backend to use."
        },
        "TenantInterfaceDefaultRoute": {
          "name": "TenantInterfaceDefaultRoute",
          "type": "String",
          "noEcho": "false",
          "label": "TenantInterfaceDefaultRoute",
          "default": "",
          "description": "default route for the tenant network"
        },
        "MonitoringSubscriptionGnocchiApi": {
          "name": "MonitoringSubscriptionGnocchiApi",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionGnocchiApi",
          "default": "overcloud-gnocchi-api",
          "description": ""
        },
        "NovaOVSBridge": {
          "name": "NovaOVSBridge",
          "type": "String",
          "noEcho": "false",
          "label": "NovaOVSBridge",
          "default": "br-int",
          "description": "Name of integration bridge used by Open vSwitch"
        },
        "TimeZone": {
          "name": "TimeZone",
          "type": "String",
          "noEcho": "false",
          "label": "TimeZone",
          "default": "UTC",
          "description": "The timezone to be set on the overcloud."
        },
        "GnocchiApiLoggingSource": {
          "name": "GnocchiApiLoggingSource",
          "type": "Json",
          "noEcho": "false",
          "label": "GnocchiApiLoggingSource",
          "default": {
            "tag": "openstack.gnocchi.api",
            "path": "/var/log/gnocchi/app.log"
          },
          "description": ""
        },
        "InternalApiNetName": {
          "name": "InternalApiNetName",
          "type": "String",
          "noEcho": "false",
          "label": "InternalApiNetName",
          "default": "internal_api",
          "description": "The name of the internal_api network."
        },
        "NovaEnableDBPurge": {
          "name": "NovaEnableDBPurge",
          "type": "Boolean",
          "noEcho": "false",
          "label": "NovaEnableDBPurge",
          "default": true,
          "description": "Whether to create cron job for purging soft deleted rows in Nova database.\n"
        },
        "EC2MetadataIp": {
          "name": "EC2MetadataIp",
          "type": "String",
          "noEcho": "false",
          "label": "EC2MetadataIp",
          "default": "172.18.0.1",
          "description": "The IP address of the EC2 metadata server."
        },
        "service_node_names": {
          "label": "service_node_names",
          "name": "service_node_names",
          "description": "",
          "type": "Json",
          "noEcho": "false"
        },
        "PacemakerRemoteAuthkey": {
          "name": "PacemakerRemoteAuthkey",
          "type": "String",
          "noEcho": "true",
          "label": "PacemakerRemoteAuthkey",
          "default": "mVpQ8QBjJArMXVHvqRBYXPGqEW7fdpuJuEeeaTcWTwwnhRd7zXJhcswKp32peehXBa7MW67xyKyAZt8QCEThajF6UbzCbwUefFE2UKdt7dax4cesrznEyjvskR4AWWBFYWxjJFXAEb3X4U79gDfQTx44XUrYYNbytgtFptBfGeA8svtxXHskPwsQgCeHMNwrTRjUjnQFru9WuCPzfVU2Wqau4x9GB6nf96CWAmrgPJMDFre34CwpjjWYP2JwaUCCmRRCw8WUyYbVAYvBNaDpgU3PafZ3bBTKWQqsMwyBMpUrxHBzs2Y7VrMMbNTudtHaYwt4kUHCXkAZn8GQmbcYnm6fdCYBsDjBGqH9k8AcNE8MkK8GqDVjDZye97Dvr29cKxzEWkvBHqcK2vHja4gGDKpjvR7kEF4eQbMkvNYM3edrrZJsaqHAGtFwjYh6PuA9hy7Epfx38MtjqNGTbzbTKZPDwd4MyuHmPBngBbAtHMjw9kVu9WechugZcnfk94JHbwy6BuAHRrBV6wPWhpb2nUyUXZtEc9ezG6WbguGZFqsBHshBvZXGJuemUFcg94GuqAvJy6F7AYVAuYwWNJhYhNwtrtehrXqAqxXVYmwxwndFCmAKTQTgWgnQUpb6zncanUXrjZvE68BtFH7f6KJTZU8g37yCarjt7zHM6MtTAqBDFeWRgRbeDUdsV87QhssADJhGbMF3hHCJBsqqrtXabAzmkCBfTx8dVaXXErjeF3v8hWWzxvCBZrxetsxXf3hEsHHjUNfhDwf6FZmvh8uekDvWwYxeCPry7UJhezPwPVX8FAgJamJ39TtG8tJPKYGNRA3jquWR7tqmuTk3dzYt9nWYWps8m7f83dFcA4T3HgDTumaP46xnnUJFKbyH8duvnVyjGDYr9HXJ8BcKFP66EDvGQnK2PGweKM2WEcsKH2xMrDG3PZEXYekkB2sceXG7yRjNDX2X6kBTP29dJCjajmmamRZaDVqYCd4DdfJKqHw4QfKabRHNHDMJyGKH9nTBc6s4GGfpWFtAcTQtwzAV2sdHxwVQkKMHYbRqwbT8HgDXM2DdxkwYQQ87en2BswdNgrakWG7rKfcQCaZCF3aRbUBdgnTJUvnBQCzuBfydwgdXXYzVmZGbnPja74q68BMBdxqnDyWaNktEx3UyD2AZ4tPAzV6mAPUj3ByJTQyfbzWhEYeHczGZ8jHm6abtFHHEGrg6FpHGQNwwKg74DuDDj8TmM47bwM89tKHndZxtnDvBqJCfRhJFrFeaUqBpJyVcsTwm9trHHX4qE2FqAAKNAJsZJXwhC2YT4gge2bh6gt4hRYmTynWHCWtJ7JfmHHH6YCEjCmQyBreXJGFjvdQ94PG8JGYNRCnmUstfZusqE37kecqUuuCHd8yZF2E4qw7cABYx9aRmPwjUqFq9sKQ9tDG3aNkC2h6uMzq649YPWAnNj49xQYxUmmRwWEh7yFvMBmRNfmvKPZhZRbRk4CAmvTw8k4NU6t7bKT66TYRz3qVHaHvF3J7xdcwEn29b62JjtQKDbDACtBhxwKNnveymu9ZfeC86xNwQxnefCf4Qu6sHnczKMCCebvdamm7WMRub683DwRD2ukpeYgH9dYEarVJp6tKxamjpVqVaTgpcbaJGDaz9cnqZCgKaGxz8xktJEWtyTjRkeU3zCGmjV4sNh2r8dGHg6Wsm8kzRWAFMgx2MshhkdKqTgpPCcpKdWZJnT2zEATe32n2VqMmK8mxeb8TV9xXekTVV8FZaxMdYQtkCG2m9zYdcqJhRgchbZayKuE8pKVGq6teq78DdtVHK23kBcJATPg6Jq7x4Af34KatEKgpzmJs9jNEkFWaHznwCPPPFyFPgxQjcrBD7d8VmVZX473pFU8rwGZssHzGCuKGmC2z6kvkwQKaV9FYGVFf8AQAEsZADhMq3TKdEAWvXvZrbgxaYQWtBbbkrRwGRxENvWDmhDpbnfTxrJ2EfWDRVuYaUDPurmUBpaRGNsKwjnazTjfGnwVBcm7c8vbxaQqnxQ2tg7CHhzCksUCvWsGsbwuBRZQ23cmHQTUu67hvwaJTHyx8MDr6ZsmtN6yKAxQayP4gQ3drus7bsHKcMj6jdm4XtUpgEbP7kh9eHzVCqhkZ9NJVKyz98GfdCfThGtQWEjDUPKwTebrmQuVRxGyKzEP66KWUeg8nyqtZYhzHsQTXy6AEK8PGEDPV3c8CUHUgcdBeRZ79vMF2wMHMwtxJ9GAntwMpcGbuMYK7YXsDBUgUYwnRj3KGm8VuAYzKJN6vJDtzad7gYXhFZHPHwdgcZy6A6EFRmFug8nTvavje8euffJt48Tsnv33XEfrmjE9vCq4q6Nr8QDpwRhDeTXTCPCFHpag4p3kx3mczqubtZqcPYHYwG6pvBesre7RJugWWMApHYQ7VcMaApZNp6pkWgc3K8WsgEcn4NGmBTXt7QEcvPZFqCWEhY3XssWsQ6QcQTWfVRvTjkgajnkCbtjRtNbjwGfpv7XZ8paQHjrYxkXUyXHRYj3rd3tvPZGtBsKAW8ytTmk2wMbCWKqHGGHfqzahPC73wdBWh28fUxqKYT6e6pjkVh7uYx3zG8b4gqQHWbgb2U7PMfvTaF3s9PJpBdZHegNkJMCMh6dTxU7FHTTvqMvPaR7FVeUH28G9MhCM66PGcvbydaQFsDQkFUmFHkEnfRrBnFdga4tMEhYkfjs4agTJ84nnJU8KEdYHdJ6k66nMkM7ZeZZayMcXAJuevyzvdfAebGjgawwgYEq7KDZh6xYUpyGvsZW4NFsYHD2C22d6dsWguC2MWtMxuGWCs4a6AZ2h4NVsRpFkr7rmhVqQYPYBVcUTzUHFGB3CGPUFJMpEZ9VEh4unNFqRZne7j2CUTCDPE4hBrFfZKxpbWPuWE8nfAnEZ38vjKUxpFbWYgzvDuRYECUsXH7K3gyhcRe9KwYAdCGMpRcaAtuz6ryyTd9CxceAxk68hERNXY7wQXQv9GAcwY79rhzFYwHb8cvnbc9zwDrqRQvcz7BkbVEupcphNHMECGADmNzHCXDWp3YTbEvDqpB7VhQ7v43sh97zEGjMxv4nuRXrhmExwEByBDb6c8xgXaRNVZAh2qBqpfA3MmXMzD8YcHZQVPj7BfGsjreKb9B4Egqk7gDXGRTrnwQVHYxA7RdKaVNa4v73TR67z2FnpanKXEXPMA2pTzpZxuYwjsJYfMErMUyTq7fEQKA2Z7p2CKdqaFZqbHBUsGMZ9Gfm3nW9Z8ZG3amk7qp8xNjZHgQy7Jq9CNMhzmYAHcUmvNKjVmfwtp4fpYy3uDdxmEaM9zFMh4WAQyVdaPK9tNeVZAq9XPwVDr2Ebz8jeyzQqhdYjddMurAGCHJFBjkkMf4wdBFBJD6CtqpeMTJRXv2rjpRrdzPvPuhYBdvGYKgxC6nBPEC6EgK63nvH9TNvHnAz888gycWXtseKhPnQYQn8WwwcsktKQJJwaT3RRmyfCFe86NhvFgwKH69z7Daa9Ufsr6Nr8ZcHBdXcKrs8qG6mpjnyN26GJMfnurUTrkwXCPkJJnJYqEQCeHFhcPzZCMGy9xsArtJbGnG6gd4K6DBKtaTWMMrACkVdjVnsxVWRrF7XGj7f4mZuzav4fm4f4vGPU6MWJyGPxxRY6V88JhtvsVkdwbqBy6CJkJCeQd2T8YK2uGAb78kqrhdKgAHBQW89shGe9hCxVjDBFfpe44W863nnVmdJEedaP78teenXFMfZAM3t639uk2xcWZtzQ7scQsn3xXMHNK2Nm4YJBFqMMyH6XDJwWBcxyCEwe23PWPduKBE7CnXhWFznKBaMXP8ABKnXVw62xX72YPKfGbjdgGsbvA98dUeCdxUkCqPPRnEgT7qst7rkdkkjMm3p3NzydAjhAZRYQyHXwyBWdK4bzfyGHrKH9FXEwHRCQX3zRcxatZQyZm2462NwTcVceaXMdZNYHVZmuY2JRRg6t76zmE7Mg69PxCePeFNAdzrcDZbj2bPadWtvB46DeTh87YJzfZgw7nxwEMuXr7K8QA9vnmRh7tQCZ3W6fbrgkTDAkBeywur3AykH2URs66Vqs8PCwJAchwC9rgUAFtc",
          "description": "The authkey for the pacemaker remote service."
        },
        "DeployArtifactURLs": {
          "name": "DeployArtifactURLs",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "DeployArtifactURLs",
          "default": [],
          "description": "A list of HTTP URLs containing deployment artifacts. Currently supports tarballs and RPM packages."
        },
        "SoftwareConfigTransport": {
          "name": "SoftwareConfigTransport",
          "type": "String",
          "label": "SoftwareConfigTransport",
          "noEcho": "false",
          "allowedValues": [
            "POLL_SERVER_CFN",
            "POLL_SERVER_HEAT",
            "POLL_TEMP_URL",
            "ZAQAR_MESSAGE"
          ],
          "default": "POLL_TEMP_URL",
          "description": "How the server should receive the metadata required for software configuration.\n"
        },
        "CinderCronDbPurgeWeekday": {
          "name": "CinderCronDbPurgeWeekday",
          "type": "String",
          "noEcho": "false",
          "label": "CinderCronDbPurgeWeekday",
          "default": "*",
          "description": "Cron to move deleted instances to another table - Week Day\n"
        },
        "RedisVirtualFixedIPs": {
          "name": "RedisVirtualFixedIPs",
          "type": "Json",
          "noEcho": "false",
          "label": "RedisVirtualFixedIPs",
          "default": [],
          "description": "Control the IP allocation for the virtual IP used by Redis. E.g. [{'ip_address':'1.2.3.4'}]\n"
        },
        "DefaultHorizonSecret": {
          "label": "DefaultHorizonSecret",
          "name": "DefaultHorizonSecret",
          "description": "",
          "type": "String",
          "noEcho": "false"
        },
        "NeutronL3AgentLoggingSource": {
          "name": "NeutronL3AgentLoggingSource",
          "type": "Json",
          "noEcho": "false",
          "label": "NeutronL3AgentLoggingSource",
          "default": {
            "tag": "openstack.neutron.agent.l3",
            "path": "/var/log/neutron/l3-agent.log"
          },
          "description": ""
        },
        "TenantSubnetName": {
          "name": "TenantSubnetName",
          "type": "String",
          "noEcho": "false",
          "label": "TenantSubnetName",
          "default": "tenant_subnet",
          "description": "The name of the tenant subnet in Neutron."
        },
        "TenantIpList": {
          "name": "TenantIpList",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "TenantIpList",
          "default": [],
          "description": ""
        },
        "OvercloudComputeSriovFlavor": {
          "name": "OvercloudComputeSriovFlavor",
          "type": "String",
          "noEcho": "false",
          "customConstraint": "nova.flavor",
          "label": "OvercloudComputeSriovFlavor",
          "default": "compute",
          "description": "Flavor for the ComputeSriov node."
        },
        "HAProxyInternalTLSCertsDirectory": {
          "name": "HAProxyInternalTLSCertsDirectory",
          "type": "String",
          "noEcho": "false",
          "label": "HAProxyInternalTLSCertsDirectory",
          "default": "/etc/pki/tls/certs/haproxy",
          "description": ""
        },
        "HeatEngineLoggingSource": {
          "name": "HeatEngineLoggingSource",
          "type": "Json",
          "noEcho": "false",
          "label": "HeatEngineLoggingSource",
          "default": {
            "tag": "openstack.heat.engine",
            "path": "/var/log/heat/heat-engine.log"
          },
          "description": ""
        },
        "DockerMemcachedConfigImage": {
          "name": "DockerMemcachedConfigImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerMemcachedConfigImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-memcached-docker:20171004.1",
          "description": "The container image to use for the memcached config_volume"
        },
        "StorageMgmtNetName": {
          "name": "StorageMgmtNetName",
          "type": "String",
          "noEcho": "false",
          "label": "StorageMgmtNetName",
          "default": "storage_mgmt",
          "description": "The name of the storage_mgmt network."
        },
        "NovaPassword": {
          "name": "NovaPassword",
          "type": "String",
          "noEcho": "true",
          "label": "NovaPassword",
          "default": "FP987JJeRM7mfnhzPMBEnDja4",
          "description": "The password for the nova service and db account"
        },
        "DockerAodhNotifierImage": {
          "name": "DockerAodhNotifierImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerAodhNotifierImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-aodh-notifier-docker:20171004.1",
          "description": "image"
        },
        "cloud_name_internal_api": {
          "description": "",
          "type": "String",
          "noEcho": "false",
          "label": "cloud_name_internal_api",
          "value": "overcloud.internalapi.localdomain",
          "name": "cloud_name_internal_api"
        },
        "InstanceDiscoveryMethod": {
          "name": "InstanceDiscoveryMethod",
          "type": "String",
          "label": "InstanceDiscoveryMethod",
          "noEcho": "false",
          "allowedValues": [
            "naive",
            "libvirt_metadata",
            "workload_partitioning"
          ],
          "default": "libvirt_metadata",
          "description": "Method used to discover instances running on compute node"
        },
        "RedisPassword": {
          "name": "RedisPassword",
          "type": "String",
          "noEcho": "true",
          "label": "RedisPassword",
          "default": "B6Ftv9TZRDygRu4gj8P2wRANs",
          "description": "The password for the redis service account."
        },
        "EnableConfigPurge": {
          "name": "EnableConfigPurge",
          "type": "Boolean",
          "noEcho": "false",
          "label": "EnableConfigPurge",
          "default": false,
          "description": "Remove configuration that is not generated by TripleO. Used to avoid configuration remnants after upgrades.\n"
        },
        "NovaPCIPassthrough": {
          "name": "NovaPCIPassthrough",
          "type": "Json",
          "noEcho": "false",
          "label": "NovaPCIPassthrough",
          "default": [
            {
              "physical_network": "tenant",
              "devname": "p1p1"
            }
          ],
          "description": "List of PCI Passthrough whitelist parameters. Example - NovaPCIPassthrough:\n  - vendor_id: \"8086\"\n    product_id: \"154c\"\n    address: \"0000:05:00.0\"\n    physical_network: \"datacentre\"\nFor different formats, refer to the nova.conf documentation for pci_passthrough_whitelist configuration\n"
        },
        "CinderISCSIProtocol": {
          "name": "CinderISCSIProtocol",
          "type": "String",
          "noEcho": "false",
          "label": "CinderISCSIProtocol",
          "default": "iscsi",
          "description": "Whether to use TCP ('iscsi') or iSER RDMA ('iser') for iSCSI"
        },
        "InternalApiIp": {
          "name": "InternalApiIp",
          "type": "String",
          "noEcho": "false",
          "label": "InternalApiIp",
          "default": "",
          "description": ""
        },
        "HorizonAllowedHosts": {
          "name": "HorizonAllowedHosts",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "HorizonAllowedHosts",
          "default": "*",
          "description": "A list of IP/Hostname for the server Horizon is running on. Used for header checks."
        },
        "DockerCrondImage": {
          "name": "DockerCrondImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerCrondImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-cron-docker:20171004.1",
          "description": "image"
        },
        "DockerHeatApiConfigImage": {
          "name": "DockerHeatApiConfigImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerHeatApiConfigImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-heat-api-docker:20171004.1",
          "description": "The container image to use for the heat_api config_volume"
        },
        "UpdateIdentifier": {
          "name": "UpdateIdentifier",
          "type": "String",
          "noEcho": "false",
          "label": "UpdateIdentifier",
          "default": "",
          "description": "Setting to a previously unused value during stack-update will trigger package update on all nodes\n"
        },
        "MonitoringSubscriptionNeutronDhcp": {
          "name": "MonitoringSubscriptionNeutronDhcp",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionNeutronDhcp",
          "default": "overcloud-neutron-dhcp",
          "description": ""
        },
        "StorageIp": {
          "name": "StorageIp",
          "type": "String",
          "noEcho": "false",
          "label": "StorageIp",
          "default": "",
          "description": ""
        },
        "DockerCeilometerNotificationImage": {
          "name": "DockerCeilometerNotificationImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerCeilometerNotificationImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-ceilometer-notification-docker:20171004.1",
          "description": "image"
        },
        "ConfigCommand": {
          "name": "ConfigCommand",
          "type": "String",
          "noEcho": "false",
          "label": "ConfigCommand",
          "default": "os-refresh-config --timeout 14400",
          "description": "Command which will be run whenever configuration data changes"
        },
        "NeutronDBSyncExtraParams": {
          "name": "NeutronDBSyncExtraParams",
          "type": "String",
          "noEcho": "false",
          "label": "NeutronDBSyncExtraParams",
          "default": "",
          "description": "String of extra command line parameters to append to the neutron-db-manage\nupgrade head command.\n"
        },
        "GlanceApiPolicies": {
          "name": "GlanceApiPolicies",
          "type": "Json",
          "noEcho": "false",
          "label": "GlanceApiPolicies",
          "default": {},
          "description": "A hash of policies to configure for Glance API.\ne.g. { glance-context_is_admin: { key: context_is_admin, value: 'role:admin' } }\n"
        },
        "GnocchiBackend": {
          "name": "GnocchiBackend",
          "type": "String",
          "label": "GnocchiBackend",
          "noEcho": "false",
          "allowedValues": [
            "swift",
            "file",
            "rbd"
          ],
          "default": "swift",
          "description": "The short name of the Gnocchi backend to use. Should be one of swift, rbd, or file"
        },
        "DockerAodhConfigImage": {
          "name": "DockerAodhConfigImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerAodhConfigImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-aodh-api-docker:20171004.1",
          "description": "The container image to use for the aodh config_volume"
        },
        "NovaCronArchiveDeleteRowsHour": {
          "name": "NovaCronArchiveDeleteRowsHour",
          "type": "String",
          "noEcho": "false",
          "label": "NovaCronArchiveDeleteRowsHour",
          "default": "0",
          "description": "Cron to move deleted instances to another table - Hour\n"
        },
        "NeutronFlatNetworks": {
          "name": "NeutronFlatNetworks",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "NeutronFlatNetworks",
          "default": "datacentre",
          "description": "If set, flat networks to configure in neutron plugins."
        },
        "NeutronExcludeDevices": {
          "name": "NeutronExcludeDevices",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "NeutronExcludeDevices",
          "default": "",
          "description": "List of <network_device>:<excluded_devices> mapping network_device to the agent's node-specific list of virtual functions that should not be used for virtual networking. excluded_devices is a semicolon separated list of virtual functions to exclude from network_device. The network_device in the mapping should appear in the physical_device_mappings list.\n"
        },
        "controllerImage": {
          "name": "controllerImage",
          "type": "String",
          "noEcho": "false",
          "label": "controllerImage",
          "default": "overcloud-full",
          "description": "DEPRECATED Use ControllerImage instead"
        },
        "NeutronTunnelIdRanges": {
          "name": "NeutronTunnelIdRanges",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "NeutronTunnelIdRanges",
          "default": [
            "1:4094"
          ],
          "description": "Comma-separated list of <tun_min>:<tun_max> tuples enumerating ranges\nof GRE tunnel IDs that are available for tenant network allocation\n"
        },
        "ExternalIpUri": {
          "name": "ExternalIpUri",
          "type": "String",
          "noEcho": "false",
          "label": "ExternalIpUri",
          "default": "",
          "description": "IP address with brackets in case of IPv6"
        },
        "CloudDomain": {
          "name": "CloudDomain",
          "type": "String",
          "noEcho": "false",
          "label": "CloudDomain",
          "default": "localdomain",
          "description": "The DNS domain used for the hosts. This must match the overcloud_domain_name configured on the undercloud.\n"
        },
        "ApacheServerLimit": {
          "name": "ApacheServerLimit",
          "type": "Number",
          "noEcho": "false",
          "label": "ApacheServerLimit",
          "default": 256,
          "description": "Maximum number of Apache processes."
        },
        "DockerHorizonImage": {
          "name": "DockerHorizonImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerHorizonImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-horizon-docker:20171004.1",
          "description": "image"
        },
        "DockerGnocchiApiImage": {
          "name": "DockerGnocchiApiImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerGnocchiApiImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-gnocchi-api-docker:20171004.1",
          "description": "image"
        },
        "ServiceNetMap": {
          "name": "ServiceNetMap",
          "type": "Json",
          "noEcho": "false",
          "label": "ServiceNetMap",
          "default": {},
          "description": "Mapping of service_name -> network name. Typically set via parameter_defaults in the resource registry."
        },
        "ServiceMetadataSettings": {
          "name": "ServiceMetadataSettings",
          "type": "Json",
          "noEcho": "false",
          "label": "ServiceMetadataSettings",
          "default": {},
          "description": ""
        },
        "SnmpdReadonlyUserName": {
          "name": "SnmpdReadonlyUserName",
          "type": "String",
          "noEcho": "false",
          "label": "SnmpdReadonlyUserName",
          "default": "ro_snmp_user",
          "description": "The user name for SNMPd with readonly rights running on all Overcloud nodes"
        },
        "node_admin_username": {
          "name": "node_admin_username",
          "type": "String",
          "noEcho": "false",
          "label": "node_admin_username",
          "default": "heat-admin",
          "description": ""
        },
        "GnocchiPassword": {
          "name": "GnocchiPassword",
          "type": "String",
          "noEcho": "true",
          "label": "GnocchiPassword",
          "default": "NEEg9f9kxVUXazshMPJNpTvB6",
          "description": "The password for the gnocchi service and db account."
        },
        "RoleParameters": {
          "name": "RoleParameters",
          "type": "Json",
          "noEcho": "false",
          "label": "RoleParameters",
          "value": {
            "KernelArgs": "default_hugepagesz=1GB hugepagesz=1G hugepages=32 iommu=pt intel_iommu=on",
            "NovaReservedHostMemory": 4096,
            "NovaVcpuPinSet": [
              "4,48,5,49,6,50,7,51"
            ],
            "TunedProfileName": "cpu-partitioning",
            "IsolCpusList": "4,48,5,49,6,50,7,51"
          },
          "default": {},
          "description": "Parameters specific to the role"
        },
        "TenantNetAdminStateUp": {
          "name": "TenantNetAdminStateUp",
          "type": "Boolean",
          "noEcho": "false",
          "label": "TenantNetAdminStateUp",
          "default": false,
          "description": "The admin state of the network."
        },
        "ExternalNetShared": {
          "name": "ExternalNetShared",
          "type": "Boolean",
          "noEcho": "false",
          "label": "ExternalNetShared",
          "default": false,
          "description": "Whether this network is shared across all tenants."
        },
        "CinderISCSIHelper": {
          "name": "CinderISCSIHelper",
          "type": "String",
          "noEcho": "false",
          "label": "CinderISCSIHelper",
          "default": "lioadm",
          "description": "The iSCSI helper to use with cinder."
        },
        "Services": {
          "name": "Services",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "Services",
          "value": "OS::TripleO::Services::AodhApi,OS::TripleO::Services::AodhEvaluator,OS::TripleO::Services::AodhListener,OS::TripleO::Services::AodhNotifier,OS::TripleO::Services::AuditD,OS::TripleO::Services::BarbicanApi,OS::TripleO::Services::CACerts,OS::TripleO::Services::CeilometerAgentCentral,OS::TripleO::Services::CeilometerAgentNotification,OS::TripleO::Services::CeilometerApi,OS::TripleO::Services::CeilometerCollector,OS::TripleO::Services::CeilometerExpirer,OS::TripleO::Services::CephExternal,OS::TripleO::Services::CephMds,OS::TripleO::Services::CephMon,OS::TripleO::Services::CephRbdMirror,OS::TripleO::Services::CephRgw,OS::TripleO::Services::CertmongerUser,OS::TripleO::Services::CinderApi,OS::TripleO::Services::CinderBackendDellPs,OS::TripleO::Services::CinderBackendDellSc,OS::TripleO::Services::CinderBackendDellEMCUnity,OS::TripleO::Services::CinderBackendDellEMCVMAXISCSI,OS::TripleO::Services::CinderBackendNetApp,OS::TripleO::Services::CinderBackendScaleIO,OS::TripleO::Services::CinderBackendVRTSHyperScale,OS::TripleO::Services::CinderBackup,OS::TripleO::Services::CinderHPELeftHandISCSI,OS::TripleO::Services::CinderScheduler,OS::TripleO::Services::CinderVolume,OS::TripleO::Services::Clustercheck,OS::TripleO::Services::Collectd,OS::TripleO::Services::Congress,OS::TripleO::Services::Docker,OS::TripleO::Services::Ec2Api,OS::TripleO::Services::Etcd,OS::TripleO::Services::ExternalSwiftProxy,OS::TripleO::Services::FluentdClient,OS::TripleO::Services::GlanceApi,OS::TripleO::Services::GnocchiApi,OS::TripleO::Services::GnocchiMetricd,OS::TripleO::Services::GnocchiStatsd,OS::TripleO::Services::HAproxy,OS::TripleO::Services::HeatApi,OS::TripleO::Services::HeatApiCfn,OS::TripleO::Services::HeatApiCloudwatch,OS::TripleO::Services::HeatEngine,OS::TripleO::Services::Horizon,OS::TripleO::Services::IronicApi,OS::TripleO::Services::IronicConductor,OS::TripleO::Services::Iscsid,OS::TripleO::Services::Keepalived,OS::TripleO::Services::Kernel,OS::TripleO::Services::Keystone,OS::TripleO::Services::ManilaApi,OS::TripleO::Services::ManilaBackendCephFs,OS::TripleO::Services::ManilaBackendGeneric,OS::TripleO::Services::ManilaBackendIsilon,OS::TripleO::Services::ManilaBackendNetapp,OS::TripleO::Services::ManilaBackendUnity,OS::TripleO::Services::ManilaBackendVNX,OS::TripleO::Services::ManilaBackendVMAX,OS::TripleO::Services::ManilaScheduler,OS::TripleO::Services::ManilaShare,OS::TripleO::Services::Memcached,OS::TripleO::Services::MongoDb,OS::TripleO::Services::MySQL,OS::TripleO::Services::MySQLClient,OS::TripleO::Services::NeutronApi,OS::TripleO::Services::NeutronBgpVpnApi,OS::TripleO::Services::NeutronCorePlugin,OS::TripleO::Services::NeutronDhcpAgent,OS::TripleO::Services::NeutronL2gwAgent,OS::TripleO::Services::NeutronL2gwApi,OS::TripleO::Services::NeutronL3Agent,OS::TripleO::Services::NeutronLbaasv2Agent,OS::TripleO::Services::NeutronLinuxbridgeAgent,OS::TripleO::Services::NeutronMetadataAgent,OS::TripleO::Services::NeutronML2FujitsuCfab,OS::TripleO::Services::NeutronML2FujitsuFossw,OS::TripleO::Services::NeutronOvsAgent,OS::TripleO::Services::NeutronVppAgent,OS::TripleO::Services::NovaApi,OS::TripleO::Services::NovaConductor,OS::TripleO::Services::NovaConsoleauth,OS::TripleO::Services::NovaIronic,OS::TripleO::Services::NovaMetadata,OS::TripleO::Services::NovaPlacement,OS::TripleO::Services::NovaScheduler,OS::TripleO::Services::NovaVncProxy,OS::TripleO::Services::Ntp,OS::TripleO::Services::ContainersLogrotateCrond,OS::TripleO::Services::OctaviaApi,OS::TripleO::Services::OctaviaHealthManager,OS::TripleO::Services::OctaviaHousekeeping,OS::TripleO::Services::OctaviaWorker,OS::TripleO::Services::OpenDaylightApi,OS::TripleO::Services::OpenDaylightOvs,OS::TripleO::Services::OVNDBs,OS::TripleO::Services::OVNController,OS::TripleO::Services::Pacemaker,OS::TripleO::Services::PankoApi,OS::TripleO::Services::RabbitMQ,OS::TripleO::Services::Redis,OS::TripleO::Services::SaharaApi,OS::TripleO::Services::SaharaEngine,OS::TripleO::Services::Securetty,OS::TripleO::Services::SensuClient,OS::TripleO::Services::Snmp,OS::TripleO::Services::Sshd,OS::TripleO::Services::SwiftProxy,OS::TripleO::Services::SwiftRingBuilder,OS::TripleO::Services::SwiftStorage,OS::TripleO::Services::Tacker,OS::TripleO::Services::Timezone,OS::TripleO::Services::TripleoFirewall,OS::TripleO::Services::TripleoPackages,OS::TripleO::Services::Tuned,OS::TripleO::Services::Vpp,OS::TripleO::Services::Zaqar",
          "default": [],
          "description": "List nested stack service templates.\n"
        },
        "NtpServer": {
          "name": "NtpServer",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "NtpServer",
          "default": [
            "pool.ntp.org"
          ],
          "description": "NTP servers list. Defaulted to pool.ntp.org in order to have a sane default for Pacemaker deployments when not configuring this parameter by default."
        },
        "EnableLoadBalancer": {
          "name": "EnableLoadBalancer",
          "type": "Boolean",
          "noEcho": "false",
          "label": "EnableLoadBalancer",
          "default": true,
          "description": "Whether to deploy a LoadBalancer, set to false when an external load balancer is used."
        },
        "DefaultMysqlRootPassword": {
          "label": "DefaultMysqlRootPassword",
          "name": "DefaultMysqlRootPassword",
          "description": "",
          "type": "String",
          "noEcho": "false"
        },
        "CeilometerWorkers": {
          "name": "CeilometerWorkers",
          "type": "Number",
          "noEcho": "false",
          "label": "CeilometerWorkers",
          "default": 0,
          "description": "Number of workers for Ceilometer service."
        },
        "NeutronApiPolicies": {
          "name": "NeutronApiPolicies",
          "type": "Json",
          "noEcho": "false",
          "label": "NeutronApiPolicies",
          "default": {},
          "description": "A hash of policies to configure for Neutron API.\ne.g. { neutron-context_is_admin: { key: context_is_admin, value: 'role:admin' } }\n"
        },
        "SwiftProxyNodeTimeout": {
          "name": "SwiftProxyNodeTimeout",
          "type": "Number",
          "noEcho": "false",
          "label": "SwiftProxyNodeTimeout",
          "default": 60,
          "description": "Timeout for requests going from swift-proxy to swift a/c/o services."
        },
        "CeilometerAgentCentralLoggingSource": {
          "name": "CeilometerAgentCentralLoggingSource",
          "type": "Json",
          "noEcho": "false",
          "label": "CeilometerAgentCentralLoggingSource",
          "default": {
            "tag": "openstack.ceilometer.agent.central",
            "path": "/var/log/ceilometer/central.log"
          },
          "description": ""
        },
        "CloudNameCtlplane": {
          "name": "CloudNameCtlplane",
          "type": "String",
          "noEcho": "false",
          "label": "CloudNameCtlplane",
          "default": "overcloud.ctlplane.localdomain",
          "description": "The DNS name of this cloud's provisioning network endpoint. E.g. 'ci-overcloud.ctlplane.tripleo.org'.\n"
        },
        "CertmongerCA": {
          "name": "CertmongerCA",
          "type": "String",
          "noEcho": "false",
          "label": "CertmongerCA",
          "default": "IPA",
          "description": ""
        },
        "NeutronL3AgentMode": {
          "name": "NeutronL3AgentMode",
          "type": "String",
          "label": "NeutronL3AgentMode",
          "noEcho": "false",
          "allowedValues": [
            "legacy",
            "dvr_snat"
          ],
          "default": "legacy",
          "description": "Agent mode for L3 agent. Must be one of legacy or dvr_snat.\n"
        },
        "NeutronPublicInterface": {
          "name": "NeutronPublicInterface",
          "type": "String",
          "noEcho": "false",
          "label": "NeutronPublicInterface",
          "default": "nic1",
          "description": "Which interface to add to the NeutronPhysicalBridge."
        },
        "DockerNovaComputeImage": {
          "name": "DockerNovaComputeImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerNovaComputeImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-nova-compute-docker:20171004.1",
          "description": "image"
        },
        "SwiftCeilometerPipelineEnabled": {
          "name": "SwiftCeilometerPipelineEnabled",
          "type": "Boolean",
          "noEcho": "false",
          "label": "SwiftCeilometerPipelineEnabled",
          "default": false,
          "description": "Set to False to disable the swift proxy ceilometer pipeline."
        },
        "GlanceNfsShare": {
          "name": "GlanceNfsShare",
          "type": "String",
          "noEcho": "false",
          "label": "GlanceNfsShare",
          "default": "",
          "description": "NFS share to mount for image storage (when GlanceNfsEnabled is true)\n"
        },
        "RabbitFDLimit": {
          "name": "RabbitFDLimit",
          "type": "String",
          "noEcho": "false",
          "label": "RabbitFDLimit",
          "default": 65536,
          "description": "Configures RabbitMQ FD limit"
        },
        "NovaApiPolicies": {
          "name": "NovaApiPolicies",
          "type": "Json",
          "noEcho": "false",
          "label": "NovaApiPolicies",
          "default": {},
          "description": "A hash of policies to configure for Nova API.\ne.g. { nova-context_is_admin: { key: context_is_admin, value: 'role:admin' } }\n"
        },
        "SwiftCeilometerIgnoreProjects": {
          "name": "SwiftCeilometerIgnoreProjects",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "SwiftCeilometerIgnoreProjects",
          "default": [
            "service"
          ],
          "description": "Comma-seperated list of project names to ignore."
        },
        "NovaVcpuPinSet": {
          "name": "NovaVcpuPinSet",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "NovaVcpuPinSet",
          "default": [],
          "description": "A list or range of physical CPU cores to reserve for virtual machine processes. Ex. NovaVcpuPinSet: ['4-12','^8'] will reserve cores from 4-12 excluding 8\n"
        },
        "HorizonSecret": {
          "name": "HorizonSecret",
          "type": "String",
          "noEcho": "true",
          "label": "HorizonSecret",
          "default": "",
          "description": "Secret key for Django"
        },
        "ExternalNetValueSpecs": {
          "name": "ExternalNetValueSpecs",
          "type": "Json",
          "noEcho": "false",
          "label": "ExternalNetValueSpecs",
          "default": {
            "provider:network_type": "flat",
            "provider:physical_network": "external"
          },
          "description": "Value specs for the external network."
        },
        "SwiftPassword": {
          "name": "SwiftPassword",
          "type": "String",
          "noEcho": "true",
          "label": "SwiftPassword",
          "default": "mh47W6JGJwMFDtp9u7423cE2N",
          "description": "The password for the swift service account"
        },
        "DockerCeilometerConfigImage": {
          "name": "DockerCeilometerConfigImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerCeilometerConfigImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-ceilometer-central-docker:20171004.1",
          "description": "The container image to use for the ceilometer config_volume"
        },
        "PankoDebug": {
          "name": "PankoDebug",
          "type": "String",
          "noEcho": "false",
          "label": "PankoDebug",
          "default": "",
          "description": "Set to True to enable debugging Panko services."
        },
        "NeutronOVSFirewallDriver": {
          "name": "NeutronOVSFirewallDriver",
          "type": "String",
          "noEcho": "false",
          "label": "NeutronOVSFirewallDriver",
          "default": "",
          "description": "Configure the classname of the firewall driver to use for implementing\nsecurity groups. Possible values depend on system configuration. Some\nexamples are: noop, openvswitch, iptables_hybrid. The default value of an\nempty string will result in a default supported configuration.\n"
        },
        "ComputeSriovParameters": {
          "name": "ComputeSriovParameters",
          "type": "Json",
          "noEcho": "false",
          "label": "ComputeSriovParameters",
          "default": {
            "KernelArgs": "default_hugepagesz=1GB hugepagesz=1G hugepages=32 iommu=pt intel_iommu=on",
            "NovaReservedHostMemory": 4096,
            "NovaVcpuPinSet": [
              "4,48,5,49,6,50,7,51"
            ],
            "TunedProfileName": "cpu-partitioning",
            "IsolCpusList": "4,48,5,49,6,50,7,51"
          },
          "description": "Optional Role Specific parameters to be provided to service"
        },
        "KeystoneCronTokenFlushDestination": {
          "name": "KeystoneCronTokenFlushDestination",
          "type": "String",
          "noEcho": "false",
          "label": "KeystoneCronTokenFlushDestination",
          "default": "/var/log/keystone/keystone-tokenflush.log",
          "description": "Cron to purge expired tokens - Log destination\n"
        },
        "LoggingExtraFilters": {
          "name": "LoggingExtraFilters",
          "type": "Json",
          "noEcho": "false",
          "label": "LoggingExtraFilters",
          "default": [],
          "description": "A list of additional fluentd filters. This will be passed verbatim to the 'filter' key of a fluentd::config resource.\n"
        },
        "InternalApiVirtualFixedIPs": {
          "name": "InternalApiVirtualFixedIPs",
          "type": "Json",
          "noEcho": "false",
          "label": "InternalApiVirtualFixedIPs",
          "default": [],
          "description": "Control the IP allocation for the InternalApiVirtualInterface port. E.g. [{'ip_address':'1.2.3.4'}]\n"
        },
        "SnmpdReadonlyUserPassword": {
          "name": "SnmpdReadonlyUserPassword",
          "type": "String",
          "noEcho": "true",
          "label": "SnmpdReadonlyUserPassword",
          "default": "f7a3e53600e44f4bb97efef237a2c9521f923dbd",
          "description": "The user password for SNMPd with readonly rights running on all Overcloud nodes"
        },
        "InstanceNameTemplate": {
          "name": "InstanceNameTemplate",
          "type": "String",
          "noEcho": "false",
          "label": "InstanceNameTemplate",
          "default": "instance-%08x",
          "description": "Template string to be used to generate instance names"
        },
        "DockerSwiftConfigImage": {
          "name": "DockerSwiftConfigImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerSwiftConfigImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-swift-proxy-server-docker:20171004.1",
          "description": "The container image to use for the swift config_volume"
        },
        "DefaultPasswords": {
          "name": "DefaultPasswords",
          "type": "Json",
          "noEcho": "false",
          "label": "DefaultPasswords",
          "default": {},
          "description": "Mapping of service -> default password. Used to help pass top level passwords managed by Heat into services."
        },
        "HeatStackDomainAdminPassword": {
          "name": "HeatStackDomainAdminPassword",
          "type": "String",
          "noEcho": "true",
          "label": "HeatStackDomainAdminPassword",
          "default": "fk8BGhCKqyrZHtzzhwcBpMWZA",
          "description": "Password for heat_stack_domain_admin user."
        },
        "short_service_node_names": {
          "label": "short_service_node_names",
          "name": "short_service_node_names",
          "description": "",
          "type": "Json",
          "noEcho": "false"
        },
        "KeystoneCronTokenFlushMinute": {
          "name": "KeystoneCronTokenFlushMinute",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "KeystoneCronTokenFlushMinute",
          "default": "1",
          "description": "Cron to purge expired tokens - Minute\n"
        },
        "MonitoringSubscriptionNeutronOvs": {
          "name": "MonitoringSubscriptionNeutronOvs",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionNeutronOvs",
          "default": "overcloud-neutron-ovs-agent",
          "description": ""
        },
        "DockerMysqlImage": {
          "name": "DockerMysqlImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerMysqlImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-mariadb-docker:20171004.1",
          "description": "image"
        },
        "NovaRbdPoolName": {
          "name": "NovaRbdPoolName",
          "type": "String",
          "noEcho": "false",
          "label": "NovaRbdPoolName",
          "default": "vms",
          "description": ""
        },
        "DockerNovaApiImage": {
          "name": "DockerNovaApiImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerNovaApiImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-nova-api-docker:20171004.1",
          "description": "image"
        },
        "AddVipsToEtcHosts": {
          "name": "AddVipsToEtcHosts",
          "type": "Boolean",
          "noEcho": "false",
          "label": "AddVipsToEtcHosts",
          "default": true,
          "description": "Set to true to append per network Vips to /etc/hosts on each node.\n"
        },
        "StorageMgmtNetValueSpecs": {
          "name": "StorageMgmtNetValueSpecs",
          "type": "Json",
          "noEcho": "false",
          "label": "StorageMgmtNetValueSpecs",
          "default": {
            "provider:network_type": "flat",
            "provider:physical_network": "storage_mgmt"
          },
          "description": "Value specs for the storage_mgmt network."
        },
        "HeatCronPurgeDeletedAgeType": {
          "name": "HeatCronPurgeDeletedAgeType",
          "type": "String",
          "noEcho": "false",
          "label": "HeatCronPurgeDeletedAgeType",
          "default": "days",
          "description": "Cron to purge db entries marked as deleted and older than $age - Age type\n"
        },
        "ControlPlaneNetwork": {
          "name": "ControlPlaneNetwork",
          "type": "String",
          "noEcho": "false",
          "label": "ControlPlaneNetwork",
          "value": "ctlplane",
          "default": "ctlplane",
          "description": "The name of the undercloud Neutron control plane"
        },
        "CinderCronDbPurgeMinute": {
          "name": "CinderCronDbPurgeMinute",
          "type": "String",
          "noEcho": "false",
          "label": "CinderCronDbPurgeMinute",
          "default": "1",
          "description": "Cron to move deleted instances to another table - Minute\n"
        },
        "RabbitIPv6": {
          "name": "RabbitIPv6",
          "type": "Boolean",
          "noEcho": "false",
          "label": "RabbitIPv6",
          "default": false,
          "description": "Enable IPv6 in RabbitMQ"
        },
        "NovaCronArchiveDeleteRowsUser": {
          "name": "NovaCronArchiveDeleteRowsUser",
          "type": "String",
          "noEcho": "false",
          "label": "NovaCronArchiveDeleteRowsUser",
          "default": "nova",
          "description": "Cron to move deleted instances to another table - User\n"
        },
        "MonitoringSubscriptionCinderApi": {
          "name": "MonitoringSubscriptionCinderApi",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionCinderApi",
          "default": "overcloud-cinder-api",
          "description": ""
        },
        "NovaComputeLibvirtVifDriver": {
          "name": "NovaComputeLibvirtVifDriver",
          "type": "String",
          "noEcho": "false",
          "label": "NovaComputeLibvirtVifDriver",
          "default": "",
          "description": "Libvirt VIF driver configuration for the network"
        },
        "DefaultRabbitCookie": {
          "label": "DefaultRabbitCookie",
          "name": "DefaultRabbitCookie",
          "description": "",
          "type": "String",
          "noEcho": "false"
        },
        "ComputeSriovServices": {
          "name": "ComputeSriovServices",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "ComputeSriovServices",
          "default": [
            "OS::TripleO::Services::AuditD",
            "OS::TripleO::Services::CACerts",
            "OS::TripleO::Services::CephClient",
            "OS::TripleO::Services::CephExternal",
            "OS::TripleO::Services::CertmongerUser",
            "OS::TripleO::Services::Collectd",
            "OS::TripleO::Services::ComputeCeilometerAgent",
            "OS::TripleO::Services::ComputeNeutronCorePlugin",
            "OS::TripleO::Services::ComputeNeutronL3Agent",
            "OS::TripleO::Services::ComputeNeutronMetadataAgent",
            "OS::TripleO::Services::ComputeNeutronOvsAgent",
            "OS::TripleO::Services::Docker",
            "OS::TripleO::Services::FluentdClient",
            "OS::TripleO::Services::Iscsid",
            "OS::TripleO::Services::Kernel",
            "OS::TripleO::Services::MySQLClient",
            "OS::TripleO::Services::NeutronSriovAgent",
            "OS::TripleO::Services::NeutronSriovHostConfig",
            "OS::TripleO::Services::NeutronVppAgent",
            "OS::TripleO::Services::NovaCompute",
            "OS::TripleO::Services::NovaLibvirt",
            "OS::TripleO::Services::Ntp",
            "OS::TripleO::Services::ContainersLogrotateCrond",
            "OS::TripleO::Services::OpenDaylightOvs",
            "OS::TripleO::Services::Securetty",
            "OS::TripleO::Services::SensuClient",
            "OS::TripleO::Services::Snmp",
            "OS::TripleO::Services::Sshd",
            "OS::TripleO::Services::Timezone",
            "OS::TripleO::Services::TripleoFirewall",
            "OS::TripleO::Services::TripleoPackages",
            "OS::TripleO::Services::Vpp",
            "OS::TripleO::Services::OVNController"
          ],
          "description": "A list of service resources (configured in the Heat resource_registry) which represent nested stacks for each service that should get installed on the ComputeSriov role."
        },
        "KeystoneCronTokenFlushEnsure": {
          "name": "KeystoneCronTokenFlushEnsure",
          "type": "String",
          "noEcho": "false",
          "label": "KeystoneCronTokenFlushEnsure",
          "default": "present",
          "description": "Cron to purge expired tokens - Ensure\n"
        },
        "TenantNetworkVlanID": {
          "name": "TenantNetworkVlanID",
          "type": "Number",
          "noEcho": "false",
          "label": "TenantNetworkVlanID",
          "default": 134,
          "description": "Vlan ID for the tenant network traffic."
        },
        "OvsDpdkCoreList": {
          "name": "OvsDpdkCoreList",
          "type": "String",
          "noEcho": "false",
          "allowedPattern": "[0-9,-]*",
          "label": "OvsDpdkCoreList",
          "default": "",
          "description": "List of cores to be used for DPDK lcore threads.  Note, these threads are used by the OVS control path for validator and handling functions.\n"
        },
        "DockerRedisConfigImage": {
          "name": "DockerRedisConfigImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerRedisConfigImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-redis-docker:20171004.1",
          "description": "The container image to use for the redis config_volume"
        },
        "LoggingDefaultGroups": {
          "name": "LoggingDefaultGroups",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "LoggingDefaultGroups",
          "default": [
            "root"
          ],
          "description": "Make fluentd user a member of these groups. Only override this parameter if you want to modify the default list of groups.  Use LoggingExtraGroups to add the fluentd user to additional groups.\n"
        },
        "DockerNovaSchedulerImage": {
          "name": "DockerNovaSchedulerImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerNovaSchedulerImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-nova-scheduler-docker:20171004.1",
          "description": "image"
        },
        "HeatCronPurgeDeletedWeekday": {
          "name": "HeatCronPurgeDeletedWeekday",
          "type": "String",
          "noEcho": "false",
          "label": "HeatCronPurgeDeletedWeekday",
          "default": "*",
          "description": "Cron to purge db entries marked as deleted and older than $age - Week Day\n"
        },
        "NeutronSriovNumVFs": {
          "name": "NeutronSriovNumVFs",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "NeutronSriovNumVFs",
          "default": "p1p1:5",
          "description": "Provide the list of VFs to be reserved for each SR-IOV interface. Format \"<interface_name1>:<numvfs1>,<interface_name2>:<numvfs2>\" Example \"eth1:4096,eth2:128\"\n"
        },
        "PankoPassword": {
          "name": "PankoPassword",
          "type": "String",
          "noEcho": "true",
          "label": "PankoPassword",
          "default": "wKKKfj374ds8Pw7tcYyBUewpn",
          "description": "The password for the panko services."
        },
        "NeutronApiLoggingSource": {
          "name": "NeutronApiLoggingSource",
          "type": "Json",
          "noEcho": "false",
          "label": "NeutronApiLoggingSource",
          "default": {
            "tag": "openstack.neutron.api",
            "path": "/var/log/neutron/server.log"
          },
          "description": ""
        },
        "MysqlMaxConnections": {
          "name": "MysqlMaxConnections",
          "type": "Number",
          "noEcho": "false",
          "label": "MysqlMaxConnections",
          "default": 4096,
          "description": "Configures MySQL max_connections config setting"
        },
        "HeatCronPurgeDeletedHour": {
          "name": "HeatCronPurgeDeletedHour",
          "type": "String",
          "noEcho": "false",
          "label": "HeatCronPurgeDeletedHour",
          "default": "0",
          "description": "Cron to purge db entries marked as deleted and older than $age - Hour\n"
        },
        "DockerGnocchiStatsdImage": {
          "name": "DockerGnocchiStatsdImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerGnocchiStatsdImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-gnocchi-statsd-docker:20171004.1",
          "description": "image"
        },
        "InternalApiSubnetName": {
          "name": "InternalApiSubnetName",
          "type": "String",
          "noEcho": "false",
          "label": "InternalApiSubnetName",
          "default": "internal_api_subnet",
          "description": "The name of the internal_api subnet in Neutron."
        },
        "MonitoringSubscriptionPacemaker": {
          "name": "MonitoringSubscriptionPacemaker",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionPacemaker",
          "default": "overcloud-pacemaker",
          "description": ""
        },
        "DockerHAProxyImage": {
          "name": "DockerHAProxyImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerHAProxyImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-haproxy-docker:20171004.1",
          "description": "image"
        },
        "HorizonDebug": {
          "name": "HorizonDebug",
          "type": "String",
          "noEcho": "false",
          "label": "HorizonDebug",
          "default": false,
          "description": "Set to True to enable debugging Horizon service."
        },
        "HAProxyStatsUser": {
          "name": "HAProxyStatsUser",
          "type": "String",
          "noEcho": "false",
          "label": "HAProxyStatsUser",
          "default": "admin",
          "description": "User for HAProxy stats endpoint"
        },
        "KeystoneCronTokenFlushMonthday": {
          "name": "KeystoneCronTokenFlushMonthday",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "KeystoneCronTokenFlushMonthday",
          "default": "*",
          "description": "Cron to purge expired tokens - Month Day\n"
        },
        "DockerSwiftContainerImage": {
          "name": "DockerSwiftContainerImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerSwiftContainerImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-swift-container-docker:20171004.1",
          "description": "image"
        },
        "NetworkHostnameMap": {
          "name": "NetworkHostnameMap",
          "type": "Json",
          "noEcho": "false",
          "label": "NetworkHostnameMap",
          "default": [],
          "description": ""
        },
        "CeilometerDebug": {
          "name": "CeilometerDebug",
          "type": "String",
          "noEcho": "false",
          "label": "CeilometerDebug",
          "default": "",
          "description": "Set to True to enable debugging Ceilometer services."
        },
        "TenantAllocationPools": {
          "name": "TenantAllocationPools",
          "type": "Json",
          "noEcho": "false",
          "label": "TenantAllocationPools",
          "default": [
            {
              "end": "10.10.84.200",
              "start": "10.10.84.20"
            }
          ],
          "description": "Ip allocation pool range for the tenant network."
        },
        "ServiceNetMapDefaults": {
          "name": "ServiceNetMapDefaults",
          "type": "Json",
          "noEcho": "false",
          "label": "ServiceNetMapDefaults",
          "default": {
            "RabbitmqNetwork": "internal_api",
            "CinderIscsiNetwork": "storage",
            "PublicNetwork": "external",
            "IronicInspectorNetwork": "ctlplane",
            "MysqlNetwork": "internal_api",
            "HorizonNetwork": "internal_api",
            "OctaviaApiNetwork": "internal_api",
            "BarbicanApiNetwork": "internal_api",
            "SaharaApiNetwork": "internal_api",
            "RedisNetwork": "internal_api",
            "NovaVncProxyNetwork": "internal_api",
            "CinderApiNetwork": "internal_api",
            "ContrailTsnNetwork": "internal_api",
            "ApacheNetwork": "internal_api",
            "HeatApiNetwork": "internal_api",
            "ComputeSriovHostnameResolveNetwork": "internal_api",
            "CephClusterNetwork": "storage_mgmt",
            "PankoApiNetwork": "internal_api",
            "KeystonePublicApiNetwork": "internal_api",
            "EtcdNetwork": "internal_api",
            "TackerApiNetwork": "internal_api",
            "ContrailDatabaseNetwork": "internal_api",
            "NovaApiNetwork": "internal_api",
            "ContrailAnalyticsNetwork": "internal_api",
            "ZaqarApiNetwork": "internal_api",
            "OvnDbsNetwork": "internal_api",
            "SwiftProxyNetwork": "storage",
            "HeatApiCfnNetwork": "internal_api",
            "NeutronApiNetwork": "internal_api",
            "GnocchiApiNetwork": "internal_api",
            "Ec2ApiNetwork": "internal_api",
            "Ec2ApiMetadataNetwork": "internal_api",
            "MemcachedNetwork": "internal_api",
            "CephRgwNetwork": "storage",
            "CephStorageHostnameResolveNetwork": "storage",
            "CeilometerApiNetwork": "internal_api",
            "MongodbNetwork": "internal_api",
            "IronicApiNetwork": "ctlplane",
            "OpendaylightApiNetwork": "internal_api",
            "PacemakerRemoteNetwork": "internal_api",
            "HeatApiCloudwatchNetwork": "internal_api",
            "SwiftStorageNetwork": "storage_mgmt",
            "NeutronTenantNetwork": "tenant",
            "ManilaApiNetwork": "internal_api",
            "ContrailWebuiNetwork": "internal_api",
            "KeystoneAdminApiNetwork": "ctlplane",
            "IronicNetwork": "ctlplane",
            "NovaLibvirtNetwork": "internal_api",
            "ContrailConfigNetwork": "internal_api",
            "CephMonNetwork": "storage",
            "MistralApiNetwork": "internal_api",
            "QdrNetwork": "internal_api",
            "NovaColdMigrationNetwork": "ctlplane",
            "ContrailAnalyticsDatabaseNetwork": "internal_api",
            "NovaMetadataNetwork": "internal_api",
            "AodhApiNetwork": "internal_api",
            "NovaPlacementNetwork": "internal_api",
            "GlanceApiNetwork": "internal_api",
            "ContrailControlNetwork": "internal_api",
            "ControllerHostnameResolveNetwork": "internal_api",
            "CongressApiNetwork": "internal_api"
          },
          "description": "Mapping of service_name -> network name. Typically set via parameter_defaults in the resource registry."
        },
        "MonitoringSubscriptionMemcached": {
          "name": "MonitoringSubscriptionMemcached",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionMemcached",
          "default": "overcloud-memcached",
          "description": ""
        },
        "MysqlClustercheckPassword": {
          "name": "MysqlClustercheckPassword",
          "type": "String",
          "noEcho": "true",
          "label": "MysqlClustercheckPassword",
          "default": "t6T77TV6Bfeyg4scNR6zG8BNN",
          "description": ""
        },
        "OvsPmdCoreList": {
          "name": "OvsPmdCoreList",
          "type": "String",
          "noEcho": "false",
          "allowedPattern": "[0-9,-]*",
          "label": "OvsPmdCoreList",
          "default": "",
          "description": "A list or range of CPU cores for PMD threads to be pinned to.  Note, NIC location to cores on socket, number of hyper-threaded logical cores, and desired number of PMD threads can all play a role in configuring this setting.  These cores should be on the same socket where OvsDpdkSocketMemory is assigned.  If using hyperthreading then specify both logical cores that would equal the physical core. Also, specifying more than one core will trigger multiple PMD threads to be spawned which may improve dataplane performance.\n"
        },
        "MonitoringSubscriptionHeatEngine": {
          "name": "MonitoringSubscriptionHeatEngine",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionHeatEngine",
          "default": "overcloud-heat-engine",
          "description": ""
        },
        "OvsEnableDpdk": {
          "name": "OvsEnableDpdk",
          "type": "Boolean",
          "noEcho": "false",
          "label": "OvsEnableDpdk",
          "default": false,
          "description": "Whether or not to configure enable DPDK in OVS"
        },
        "ComputeSriovCount": {
          "name": "ComputeSriovCount",
          "type": "Number",
          "noEcho": "false",
          "label": "ComputeSriovCount",
          "default": 1,
          "description": "Number of ComputeSriov nodes to deploy"
        },
        "CephClientKey": {
          "name": "CephClientKey",
          "type": "String",
          "noEcho": "true",
          "label": "CephClientKey",
          "default": "AQC6QwFaAAAAABAAuuLfsBNS8oBzQ02LEfGpxA==",
          "description": "The Ceph client key. Can be created with ceph-authtool --gen-print-key."
        },
        "DockerInsecureRegistryAddress": {
          "name": "DockerInsecureRegistryAddress",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "DockerInsecureRegistryAddress",
          "default": "docker-registry.engineering.redhat.com",
          "description": "Optional. The IP Address and Port of an insecure docker namespace that will be configured in /etc/sysconfig/docker. The value can be multiple addresses separated by commas."
        },
        "HypervisorNeutronPhysicalBridge": {
          "name": "HypervisorNeutronPhysicalBridge",
          "type": "String",
          "noEcho": "false",
          "label": "HypervisorNeutronPhysicalBridge",
          "default": "br-ex",
          "description": "An OVS bridge to create on each hypervisor. This defaults to br-ex the same as the control plane nodes, as we have a uniform configuration of the openvswitch agent. Typically should not need to be changed.\n"
        },
        "ExternalNetworkVlanID": {
          "name": "ExternalNetworkVlanID",
          "type": "Number",
          "noEcho": "false",
          "label": "ExternalNetworkVlanID",
          "default": 10,
          "description": "Vlan ID for the external network traffic."
        },
        "DnsServers": {
          "name": "DnsServers",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "DnsServers",
          "default": [
            "10.11.5.19",
            "8.8.8.8",
            "8.8.4.4"
          ],
          "description": "A list of DNS servers (2 max for some implementations) that will be added to resolv.conf."
        },
        "ManagePipeline": {
          "name": "ManagePipeline",
          "type": "Boolean",
          "noEcho": "false",
          "label": "ManagePipeline",
          "default": false,
          "description": "Whether to manage pipeline.yaml."
        },
        "SwiftMinPartHours": {
          "name": "SwiftMinPartHours",
          "type": "Number",
          "noEcho": "false",
          "label": "SwiftMinPartHours",
          "default": 1,
          "description": "The minimum time (in hours) before a partition in a ring can be moved following a rebalance."
        },
        "KeystoneSSLCertificate": {
          "name": "KeystoneSSLCertificate",
          "type": "String",
          "noEcho": "false",
          "label": "KeystoneSSLCertificate",
          "default": "",
          "description": "Keystone certificate for verifying token validity."
        },
        "NeutronL3HA": {
          "name": "NeutronL3HA",
          "type": "String",
          "noEcho": "false",
          "label": "NeutronL3HA",
          "default": "",
          "description": "Whether to enable HA for virtual routers. When not set, L3 HA will be\nautomatically enabled if the number of nodes hosting controller\nconfigurations and DVR is disabled. Valid values are 'true' or 'false'\nThis parameter is being deprecated in Newton and is scheduled to be\nremoved in Ocata.  Future releases will enable L3 HA by default if it is\nappropriate for the deployment type. Alternate mechanisms will be\navailable to override.\n"
        },
        "controller_names": {
          "label": "controller_names",
          "name": "controller_names",
          "description": "",
          "type": "CommaDelimitedList",
          "noEcho": "false"
        },
        "ControlPlaneIP": {
          "name": "ControlPlaneIP",
          "type": "String",
          "noEcho": "false",
          "label": "ControlPlaneIP",
          "default": "",
          "description": "IP address on the control plane"
        },
        "NovaPlacementLoggingSource": {
          "name": "NovaPlacementLoggingSource",
          "type": "Json",
          "noEcho": "false",
          "label": "NovaPlacementLoggingSource",
          "default": {
            "tag": "openstack.nova.placement",
            "path": "/var/log/httpd/nova_placement_wsgi_error_ssl.log"
          },
          "description": ""
        },
        "StorageNetCidr": {
          "name": "StorageNetCidr",
          "type": "String",
          "noEcho": "false",
          "label": "StorageNetCidr",
          "default": "10.10.82.0/24",
          "description": "Cidr for the storage network."
        },
        "EventPipelinePublishers": {
          "name": "EventPipelinePublishers",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "EventPipelinePublishers",
          "default": [
            "gnocchi://",
            "panko://"
          ],
          "description": "A list of publishers to put in event_pipeline.yaml. When the collector is used, override this with notifier:// publisher. If zaqar is enabled, you can also publish to a zaqar queue by including \"zaqar://?queue=queue_name\" in this list. Set ManageEventPipeline to true for override to take effect.\n"
        },
        "MonitoringSubscriptionHorizon": {
          "name": "MonitoringSubscriptionHorizon",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionHorizon",
          "default": "overcloud-horizon",
          "description": ""
        },
        "CeilometerMeteringSecret": {
          "name": "CeilometerMeteringSecret",
          "type": "String",
          "noEcho": "true",
          "label": "CeilometerMeteringSecret",
          "default": "gbf89UTJuT74VxVnYVDqBPr3M",
          "description": "Secret shared by the ceilometer services."
        },
        "MonitoringSubscriptionHaproxy": {
          "name": "MonitoringSubscriptionHaproxy",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionHaproxy",
          "default": "overcloud-haproxy",
          "description": ""
        },
        "StorageNetworkVlanID": {
          "name": "StorageNetworkVlanID",
          "type": "Number",
          "noEcho": "false",
          "label": "StorageNetworkVlanID",
          "default": 132,
          "description": "Vlan ID for the storage network traffic."
        },
        "HostnameMap": {
          "name": "HostnameMap",
          "type": "Json",
          "noEcho": "false",
          "label": "HostnameMap",
          "default": {},
          "description": "Optional mapping to override hostnames"
        },
        "SwiftRingGetTempurl": {
          "name": "SwiftRingGetTempurl",
          "type": "String",
          "noEcho": "false",
          "label": "SwiftRingGetTempurl",
          "default": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud-swift-rings/swift-rings.tar.gz?temp_url_sig=d013b2ecb335bfebd3d87950c03dd8f1536e5bcc&temp_url_expires=1510140167",
          "description": "A temporary Swift URL to download rings from."
        },
        "DockerAodhListenerImage": {
          "name": "DockerAodhListenerImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerAodhListenerImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-aodh-listener-docker:20171004.1",
          "description": "image"
        },
        "DockerNovaConsoleauthImage": {
          "name": "DockerNovaConsoleauthImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerNovaConsoleauthImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-nova-consoleauth-docker:20171004.1",
          "description": "image"
        },
        "NovaVncproxyLoggingSource": {
          "name": "NovaVncproxyLoggingSource",
          "type": "Json",
          "noEcho": "false",
          "label": "NovaVncproxyLoggingSource",
          "default": {
            "tag": "openstack.nova.vncproxy",
            "path": "/var/log/nova/nova-vncproxy.log"
          },
          "description": ""
        },
        "StorageMgmtNetEnableDHCP": {
          "name": "StorageMgmtNetEnableDHCP",
          "type": "Boolean",
          "noEcho": "false",
          "label": "StorageMgmtNetEnableDHCP",
          "default": false,
          "description": "Whether to enable DHCP on the associated subnet (IPv4 only)."
        },
        "LoggingUsesSSL": {
          "name": "LoggingUsesSSL",
          "type": "Boolean",
          "noEcho": "false",
          "label": "LoggingUsesSSL",
          "default": false,
          "description": "A boolean value indicating whether or not we should forward log messages use the secure_forward plugin.\n"
        },
        "KeystoneCronTokenFlushHour": {
          "name": "KeystoneCronTokenFlushHour",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "KeystoneCronTokenFlushHour",
          "default": "*",
          "description": "Cron to purge expired tokens - Hour\n"
        },
        "DockerCeilometerCentralImage": {
          "name": "DockerCeilometerCentralImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerCeilometerCentralImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-ceilometer-central-docker:20171004.1",
          "description": "image"
        },
        "ConfigCollectSplay": {
          "name": "ConfigCollectSplay",
          "type": "Number",
          "noEcho": "false",
          "label": "ConfigCollectSplay",
          "default": 30,
          "description": "Maximum amount of time to possibly to delay configuation collection\npolling. Defaults to 30 seconds. Set to 0 to disable it which will cause\nthe configuration collection to occur as soon as the collection process\nstarts.  This setting is used to prevent the configuration collection\nprocesses from polling all at the exact same time.\n"
        },
        "GlanceDebug": {
          "name": "GlanceDebug",
          "type": "String",
          "noEcho": "false",
          "label": "GlanceDebug",
          "default": "",
          "description": "Set to True to enable debugging Glance service."
        },
        "ControllerServerMetadata": {
          "name": "ControllerServerMetadata",
          "type": "Json",
          "noEcho": "false",
          "label": "ControllerServerMetadata",
          "default": {},
          "description": "Extra properties or metadata passed to Nova for the created nodes in the overcloud. It's accessible via the Nova metadata API. This option is role-specific and is merged with the values given to the ServerMetadata parameter.\n"
        },
        "NeutronDnsDomain": {
          "name": "NeutronDnsDomain",
          "type": "String",
          "noEcho": "false",
          "label": "NeutronDnsDomain",
          "default": "openstacklocal",
          "description": "Domain to use for building the hostnames."
        },
        "CeilometerPassword": {
          "name": "CeilometerPassword",
          "type": "String",
          "noEcho": "true",
          "label": "CeilometerPassword",
          "default": "uUgGWzqenJNG6Arg6WpDnuDX4",
          "description": "The password for the ceilometer service account."
        },
        "ExternalSubnetName": {
          "name": "ExternalSubnetName",
          "type": "String",
          "noEcho": "false",
          "label": "ExternalSubnetName",
          "default": "external_subnet",
          "description": "The name of the external subnet in Neutron."
        },
        "LoggingDefaultSources": {
          "name": "LoggingDefaultSources",
          "type": "Json",
          "noEcho": "false",
          "label": "LoggingDefaultSources",
          "default": [],
          "description": "A list of default logging sources for fluentd.  You should only override this parameter if you wish to disable the default logging sources.  Use LoggingExtraSources to define additional source configurations.\n"
        },
        "NeighbourGcThreshold2": {
          "name": "NeighbourGcThreshold2",
          "type": "Number",
          "noEcho": "false",
          "label": "NeighbourGcThreshold2",
          "default": 2048,
          "description": "Configures sysctl net.ipv4.neigh.default.gc_thresh2 value. This is the soft maximum number of entries to keep in the ARP cache. The garbage collector will  allow the number of entries to exceed this for 5 seconds before collection will be performed."
        },
        "NeutronMechanismDrivers": {
          "name": "NeutronMechanismDrivers",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "NeutronMechanismDrivers",
          "default": [
            "sriovnicswitch",
            "openvswitch"
          ],
          "description": "The mechanism drivers for the Neutron tenant network.\n"
        },
        "DockerSwiftRingbuilderConfigImage": {
          "name": "DockerSwiftRingbuilderConfigImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerSwiftRingbuilderConfigImage",
          "default": "",
          "description": "Fake parameter to bypass config_volume yaml validation"
        },
        "SnmpdOptions": {
          "name": "SnmpdOptions",
          "type": "String",
          "noEcho": "false",
          "label": "SnmpdOptions",
          "default": "-LS0-5d",
          "description": "A string containing the commandline options passed to snmpd"
        },
        "KeystoneCronTokenFlushUser": {
          "name": "KeystoneCronTokenFlushUser",
          "type": "String",
          "noEcho": "false",
          "label": "KeystoneCronTokenFlushUser",
          "default": "keystone",
          "description": "Cron to purge expired tokens - User\n"
        },
        "ValidateFqdn": {
          "name": "ValidateFqdn",
          "type": "Boolean",
          "noEcho": "false",
          "label": "ValidateFqdn",
          "default": false,
          "description": "Optional validation to ensure FQDN as set by Nova matches the name set in /etc/hosts."
        },
        "MonitoringSubscriptionAodhEvaluator": {
          "name": "MonitoringSubscriptionAodhEvaluator",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionAodhEvaluator",
          "default": "overcloud-ceilometer-aodh-evaluator",
          "description": ""
        },
        "TenantNetValueSpecs": {
          "name": "TenantNetValueSpecs",
          "type": "Json",
          "noEcho": "false",
          "label": "TenantNetValueSpecs",
          "default": {
            "provider:network_type": "flat",
            "provider:physical_network": "tenant"
          },
          "description": "Value specs for the tenant network."
        },
        "HeatCronPurgeDeletedAge": {
          "name": "HeatCronPurgeDeletedAge",
          "type": "String",
          "noEcho": "false",
          "label": "HeatCronPurgeDeletedAge",
          "default": "30",
          "description": "Cron to purge db entries marked as deleted and older than $age - Age\n"
        },
        "DockerSwiftObjectImage": {
          "name": "DockerSwiftObjectImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerSwiftObjectImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-swift-object-docker:20171004.1",
          "description": "image"
        },
        "DockerNovaLibvirtConfigImage": {
          "name": "DockerNovaLibvirtConfigImage",
          "type": "String",
          "noEcho": "false",
          "label": "DockerNovaLibvirtConfigImage",
          "default": "docker-registry.engineering.redhat.com/rhosp12/openstack-nova-compute-docker:20171004.1",
          "description": "The container image to use for the nova_libvirt config_volume"
        },
        "NeutronDhcpAgentDnsmasqDnsServers": {
          "name": "NeutronDhcpAgentDnsmasqDnsServers",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "NeutronDhcpAgentDnsmasqDnsServers",
          "default": [],
          "description": "List of servers to use as dnsmasq forwarders"
        },
        "HAProxyStatsPassword": {
          "name": "HAProxyStatsPassword",
          "type": "String",
          "noEcho": "true",
          "label": "HAProxyStatsPassword",
          "default": "6K8pPYufzuWjPgMQWv6cjK8wn",
          "description": "Password for HAProxy stats endpoint"
        },
        "ManagementAllocationPools": {
          "name": "ManagementAllocationPools",
          "type": "Json",
          "noEcho": "false",
          "label": "ManagementAllocationPools",
          "default": [
            {
              "end": "10.0.1.250",
              "start": "10.0.1.4"
            }
          ],
          "description": "Ip allocation pool range for the management network."
        },
        "MemcachedMaxMemory": {
          "name": "MemcachedMaxMemory",
          "type": "String",
          "noEcho": "false",
          "label": "MemcachedMaxMemory",
          "default": "50%",
          "description": "The maximum amount of memory for memcached to be configured to use when installed. This can be either a percentage ('50%') or a fixed value ('2048')."
        },
        "MonitoringSubscriptionSwiftProxy": {
          "name": "MonitoringSubscriptionSwiftProxy",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionSwiftProxy",
          "default": "overcloud-swift-proxy",
          "description": ""
        },
        "TenantIpUri": {
          "name": "TenantIpUri",
          "type": "String",
          "noEcho": "false",
          "label": "TenantIpUri",
          "default": "",
          "description": "IP address with brackets in case of IPv6"
        },
        "ControllerParameters": {
          "name": "ControllerParameters",
          "type": "Json",
          "noEcho": "false",
          "label": "ControllerParameters",
          "default": {},
          "description": "Optional Role Specific parameters to be provided to service"
        },
        "InternalApiNetEnableDHCP": {
          "name": "InternalApiNetEnableDHCP",
          "type": "Boolean",
          "noEcho": "false",
          "label": "InternalApiNetEnableDHCP",
          "default": false,
          "description": "Whether to enable DHCP on the associated subnet (IPv4 only)."
        },
        "CinderVolumeLoggingSource": {
          "name": "CinderVolumeLoggingSource",
          "type": "Json",
          "noEcho": "false",
          "label": "CinderVolumeLoggingSource",
          "default": {
            "tag": "openstack.cinder.volume",
            "path": "/var/log/cinder/cinder-volume.log"
          },
          "description": ""
        },
        "NetworkDeploymentActions": {
          "name": "NetworkDeploymentActions",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "NetworkDeploymentActions",
          "default": [
            "CREATE"
          ],
          "description": "Heat action when to apply network configuration changes\n"
        },
        "TenantIpSubnet": {
          "name": "TenantIpSubnet",
          "type": "String",
          "noEcho": "false",
          "label": "TenantIpSubnet",
          "default": "",
          "description": "IP address/subnet on the tenant network"
        },
        "KeystoneLDAPBackendConfigs": {
          "name": "KeystoneLDAPBackendConfigs",
          "type": "Json",
          "noEcho": "true",
          "label": "KeystoneLDAPBackendConfigs",
          "default": {},
          "description": "Hash containing the configurations for the LDAP backends configured in keystone."
        },
        "PacemakerLoggingSource": {
          "name": "PacemakerLoggingSource",
          "type": "Json",
          "noEcho": "false",
          "label": "PacemakerLoggingSource",
          "default": {
            "format": "/^(?<time>[^ ]*\\s*[^ ]* [^ ]*) \\[(?<pid>[^ ]*)\\] (?<host>[^ ]*) (?<message>.*)$/",
            "tag": "system.pacemaker",
            "path": "/var/log/pacemaker.log,/var/log/cluster/corosync.log"
          },
          "description": ""
        },
        "SwiftUseLocalDir": {
          "name": "SwiftUseLocalDir",
          "type": "Boolean",
          "noEcho": "false",
          "label": "SwiftUseLocalDir",
          "default": true,
          "description": "Use a local directory for Swift storage services when building rings"
        },
        "MemcachedIPv6": {
          "name": "MemcachedIPv6",
          "type": "Boolean",
          "noEcho": "false",
          "label": "MemcachedIPv6",
          "default": false,
          "description": "Enable IPv6 features in Memcached."
        },
        "CorosyncIPv6": {
          "name": "CorosyncIPv6",
          "type": "Boolean",
          "noEcho": "false",
          "label": "CorosyncIPv6",
          "default": false,
          "description": "Enable IPv6 in Corosync"
        },
        "NovaEnableRbdBackend": {
          "name": "NovaEnableRbdBackend",
          "type": "Boolean",
          "noEcho": "false",
          "label": "NovaEnableRbdBackend",
          "default": false,
          "description": "Whether to enable or not the Rbd backend for Nova"
        },
        "NumDpdkInterfaceRxQueues": {
          "name": "NumDpdkInterfaceRxQueues",
          "type": "Number",
          "noEcho": "false",
          "label": "NumDpdkInterfaceRxQueues",
          "default": 1,
          "description": "Number of Rx Queues required for DPDK bond or DPDK ports"
        },
        "PipelinePublishers": {
          "name": "PipelinePublishers",
          "type": "CommaDelimitedList",
          "noEcho": "false",
          "label": "PipelinePublishers",
          "default": [
            "gnocchi://"
          ],
          "description": "A list of publishers to put in pipeline.yaml. When the collector is used, override this with notifier:// publisher. Set ManagePipeline to true for override to take effect.\n"
        },
        "NeutronEnableARPResponder": {
          "name": "NeutronEnableARPResponder",
          "type": "Boolean",
          "noEcho": "false",
          "label": "NeutronEnableARPResponder",
          "default": false,
          "description": "Enable ARP responder feature in the OVS Agent.\n"
        },
        "GlanceNfsOptions": {
          "name": "GlanceNfsOptions",
          "type": "String",
          "noEcho": "false",
          "label": "GlanceNfsOptions",
          "default": "intr,context=system_u:object_r:glance_var_lib_t:s0",
          "description": "NFS mount options for image storage (when GlanceNfsEnabled is true)\n"
        },
        "GnocchiMetricdWorkers": {
          "name": "GnocchiMetricdWorkers",
          "type": "String",
          "noEcho": "false",
          "label": "GnocchiMetricdWorkers",
          "default": "%{::os_workers}",
          "description": "Number of workers for Gnocchi MetricD"
        },
        "NeutronDpdkMemoryChannels": {
          "name": "NeutronDpdkMemoryChannels",
          "type": "String",
          "noEcho": "false",
          "allowedPattern": "[0-9]*",
          "label": "NeutronDpdkMemoryChannels",
          "default": "",
          "description": "Number of memory channels to be used for DPDK"
        },
        "CAMap": {
          "name": "CAMap",
          "type": "Json",
          "noEcho": "false",
          "label": "CAMap",
          "default": {},
          "description": "Map containing the CA certs and information needed for deploying them.\n"
        },
        "TenantNetCidr": {
          "name": "TenantNetCidr",
          "type": "String",
          "noEcho": "false",
          "label": "TenantNetCidr",
          "default": "10.10.84.0/24",
          "description": "Cidr for the tenant network."
        },
        "ManageFirewall": {
          "name": "ManageFirewall",
          "type": "Boolean",
          "noEcho": "false",
          "label": "ManageFirewall",
          "default": true,
          "description": "Whether to manage IPtables rules."
        },
        "MonitoringSubscriptionCeilometerNotification": {
          "name": "MonitoringSubscriptionCeilometerNotification",
          "type": "String",
          "noEcho": "false",
          "label": "MonitoringSubscriptionCeilometerNotification",
          "default": "overcloud-ceilometer-agent-notification",
          "description": ""
        },
        "NovaDebug": {
          "name": "NovaDebug",
          "type": "String",
          "noEcho": "false",
          "label": "NovaDebug",
          "default": "",
          "description": "Set to True to enable debugging Nova services."
        },
        "HorizonPasswordValidator": {
          "name": "HorizonPasswordValidator",
          "type": "String",
          "noEcho": "false",
          "label": "HorizonPasswordValidator",
          "default": "",
          "description": "Regex for password validation"
        }
      }
    },
    "environment_parameters": {
      "UpdateIdentifier": "",
      "DockerHeatApiConfigImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-heat-api-docker:20171004.1",
      "DockerNovaLibvirtConfigImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-nova-compute-docker:20171004.1",
      "NovaPCIPassthrough": [
        {
          "physical_network": "tenant",
          "devname": "p1p1"
        }
      ],
      "DockerSwiftObjectImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-swift-object-docker:20171004.1",
      "DockerAodhNotifierImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-aodh-notifier-docker:20171004.1",
      "DockerMemcachedConfigImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-memcached-docker:20171004.1",
      "ExternalInterfaceDefaultRoute": "10.9.88.254",
      "OvercloudControllerFlavor": "control",
      "OvercloudComputeSriovFlavor": "compute",
      "NovaSchedulerDefaultFilters": [
        "RetryFilter",
        "AvailabilityZoneFilter",
        "RamFilter",
        "ComputeFilter",
        "ComputeCapabilitiesFilter",
        "ImagePropertiesFilter",
        "ServerGroupAntiAffinityFilter",
        "ServerGroupAffinityFilter",
        "PciPassthroughFilter"
      ],
      "DockerNovaLibvirtImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-nova-libvirt-docker:20171004.1",
      "ComputeSriovCount": 1,
      "DockerKeystoneImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-keystone-docker:20171004.1",
      "NeutronNetworkType": [
        "vlan"
      ],
      "EC2MetadataIp": "172.18.0.1",
      "DockerClustercheckImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-mariadb-docker:20171004.1",
      "DockerHeatApiImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-heat-api-docker:20171004.1",
      "DockerCeilometerComputeImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-ceilometer-compute-docker:20171004.1",
      "DockerCeilometerCentralImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-ceilometer-central-docker:20171004.1",
      "DockerNovaConsoleauthImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-nova-consoleauth-docker:20171004.1",
      "DockerHAProxyConfigImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-haproxy-docker:20171004.1",
      "DockerAodhListenerImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-aodh-listener-docker:20171004.1",
      "LocalProvisioningNicName": "p5p2",
      "SwiftRingGetTempurl": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud-swift-rings/swift-rings.tar.gz?temp_url_sig=d013b2ecb335bfebd3d87950c03dd8f1536e5bcc&temp_url_expires=1510140167",
      "StorageNetworkVlanID": 132,
      "DockerSwiftConfigImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-swift-proxy-server-docker:20171004.1",
      "DockerHeatEngineImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-heat-engine-docker:20171004.1",
      "StorageNetCidr": "10.10.82.0/24",
      "StorageAllocationPools": [
        {
          "end": "10.10.82.200",
          "start": "10.10.82.20"
        }
      ],
      "DnsServers": [
        "10.11.5.19",
        "8.8.8.8",
        "8.8.4.4"
      ],
      "DockerHeatConfigImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-heat-api-docker:20171004.1",
      "DockerHeatApiCfnConfigImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-heat-api-cfn-docker:20171004.1",
      "DockerInsecureRegistryAddress": "docker-registry.engineering.redhat.com",
      "DockerCrondImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-cron-docker:20171004.1",
      "DockerSwiftAccountImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-swift-account-docker:20171004.1",
      "DockerMemcachedImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-memcached-docker:20171004.1",
      "InternalApiNetCidr": "10.10.81.0/24",
      "DockerAodhApiImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-aodh-api-docker:20171004.1",
      "NeutronExternalNetworkBridge": "''",
      "DockerRabbitmqConfigImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-rabbitmq-docker:20171004.1",
      "DockerNovaApiImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-nova-api-docker:20171004.1",
      "DockerAodhEvaluatorImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-aodh-evaluator-docker:20171004.1",
      "DockerMysqlImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-mariadb-docker:20171004.1",
      "NeutronMechanismDrivers": [
        "sriovnicswitch",
        "openvswitch"
      ],
      "DockerRedisImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-redis-docker:20171004.1",
      "DockerGlanceApiConfigImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-glance-api-docker:20171004.1",
      "DockerNovaPlacementConfigImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-nova-placement-api-docker:20171004.1",
      "ComputeSriovParameters": {
        "KernelArgs": "default_hugepagesz=1GB hugepagesz=1G hugepages=32 iommu=pt intel_iommu=on",
        "NovaReservedHostMemory": 4096,
        "NovaVcpuPinSet": [
          "4,48,5,49,6,50,7,51"
        ],
        "TunedProfileName": "cpu-partitioning",
        "IsolCpusList": "4,48,5,49,6,50,7,51"
      },
      "DockerCeilometerConfigImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-ceilometer-central-docker:20171004.1",
      "DockerCrondConfigImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-cron-docker:20171004.1",
      "DockerNovaPlacementImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-nova-placement-api-docker:20171004.1",
      "StorageMgmtNetCidr": "10.10.83.0/24",
      "DockerPankoConfigImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-panko-api-docker:20171004.1",
      "DockerHorizonConfigImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-horizon-docker:20171004.1",
      "StorageMgmtAllocationPools": [
        {
          "end": "10.10.83.200",
          "start": "10.10.83.20"
        }
      ],
      "DockerNovaComputeImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-nova-compute-docker:20171004.1",
      "DockerGnocchiApiImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-gnocchi-api-docker:20171004.1",
      "DockerHorizonImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-horizon-docker:20171004.1",
      "DockerNovaMetadataImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-nova-api-docker:20171004.1",
      "ControlPlaneDefaultRoute": "172.18.0.1",
      "NeutronFlatNetworks": "datacentre",
      "DockerAodhConfigImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-aodh-api-docker:20171004.1",
      "DockerRabbitmqImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-rabbitmq-docker:20171004.1",
      "DockerCeilometerNotificationImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-ceilometer-notification-docker:20171004.1",
      "TenantNetCidr": "10.10.84.0/24",
      "DockerClustercheckConfigImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-mariadb-docker:20171004.1",
      "DockerNamespace": "docker-registry.engineering.redhat.com/rhosp12",
      "DockerKeystoneConfigImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-keystone-docker:20171004.1",
      "StackAction": "UPDATE",
      "InternalApiAllocationPools": [
        {
          "end": "10.10.81.200",
          "start": "10.10.81.20"
        }
      ],
      "DockerGlanceApiImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-glance-api-docker:20171004.1",
      "DeployIdentifier": 1510053775,
      "DockerMysqlClientConfigImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-mariadb-docker:20171004.1",
      "DockerNovaVncProxyImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-nova-novncproxy-docker:20171004.1",
      "node_admin_extra_ssh_keys": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC+f0Er3AeHJAPYhGxTGHbzyhWWnJAxV2lrXJPimIGF5c9DxfShVFWwKhccgQWq/u+oZ1HJC18kdu4hKhss2VuzNZe0SQRqJvOzdIJIy64nUPpO1gIdhwByYhPEb6ZBzNhC7YZiiYUu2p/BXvYOlMM5FipaLLJaFzap48QLnsQ08LZiiVPf43q0pCttlhQ6/NZucs0w6n6CS2t7f1WTxDj5BUoMmaMwdE28VXO32Sb6qXOkmH/LR5TXNllf+CvhRg7hc+KaqfwBuNe8sGvQDoUSZMOLgbbEsACkI5l6Mg9vsDvmBG1OpNmh0suGatpZqFMGVcaXLrLwUJEjwhc4v7R7 Generated by TripleO",
      "DockerNovaConductorImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-nova-conductor-docker:20171004.1",
      "NovaSchedulerAvailableFilters": [
        "nova.scheduler.filters.all_filters",
        "nova.scheduler.filters.pci_passthrough_filter.PciPassthroughFilter"
      ],
      "DockerMysqlConfigImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-mariadb-docker:20171004.1",
      "DockerHeatApiCfnImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-heat-api-cfn-docker:20171004.1",
      "DockerNovaConfigImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-nova-api-docker:20171004.1",
      "DockerHAProxyImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-haproxy-docker:20171004.1",
      "DockerSwiftProxyImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-swift-proxy-server-docker:20171004.1",
      "TenantNetworkVlanID": 134,
      "DockerRedisConfigImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-redis-docker:20171004.1",
      "DockerNovaSchedulerImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-nova-scheduler-docker:20171004.1",
      "NeutronSriovNumVFs": "p1p1:5",
      "NeutronSupportedPCIVendorDevs": [
        "8086:154d",
        "8086:10ed",
        "8086:10fb"
      ],
      "ExternalNetCidr": "10.9.88.0/24",
      "SwiftRingPutTempurl": "http://172.18.0.1:8080/v1/AUTH_d2ac31c5aa214c9c8bb857268a5829c7/overcloud-swift-rings/swift-rings.tar.gz?temp_url_sig=991f24658dbc8aeab3f33b43766ad33d23652ca9&temp_url_expires=1510140167",
      "TenantAllocationPools": [
        {
          "end": "10.10.84.200",
          "start": "10.10.84.20"
        }
      ],
      "ControllerCount": 1,
      "NeutronTunnelTypes": "",
      "DockerGnocchiStatsdImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-gnocchi-statsd-docker:20171004.1",
      "NeutronBridgeMappings": "datacentre:br-ex",
      "DockerGnocchiMetricdImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-gnocchi-metricd-docker:20171004.1",
      "DockerSwiftContainerImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-swift-container-docker:20171004.1",
      "DockerGnocchiConfigImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-gnocchi-api-docker:20171004.1",
      "StorageMgmtNetworkVlanID": 133,
      "ExternalAllocationPools": [
        {
          "end": "10.9.88.220",
          "start": "10.9.88.211"
        }
      ],
      "DockerPankoApiImage": "docker-registry.engineering.redhat.com/rhosp12/openstack-panko-api-docker:20171004.1",
      "ControlPlaneSubnetCidr": "24",
      "DockerNamespaceIsRegistry": true,
      "NeutronPhysicalDevMappings": "tenant:p1p1",
      "InternalApiNetworkVlanID": 131
    }
  }
}
